repository: opentelemetry-collector-contrib
component_type: receiver
components:
- name: activedirectorydsreceiver
  metadata:
    type: active_directory_ds
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - pjanotti
        seeking_new: true
      unsupported_platforms:
      - darwin
      - linux
    attributes:
      bind_type:
        description: The type of bind to the domain server.
        type: string
        name_override: type
        enum:
        - client
        - server
      direction:
        description: The direction of data flow.
        type: string
        enum:
        - received
        - sent
      network_data_type:
        description: The type of network data sent.
        type: string
        name_override: type
        enum:
        - compressed
        - uncompressed
      operation_type:
        description: The type of operation.
        type: string
        name_override: type
        enum:
        - read
        - search
        - write
      suboperation_type:
        description: The type of suboperation.
        type: string
        name_override: type
        enum:
        - search
        - security_descriptor_propagations_event
      sync_result:
        description: The result status of the sync request.
        type: string
        name_override: result
        enum:
        - other
        - schema_mismatch
        - success
      value_type:
        description: The type of value sent.
        type: string
        name_override: type
        enum:
        - distinguished_names
        - other
    metrics:
      active_directory.ds.bind.rate:
        description: The number of binds per second serviced by this domain controller.
        unit: '{binds}/s'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        attributes:
        - bind_type
        stability:
          level: development
      active_directory.ds.ldap.bind.last_successful.time:
        description: The amount of time taken for the last successful LDAP bind.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      active_directory.ds.ldap.bind.rate:
        description: The number of successful LDAP binds per second.
        unit: '{binds}/s'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      active_directory.ds.ldap.client.session.count:
        description: The number of connected LDAP client sessions.
        unit: '{sessions}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      active_directory.ds.ldap.search.rate:
        description: The number of LDAP searches per second.
        unit: '{searches}/s'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      active_directory.ds.name_cache.hit_rate:
        description: The percentage of directory object name component lookups that
          are satisfied by the Directory System Agent's name cache.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      active_directory.ds.notification.queued:
        description: The number of pending update notifications that have been queued
          to push to clients.
        unit: '{notifications}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      active_directory.ds.operation.rate:
        description: The number of operations performed per second.
        unit: '{operations}/s'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        attributes:
        - operation_type
        stability:
          level: development
      active_directory.ds.replication.network.io:
        description: The amount of network data transmitted by the Directory Replication
          Agent.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        - network_data_type
        stability:
          level: development
      active_directory.ds.replication.object.rate:
        description: The number of objects transmitted by the Directory Replication
          Agent per second.
        unit: '{objects}/s'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        attributes:
        - direction
        stability:
          level: development
      active_directory.ds.replication.operation.pending:
        description: The number of pending replication operations for the Directory
          Replication Agent.
        unit: '{operations}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      active_directory.ds.replication.property.rate:
        description: The number of properties transmitted by the Directory Replication
          Agent per second.
        unit: '{properties}/s'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        attributes:
        - direction
        stability:
          level: development
      active_directory.ds.replication.sync.object.pending:
        description: The number of objects remaining until the full sync completes
          for the Directory Replication Agent.
        unit: '{objects}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      active_directory.ds.replication.sync.request.count:
        description: The number of sync requests made by the Directory Replication
          Agent.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - sync_result
        stability:
          level: development
      active_directory.ds.replication.value.rate:
        description: The number of values transmitted by the Directory Replication
          Agent per second.
        unit: '{values}/s'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        attributes:
        - direction
        - value_type
        stability:
          level: development
      active_directory.ds.security_descriptor_propagations_event.queued:
        description: The number of security descriptor propagation events that are
          queued for processing.
        unit: '{events}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      active_directory.ds.suboperation.rate:
        description: The rate of sub-operations performed.
        unit: '{suboperations}/s'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        attributes:
        - suboperation_type
        stability:
          level: development
      active_directory.ds.thread.count:
        description: The number of threads in use by the directory service.
        unit: '{threads}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
- name: aerospikereceiver
  metadata:
    type: aerospike
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - antonblock
        seeking_new: true
    attributes:
      connection_op:
        description: Operation performed with a connection (open or close)
        type: string
        name_override: operation
        enum:
        - close
        - open
      connection_type:
        description: Type of connection to an Aerospike node
        type: string
        name_override: type
        enum:
        - client
        - fabric
        - heartbeat
      index_type:
        description: Type of index the operation was performed on
        type: string
        name_override: index
        enum:
        - primary
        - secondary
      namespace_component:
        description: Individual component of a namespace
        type: string
        name_override: component
        enum:
        - data
        - index
        - secondary_index
        - set_index
      query_result:
        description: Result of a query operation performed on a namespace
        type: string
        name_override: result
        enum:
        - abort
        - complete
        - error
        - timeout
      query_type:
        description: Type of query operation performed on a namespace
        type: string
        name_override: type
        enum:
        - aggregation
        - basic
        - long_basic
        - ops_background
        - short
        - short_basic
        - udf_background
      scan_result:
        description: Result of a scan operation performed on a namespace
        type: string
        name_override: result
        enum:
        - abort
        - complete
        - error
      scan_type:
        description: Type of scan operation performed on a namespace
        type: string
        name_override: type
        enum:
        - aggregation
        - basic
        - ops_background
        - udf_background
      transaction_result:
        description: Result of a transaction performed on a namespace
        type: string
        name_override: result
        enum:
        - error
        - filtered_out
        - not_found
        - success
        - timeout
      transaction_type:
        description: Type of transaction performed on a namespace
        type: string
        name_override: type
        enum:
        - delete
        - read
        - udf
        - write
    metrics:
      aerospike.namespace.disk.available:
        description: Minimum percentage of contiguous disk space free to the namespace
          across all devices
        unit: '%'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      aerospike.namespace.geojson.region_query_cells:
        description: Number of cell coverings for query region queried
        unit: '{cells}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      aerospike.namespace.geojson.region_query_false_positive:
        description: Number of points outside the region.
        unit: '{points}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      aerospike.namespace.geojson.region_query_points:
        description: Number of points within the region.
        unit: '{points}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      aerospike.namespace.geojson.region_query_requests:
        description: Number of geojson queries on the system since the uptime of the
          node.
        unit: '{queries}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      aerospike.namespace.memory.free:
        description: Percentage of the namespace's memory which is still free
        unit: '%'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      aerospike.namespace.memory.usage:
        description: Memory currently used by each component of the namespace
        unit: By
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - namespace_component
        stability:
          level: development
      aerospike.namespace.query.count:
        description: Number of query operations performed on the namespace
        unit: '{queries}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - index_type
        - query_result
        - query_type
        stability:
          level: development
      aerospike.namespace.scan.count:
        description: Number of scan operations performed on the namespace
        unit: '{scans}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - scan_result
        - scan_type
        stability:
          level: development
      aerospike.namespace.transaction.count:
        description: Number of transactions performed on the namespace
        unit: '{transactions}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - transaction_result
        - transaction_type
        stability:
          level: development
      aerospike.node.connection.count:
        description: Number of connections opened and closed to the node
        unit: '{connections}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - connection_op
        - connection_type
        stability:
          level: development
      aerospike.node.connection.open:
        description: Current number of open connections to the node
        unit: '{connections}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - connection_type
        stability:
          level: development
      aerospike.node.memory.free:
        description: Percentage of the node's memory which is still free
        unit: '%'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      aerospike.node.query.tracked:
        description: Number of queries tracked by the system.
        unit: '{queries}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
    resource_attributes:
      aerospike.namespace:
        description: Name of the Aerospike namespace
        type: string
      aerospike.node.name:
        description: Name of the Aerospike node collected from
        type: string
- name: apachereceiver
  metadata:
    type: apache
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - colelaven
        - ishleenk17
        emeritus:
        - djaglowski
    attributes:
      connection_state:
        description: The asynchronous connection state reported by Apache's server-status.
        type: string
        enum:
        - closing
        - keepalive
        - writing
      cpu_level:
        description: Level of processes.
        type: string
        name_override: level
        enum:
        - children
        - self
      cpu_mode:
        description: Mode of processes.
        type: string
        name_override: mode
        enum:
        - system
        - user
      scoreboard_state:
        description: The state of a connection.
        type: string
        name_override: state
        enum:
        - closing
        - dnslookup
        - finishing
        - idle_cleanup
        - keepalive
        - logging
        - open
        - reading
        - sending
        - starting
        - unknown
        - waiting
      workers_state:
        description: The state of workers.
        type: string
        name_override: state
        enum:
        - busy
        - idle
    metrics:
      apache.connections.async:
        description: The number of connections in different asynchronous states reported
          by Apache's server-status.
        unit: '{connections}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        attributes:
        - connection_state
        stability:
          level: development
      apache.cpu.load:
        description: Current load of the CPU.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
          input_type: string
        attributes: []
        stability:
          level: development
      apache.cpu.time:
        description: Jiffs used by processes of given category.
        unit: '{jiff}'
        enabled: true
        sum:
          value_type: double
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - cpu_level
        - cpu_mode
        stability:
          level: development
      apache.current_connections:
        description: The number of active connections currently attached to the HTTP
          server.
        unit: '{connections}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      apache.load.1:
        description: The average server load during the last minute.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
          input_type: string
        attributes: []
        stability:
          level: development
      apache.load.15:
        description: The average server load during the last 15 minutes.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
          input_type: string
        attributes: []
        stability:
          level: development
      apache.load.5:
        description: The average server load during the last 5 minutes.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
          input_type: string
        attributes: []
        stability:
          level: development
      apache.request.time:
        description: Total time spent on handling requests.
        unit: ms
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      apache.requests:
        description: The number of requests serviced by the HTTP server per second.
        unit: '{requests}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      apache.scoreboard:
        description: The number of workers in each state.
        unit: '{workers}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - scoreboard_state
        stability:
          level: development
      apache.traffic:
        description: Total HTTP server traffic.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      apache.uptime:
        description: The amount of time that the server has been running in seconds.
        unit: s
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      apache.workers:
        description: The number of workers currently attached to the HTTP server.
        unit: '{workers}'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - workers_state
        stability:
          level: development
    resource_attributes:
      apache.server.name:
        description: The name of the Apache HTTP server.
        type: string
      apache.server.port:
        description: The port of the Apache HTTP server.
        type: string
- name: apachesparkreceiver
  metadata:
    type: apachespark
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - Caleb-Hurshman
        - mrsillydog
    attributes:
      direction:
        description: Whether the metric is in regards to input or output operations.
        type: string
        enum:
        - in
        - out
      executor_task_result:
        description: The result of the executor tasks for which the metric was recorded.
        type: string
        name_override: result
        enum:
        - completed
        - failed
      gc_type:
        description: The type of the garbage collection performed for the metric.
        type: string
        enum:
        - major
        - minor
      job_result:
        description: The result of the job stages or tasks for which the metric was
          recorded.
        type: string
        name_override: result
        enum:
        - completed
        - failed
        - skipped
      location:
        description: The location of the memory for which the metric was recorded..
        type: string
        enum:
        - off_heap
        - on_heap
      pool_memory_type:
        description: The type of pool memory for which the metric was recorded.
        type: string
        name_override: type
        enum:
        - direct
        - mapped
      scheduler_status:
        description: The status of the DAGScheduler stages for which the metric was
          recorded.
        type: string
        name_override: status
        enum:
        - running
        - waiting
      source:
        description: The source from which data was fetched for the metric.
        type: string
        enum:
        - local
        - remote
      stage_active:
        description: Whether the stage for which the metric was recorded is active.
        type: bool
        name_override: active
      stage_complete:
        description: Whether the stage for which the metric was recorded is complete.
        type: bool
        name_override: complete
      stage_failed:
        description: Whether the stage for which the metric was recorded is failed.
        type: bool
        name_override: failed
      stage_pending:
        description: Whether the stage for which the metric was recorded is pending.
        type: bool
        name_override: pending
      stage_task_result:
        description: The result of the stage tasks for which the metric was recorded.
        type: string
        name_override: result
        enum:
        - completed
        - failed
        - killed
      state:
        description: The state of the memory for which the metric was recorded.
        type: string
        enum:
        - free
        - used
    metrics:
      spark.driver.block_manager.disk.usage:
        description: Disk space used by the BlockManager.
        unit: mb
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.block_manager.memory.usage:
        description: Memory usage for the driver's BlockManager.
        unit: mb
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - location
        - state
        stability:
          level: development
      spark.driver.code_generator.compilation.average_time:
        description: Average time spent during CodeGenerator source code compilation
          operations.
        unit: ms
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      spark.driver.code_generator.compilation.count:
        description: Number of source code compilation operations performed by the
          CodeGenerator.
        unit: '{ compilation }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.code_generator.generated_class.average_size:
        description: Average class size of the classes generated by the CodeGenerator.
        unit: bytes
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      spark.driver.code_generator.generated_class.count:
        description: Number of classes generated by the CodeGenerator.
        unit: '{ class }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.code_generator.generated_method.average_size:
        description: Average method size of the classes generated by the CodeGenerator.
        unit: bytes
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      spark.driver.code_generator.generated_method.count:
        description: Number of methods generated by the CodeGenerator.
        unit: '{ method }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.code_generator.source_code.average_size:
        description: Average size of the source code generated by a CodeGenerator
          code generation operation.
        unit: bytes
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      spark.driver.code_generator.source_code.operations:
        description: Number of source code generation operations performed by the
          CodeGenerator.
        unit: '{ operation }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.dag_scheduler.job.active:
        description: Number of active jobs currently being processed by the DAGScheduler.
        unit: '{ job }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.dag_scheduler.job.count:
        description: Number of jobs that have been submitted to the DAGScheduler.
        unit: '{ job }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.dag_scheduler.stage.count:
        description: Number of stages the DAGScheduler is either running or needs
          to run.
        unit: '{ stage }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - scheduler_status
        stability:
          level: development
      spark.driver.dag_scheduler.stage.failed:
        description: Number of failed stages run by the DAGScheduler.
        unit: '{ stage }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.executor.gc.operations:
        description: Number of garbage collection operations performed by the driver.
        unit: '{ gc_operation }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - gc_type
        stability:
          level: development
      spark.driver.executor.gc.time:
        description: Total elapsed time during garbage collection operations performed
          by the driver.
        unit: ms
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - gc_type
        stability:
          level: development
      spark.driver.executor.memory.execution:
        description: Amount of execution memory currently used by the driver.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - location
        stability:
          level: development
      spark.driver.executor.memory.jvm:
        description: Amount of memory used by the driver's JVM.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - location
        stability:
          level: development
      spark.driver.executor.memory.pool:
        description: Amount of pool memory currently used by the driver.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - pool_memory_type
        stability:
          level: development
      spark.driver.executor.memory.storage:
        description: Amount of storage memory currently used by the driver.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - location
        stability:
          level: development
      spark.driver.hive_external_catalog.file_cache_hits:
        description: Number of file cache hits on the HiveExternalCatalog.
        unit: '{ hit }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.hive_external_catalog.files_discovered:
        description: Number of files discovered while listing the partitions of a
          table in the Hive metastore
        unit: '{ file }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.hive_external_catalog.hive_client_calls:
        description: Number of calls to the underlying Hive Metastore client made
          by the Spark application.
        unit: '{ call }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.hive_external_catalog.parallel_listing_jobs:
        description: Number of parallel listing jobs initiated by the HiveExternalCatalog
          when listing partitions of a table.
        unit: '{ listing_job }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.hive_external_catalog.partitions_fetched:
        description: Table partitions fetched by the HiveExternalCatalog.
        unit: '{ partition }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.jvm_cpu_time:
        description: Current CPU time taken by the Spark driver.
        unit: ns
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.live_listener_bus.dropped:
        description: Number of events that have been dropped by the LiveListenerBus.
        unit: '{ event }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.live_listener_bus.posted:
        description: Number of events that have been posted on the LiveListenerBus.
        unit: '{ event }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.driver.live_listener_bus.processing_time.average:
        description: Average time taken for the LiveListenerBus to process an event
          posted to it.
        unit: ms
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      spark.driver.live_listener_bus.queue_size:
        description: Number of events currently waiting to be processed by the LiveListenerBus.
        unit: '{ event }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.executor.disk.usage:
        description: Disk space used by this executor for RDD storage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.executor.gc_time:
        description: Elapsed time the JVM spent in garbage collection in this executor.
        unit: ms
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.executor.input_size:
        description: Amount of data input for this executor.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.executor.memory.usage:
        description: Storage memory used by this executor.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.executor.shuffle.io.size:
        description: Amount of data written and read during shuffle operations for
          this executor.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      spark.executor.storage_memory.usage:
        description: The executor's storage memory usage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - location
        - state
        stability:
          level: development
      spark.executor.task.active:
        description: Number of tasks currently running in this executor.
        unit: '{ task }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.executor.task.limit:
        description: Maximum number of tasks that can run concurrently in this executor.
        unit: '{ task }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.executor.task.result:
        description: Number of tasks with a specific result in this executor.
        unit: '{ task }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - executor_task_result
        stability:
          level: development
      spark.executor.time:
        description: Elapsed time the JVM spent executing tasks in this executor.
        unit: ms
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.job.stage.active:
        description: Number of active stages in this job.
        unit: '{ stage }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.job.stage.result:
        description: Number of stages with a specific result in this job.
        unit: '{ stage }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - job_result
        stability:
          level: development
      spark.job.task.active:
        description: Number of active tasks in this job.
        unit: '{ task }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.job.task.result:
        description: Number of tasks with a specific result in this job.
        unit: '{ task }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - job_result
        stability:
          level: development
      spark.stage.disk.spilled:
        description: The amount of disk space used for storing portions of overly
          large data chunks that couldn't fit in memory in this stage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.executor.cpu_time:
        description: CPU time spent by the executor in this stage.
        unit: ns
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.executor.run_time:
        description: Amount of time spent by the executor in this stage.
        unit: ms
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.io.records:
        description: Number of records written and read in this stage.
        unit: '{ record }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      spark.stage.io.size:
        description: Amount of data written and read at this stage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      spark.stage.jvm_gc_time:
        description: The amount of time the JVM spent on garbage collection in this
          stage.
        unit: ms
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.memory.peak:
        description: Peak memory used by internal data structures created during shuffles,
          aggregations and joins in this stage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.memory.spilled:
        description: The amount of memory moved to disk due to size constraints (spilled)
          in this stage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.shuffle.blocks_fetched:
        description: Number of blocks fetched in shuffle operations in this stage.
        unit: '{ block }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - source
        stability:
          level: development
      spark.stage.shuffle.fetch_wait_time:
        description: Time spent in this stage waiting for remote shuffle blocks.
        unit: ms
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.shuffle.io.disk:
        description: Amount of data read to disk in shuffle operations (sometimes
          required for large blocks, as opposed to the default behavior of reading
          into memory).
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.shuffle.io.read.size:
        description: Amount of data read in shuffle operations in this stage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - source
        stability:
          level: development
      spark.stage.shuffle.io.records:
        description: Number of records written or read in shuffle operations in this
          stage.
        unit: '{ record }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      spark.stage.shuffle.io.write.size:
        description: Amount of data written in shuffle operations in this stage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.shuffle.write_time:
        description: Time spent blocking on writes to disk or buffer cache in this
          stage.
        unit: ns
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.status:
        description: A one-hot encoding representing the status of this stage.
        unit: '{ status }'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - stage_active
        - stage_complete
        - stage_failed
        - stage_pending
        stability:
          level: development
      spark.stage.task.active:
        description: Number of active tasks in this stage.
        unit: '{ task }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      spark.stage.task.result:
        description: Number of tasks with a specific result in this stage.
        unit: '{ task }'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - stage_task_result
        stability:
          level: development
      spark.stage.task.result_size:
        description: The amount of data transmitted back to the driver by all the
          tasks in this stage.
        unit: bytes
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes: []
        stability:
          level: development
    resource_attributes:
      spark.application.id:
        description: The ID of the application for which the metric was recorded.
        type: string
      spark.application.name:
        description: The name of the application for which the metric was recorded.
        type: string
      spark.executor.id:
        description: The ID of the executor for which the metric was recorded.
        type: string
      spark.job.id:
        description: The ID of the job for which the metric was recorded.
        type: int
      spark.stage.attempt.id:
        description: The ID of the stage attempt for which the metric was recorded.
        type: int
      spark.stage.id:
        description: The ID of the application stage for which the metric was recorded.
        type: int
- name: awscloudwatchreceiver
  metadata:
    type: awscloudwatch
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - schmikei
        emeritus:
        - djaglowski
        seeking_new: true
- name: awscontainerinsightreceiver
  metadata:
    type: awscontainerinsightreceiver
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - Aneurysm9
        - pxaws
- name: awsecscontainermetricsreceiver
  metadata:
    type: awsecscontainermetrics
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - Aneurysm9
- name: awsfirehosereceiver
  metadata:
    type: awsfirehose
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - Aneurysm9
        - axw
- name: awss3receiver
  metadata:
    type: awss3
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - metrics
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - adcharre
- name: awsxrayreceiver
  metadata:
    type: awsxray
    status:
      class: receiver
      stability:
        beta:
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - wangzlei
        - srprash
- name: azureblobreceiver
  metadata:
    type: azureblob
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - eedorenko
        - mx-psi
- name: azureeventhubreceiver
  metadata:
    type: azureeventhub
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - metrics
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - cparkins
        - dyl10s
        emeritus:
        - djaglowski
        seeking_new: true
- name: azuremonitorreceiver
  metadata:
    type: azuremonitor
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - nslaughter
        - celian-garcia
        - ishleenk17
    resource_attributes:
      azuremonitor.subscription:
        description: Azure subscription name
        type: string
      azuremonitor.subscription_id:
        description: Azure subscription ID
        type: string
      azuremonitor.tenant_id:
        description: Azure tenant ID
        type: string
- name: bigipreceiver
  metadata:
    type: bigip
    status:
      class: receiver
      stability:
        unmaintained:
        - metrics
      distributions:
      - contrib
      codeowners:
        emeritus:
        - StefanKurek
        seeking_new: true
    attributes:
      active.status:
        description: The active status.
        type: string
        name_override: status
        enum:
        - active
        - inactive
      availability.status:
        description: The availability status.
        type: string
        name_override: status
        enum:
        - available
        - offline
        - unknown
      direction:
        description: The direction of data.
        type: string
        enum:
        - received
        - sent
      enabled.status:
        description: The enabled status.
        type: string
        name_override: status
        enum:
        - disabled
        - enabled
    metrics:
      bigip.node.availability:
        description: Availability of the node.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - availability.status
        stability:
          level: development
      bigip.node.connection.count:
        description: Current number of connections to the node.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.node.data.transmitted:
        description: Amount of data transmitted to and from the node.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      bigip.node.enabled:
        description: Enabled state of of the node.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - enabled.status
        stability:
          level: development
      bigip.node.packet.count:
        description: Number of packets transmitted to and from the node.
        unit: '{packets}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      bigip.node.request.count:
        description: Number of requests to the node.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.node.session.count:
        description: Current number of sessions for the node.
        unit: '{sessions}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.pool.availability:
        description: Availability of the pool.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - availability.status
        stability:
          level: development
      bigip.pool.connection.count:
        description: Current number of connections to the pool.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.pool.data.transmitted:
        description: Amount of data transmitted to and from the pool.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      bigip.pool.enabled:
        description: Enabled state of of the pool.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - enabled.status
        stability:
          level: development
      bigip.pool.member.count:
        description: Total number of pool members.
        unit: '{members}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - active.status
        stability:
          level: development
      bigip.pool.packet.count:
        description: Number of packets transmitted to and from the pool.
        unit: '{packets}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      bigip.pool.request.count:
        description: Number of requests to the pool.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.pool_member.availability:
        description: Availability of the pool member.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - availability.status
        stability:
          level: development
      bigip.pool_member.connection.count:
        description: Current number of connections to the pool member.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.pool_member.data.transmitted:
        description: Amount of data transmitted to and from the pool member.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      bigip.pool_member.enabled:
        description: Enabled state of of the pool member.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - enabled.status
        stability:
          level: development
      bigip.pool_member.packet.count:
        description: Number of packets transmitted to and from the pool member.
        unit: '{packets}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      bigip.pool_member.request.count:
        description: Number of requests to the pool member.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.pool_member.session.count:
        description: Current number of sessions for the pool member.
        unit: '{sessions}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.virtual_server.availability:
        description: Availability of the virtual server.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - availability.status
        stability:
          level: development
      bigip.virtual_server.connection.count:
        description: Current number of connections to the virtual server.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      bigip.virtual_server.data.transmitted:
        description: Amount of data transmitted to and from the virtual server.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      bigip.virtual_server.enabled:
        description: Enabled state of of the virtual server.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - enabled.status
        stability:
          level: development
      bigip.virtual_server.packet.count:
        description: Number of packets transmitted to and from the virtual server.
        unit: '{packets}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      bigip.virtual_server.request.count:
        description: Number of requests to the virtual server.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
    resource_attributes:
      bigip.node.ip_address:
        description: The IP Address of the Big-IP Node.
        type: string
      bigip.node.name:
        description: The name of the Big-IP Node.
        type: string
      bigip.pool.name:
        description: The name of the Big-IP Pool.
        type: string
      bigip.pool_member.ip_address:
        description: The IP Address of the Big-IP Pool Member.
        type: string
      bigip.pool_member.name:
        description: The name of the Big-IP Pool Member.
        type: string
      bigip.virtual_server.destination:
        description: The destination for the Big-IP Virtual Server.
        type: string
      bigip.virtual_server.name:
        description: The name of the Big-IP Virtual Server.
        type: string
- name: carbonreceiver
  metadata:
    type: carbon
    status:
      class: receiver
      stability:
        unmaintained:
        - metrics
      distributions:
      - contrib
      codeowners:
        active: []
        emeritus:
        - aboguszewski-sumo
        seeking_new: true
- name: chronyreceiver
  metadata:
    type: chrony
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - MovieStoreGuy
        - jamesmoessis
    attributes:
      leap.status:
        description: how the chrony is handling leap seconds
        type: string
        enum:
        - delete_second
        - insert_second
        - normal
        - unsynchronised
    metrics:
      ntp.frequency.offset:
        description: The frequency is the rate by which the system s clock would be
          wrong if chronyd was not correcting it.
        unit: ppm
        enabled: false
        gauge:
          value_type: double
        attributes:
        - leap.status
        stability:
          level: development
      ntp.skew:
        description: This is the estimated error bound on the frequency.
        unit: ppm
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      ntp.stratum:
        description: The number of hops away from the reference system keeping the
          reference time
        unit: '{count}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      ntp.time.correction:
        description: The number of seconds difference between the system's clock and
          the reference clock
        unit: seconds
        enabled: true
        gauge:
          value_type: double
        attributes:
        - leap.status
        stability:
          level: development
      ntp.time.last_offset:
        description: The estimated local offset on the last clock update
        unit: seconds
        enabled: true
        gauge:
          value_type: double
        attributes:
        - leap.status
        stability:
          level: development
      ntp.time.rms_offset:
        description: the long term average of the offset value
        unit: seconds
        enabled: false
        gauge:
          value_type: double
        attributes:
        - leap.status
        stability:
          level: development
      ntp.time.root_delay:
        description: This is the total of the network path delays to the stratum-1
          system from which the system is ultimately synchronised.
        unit: seconds
        enabled: false
        gauge:
          value_type: double
        attributes:
        - leap.status
        stability:
          level: development
- name: ciscoosreceiver
  metadata:
    type: ciscoosreceiver
    status:
      class: receiver
      stability:
        development:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
    resource_attributes: {}
- name: cloudflarereceiver
  metadata:
    type: cloudflare
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - dehaansa
        seeking_new: true
- name: cloudfoundryreceiver
  metadata:
    type: cloudfoundry
    status:
      class: receiver
      stability:
        beta:
        - metrics
        development:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - crobert-1
        emeritus:
        - agoallikmaa
        - pellared
        seeking_new: true
- name: collectdreceiver
  metadata:
    type: collectd
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        seeking_new: true
- name: couchdbreceiver
  metadata:
    type: couchdb
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - antonblock
        emeritus:
        - djaglowski
        seeking_new: true
    attributes:
      http.method:
        description: An HTTP request method.
        type: string
        enum:
        - COPY
        - DELETE
        - GET
        - HEAD
        - OPTIONS
        - POST
        - PUT
      http.status_code:
        description: An HTTP status code.
        type: string
      operation:
        description: The operation type.
        type: string
        enum:
        - reads
        - writes
      view:
        description: The view type.
        type: string
        enum:
        - temporary_view_reads
        - view_reads
    metrics:
      couchdb.average_request_time:
        description: The average duration of a served request.
        unit: ms
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      couchdb.database.open:
        description: The number of open databases.
        unit: '{databases}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      couchdb.database.operations:
        description: The number of database operations.
        unit: '{operations}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - operation
        stability:
          level: development
      couchdb.file_descriptor.open:
        description: The number of open file descriptors.
        unit: '{files}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      couchdb.httpd.bulk_requests:
        description: The number of bulk requests.
        unit: '{requests}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      couchdb.httpd.requests:
        description: The number of HTTP requests by method.
        unit: '{requests}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - http.method
        stability:
          level: development
      couchdb.httpd.responses:
        description: The number of each HTTP status code.
        unit: '{responses}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - http.status_code
        stability:
          level: development
      couchdb.httpd.views:
        description: The number of views read.
        unit: '{views}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - view
        stability:
          level: development
    resource_attributes:
      couchdb.node.name:
        description: The name of the node.
        type: string
- name: datadogreceiver
  metadata:
    type: datadog
    status:
      class: receiver
      stability:
        alpha:
        - metrics
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - boostchicken
        - gouthamve
        - MovieStoreGuy
- name: dockerstatsreceiver
  metadata:
    type: docker_stats
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - jamesmoessis
        emeritus:
        - rmfitzpatrick
      unsupported_platforms:
      - darwin
      - windows
    attributes:
      core:
        description: The CPU core number when utilising per-CPU metrics.
        type: string
      device_major:
        description: Device major number for block IO operations.
        type: string
      device_minor:
        description: Device minor number for block IO operations.
        type: string
      interface:
        description: Network interface.
        type: string
      operation:
        description: Type of BlockIO operation.
        type: string
    metrics:
      container.blockio.io_merged_recursive:
        description: Number of bios/requests merged into requests belonging to this
          cgroup and its descendant cgroups (Only available with cgroups v1).
        unit: '{operations}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - device_major
        - device_minor
        - operation
        stability:
          level: development
      container.blockio.io_queued_recursive:
        description: Number of requests queued up for this cgroup and its descendant
          cgroups (Only available with cgroups v1).
        unit: '{operations}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - device_major
        - device_minor
        - operation
        stability:
          level: development
      container.blockio.io_service_bytes_recursive:
        description: Number of bytes transferred to/from the disk by the group and
          descendant groups.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - device_major
        - device_minor
        - operation
        stability:
          level: development
      container.blockio.io_service_time_recursive:
        description: Total amount of time in nanoseconds between request dispatch
          and request completion for the IOs done by this cgroup and descendant cgroups
          (Only available with cgroups v1).
        unit: ns
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - device_major
        - device_minor
        - operation
        stability:
          level: development
      container.blockio.io_serviced_recursive:
        description: Number of IOs (bio) issued to the disk by the group and descendant
          groups (Only available with cgroups v1).
        unit: '{operations}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - device_major
        - device_minor
        - operation
        stability:
          level: development
      container.blockio.io_time_recursive:
        description: Disk time allocated to cgroup (and descendant cgroups) per device
          in milliseconds (Only available with cgroups v1).
        unit: ms
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - device_major
        - device_minor
        - operation
        stability:
          level: development
      container.blockio.io_wait_time_recursive:
        description: Total amount of time the IOs for this cgroup (and descendant
          cgroups) spent waiting in the scheduler queues for service (Only available
          with cgroups v1).
        unit: ns
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - device_major
        - device_minor
        - operation
        stability:
          level: development
      container.blockio.sectors_recursive:
        description: Number of sectors transferred to/from disk by the group and descendant
          groups (Only available with cgroups v1).
        unit: '{sectors}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - device_major
        - device_minor
        - operation
        stability:
          level: development
      container.cpu.limit:
        description: CPU limit set for the container.
        unit: '{cpus}'
        enabled: false
        gauge:
          value_type: double
        stability:
          level: development
      container.cpu.logical.count:
        description: Number of cores available to the container.
        unit: '{cpus}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      container.cpu.shares:
        description: CPU shares set for the container.
        unit: '1'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      container.cpu.throttling_data.periods:
        description: Number of periods with throttling active.
        unit: '{periods}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.throttling_data.throttled_periods:
        description: Number of periods when the container hits its throttling limit.
        unit: '{periods}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.throttling_data.throttled_time:
        description: Aggregate time the container was throttled.
        unit: ns
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.usage.kernelmode:
        description: Time spent by tasks of the cgroup in kernel mode (Linux).  Time
          spent by all container processes in kernel mode (Windows).
        unit: ns
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.usage.percpu:
        description: Per-core CPU usage by the container (Only available with cgroups
          v1).
        unit: ns
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - core
        stability:
          level: development
      container.cpu.usage.system:
        description: System CPU usage, as reported by docker.
        unit: ns
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.usage.total:
        description: Total CPU time consumed.
        unit: ns
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.usage.usermode:
        description: Time spent by tasks of the cgroup in user mode (Linux).  Time
          spent by all container processes in user mode (Windows).
        unit: ns
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.utilization:
        description: Percent of CPU used by the container.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      container.memory.active_anon:
        description: The amount of anonymous memory that has been identified as active
          by the kernel.
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.active_file:
        description: Cache memory that has been identified as active by the kernel.
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.anon:
        description: Amount of memory used in anonymous mappings such as brk(), sbrk(),
          and mmap(MAP_ANONYMOUS) (Only available with cgroups v2).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.cache:
        description: The amount of memory used by the processes of this control group
          that can be associated precisely with a block on a block device (Only available
          with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.dirty:
        description: Bytes that are waiting to get written back to the disk, from
          this cgroup (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.fails:
        description: Number of times the memory limit was hit.
        unit: '{fails}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.file:
        description: Amount of memory used to cache filesystem data, including tmpfs
          and shared memory (Only available with cgroups v2).
        unit: By
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.hierarchical_memory_limit:
        description: The maximum amount of physical memory that can be used by the
          processes of this control group (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.hierarchical_memsw_limit:
        description: The maximum amount of RAM + swap that can be used by the processes
          of this control group (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.inactive_anon:
        description: The amount of anonymous memory that has been identified as inactive
          by the kernel.
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.inactive_file:
        description: Cache memory that has been identified as inactive by the kernel.
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.mapped_file:
        description: Indicates the amount of memory mapped by the processes in the
          control group (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.percent:
        description: Percentage of memory used. Not supported on Windows.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      container.memory.pgfault:
        description: Indicate the number of times that a process of the cgroup triggered
          a page fault.
        unit: '{faults}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.pgmajfault:
        description: Indicate the number of times that a process of the cgroup triggered
          a major fault.
        unit: '{faults}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.pgpgin:
        description: Number of pages read from disk by the cgroup (Only available
          with cgroups v1).
        unit: '{operations}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.pgpgout:
        description: Number of pages written to disk by the cgroup (Only available
          with cgroups v1).
        unit: '{operations}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.rss:
        description: 'The amount of memory that doesn’t correspond to anything on
          disk: stacks, heaps, and anonymous memory maps (Only available with cgroups
          v1).'
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.rss_huge:
        description: Number of bytes of anonymous transparent hugepages in this cgroup
          (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_active_anon:
        description: The amount of anonymous memory that has been identified as active
          by the kernel. Includes descendant cgroups (Only available with cgroups
          v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_active_file:
        description: Cache memory that has been identified as active by the kernel.
          Includes descendant cgroups (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_cache:
        description: Total amount of memory used by the processes of this cgroup (and
          descendants) that can be associated with a block on a block device. Also
          accounts for memory used by tmpfs (Only available with cgroups v1). Not
          supported on Windows.
        unit: By
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_dirty:
        description: Bytes that are waiting to get written back to the disk, from
          this cgroup and descendants (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_inactive_anon:
        description: The amount of anonymous memory that has been identified as inactive
          by the kernel. Includes descendant cgroups (Only available with cgroups
          v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_inactive_file:
        description: Cache memory that has been identified as inactive by the kernel.
          Includes descendant cgroups (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_mapped_file:
        description: Indicates the amount of memory mapped by the processes in the
          control group and descendant groups (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_pgfault:
        description: Indicate the number of times that a process of the cgroup (or
          descendant cgroups) triggered a page fault (Only available with cgroups
          v1).
        unit: '{faults}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.total_pgmajfault:
        description: Indicate the number of times that a process of the cgroup (or
          descendant cgroups) triggered a major fault (Only available with cgroups
          v1).
        unit: '{faults}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.total_pgpgin:
        description: Number of pages read from disk by the cgroup and descendant groups
          (Only available with cgroups v1).
        unit: '{operations}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.total_pgpgout:
        description: Number of pages written to disk by the cgroup and descendant
          groups (Only available with cgroups v1).
        unit: '{operations}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        stability:
          level: development
      container.memory.total_rss:
        description: 'The amount of memory that doesn’t correspond to anything on
          disk: stacks, heaps, and anonymous memory maps. Includes descendant cgroups
          (Only available with cgroups v1).'
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_rss_huge:
        description: Number of bytes of anonymous transparent hugepages in this cgroup
          and descendant cgroups (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_unevictable:
        description: The amount of memory that cannot be reclaimed. Includes descendant
          cgroups (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.total_writeback:
        description: Number of bytes of file/anon cache that are queued for syncing
          to disk in this cgroup and descendants (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.unevictable:
        description: The amount of memory that cannot be reclaimed.
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.usage.limit:
        description: Memory limit of the container. Not supported on Windows.
        unit: By
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.usage.max:
        description: Maximum memory usage.
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.usage.total:
        description: Memory usage of the container. This excludes the cache.
        unit: By
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.writeback:
        description: Number of bytes of file/anon cache that are queued for syncing
          to disk in this cgroup (Only available with cgroups v1).
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.network.io.usage.rx_bytes:
        description: Bytes received by the container.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - interface
        stability:
          level: development
      container.network.io.usage.rx_dropped:
        description: Incoming packets dropped.
        unit: '{packets}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - interface
        stability:
          level: development
      container.network.io.usage.rx_errors:
        description: Received errors. Not supported on Windows.
        unit: '{errors}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - interface
        stability:
          level: development
      container.network.io.usage.rx_packets:
        description: Packets received.
        unit: '{packets}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - interface
        stability:
          level: development
      container.network.io.usage.tx_bytes:
        description: Bytes sent.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - interface
        stability:
          level: development
      container.network.io.usage.tx_dropped:
        description: Outgoing packets dropped.
        unit: '{packets}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - interface
        stability:
          level: development
      container.network.io.usage.tx_errors:
        description: Sent errors. Not supported on Windows.
        unit: '{errors}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - interface
        stability:
          level: development
      container.network.io.usage.tx_packets:
        description: Packets sent.
        unit: '{packets}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - interface
        stability:
          level: development
      container.pids.count:
        description: Number of pids in the container's cgroup.
        unit: '{pids}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.pids.limit:
        description: Maximum number of pids in the container's cgroup.
        unit: '{pids}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.restarts:
        description: Number of restarts for the container.
        unit: '{restarts}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.uptime:
        description: Time elapsed since container start time.
        unit: s
        enabled: false
        gauge:
          value_type: double
        stability:
          level: development
    resource_attributes:
      container.command_line:
        description: The full command executed by the container.
        type: string
      container.hostname:
        description: The hostname of the container.
        type: string
      container.id:
        description: The ID of the container.
        type: string
      container.image.id:
        description: The ID of the container image.
        type: string
      container.image.name:
        description: The name of the docker image in use by the container.
        type: string
      container.name:
        description: The name of the container.
        type: string
      container.runtime:
        description: The runtime of the container. For this receiver, it will always
          be 'docker'.
        type: string
- name: elasticsearchreceiver
  metadata:
    type: elasticsearch
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - jsirianni
        - VihasMakwana
        - rogercoll
        emeritus:
        - djaglowski
        seeking_new: true
    attributes:
      cache_name:
        description: The name of cache.
        type: string
        enum:
        - fielddata
        - query
      circuit_breaker_name:
        description: The name of circuit breaker.
        type: string
        name_override: name
      cluster_published_difference_state:
        description: State of the published differences
        type: string
        name_override: state
        enum:
        - compatible
        - incompatible
      cluster_state_queue_state:
        description: State of the published differences
        type: string
        name_override: state
        enum:
        - committed
        - pending
      cluster_state_update_state:
        description: State of cluster state update
        type: string
        name_override: state
      cluster_state_update_type:
        description: Type of cluster state update
        type: string
        name_override: type
        enum:
        - commit
        - completion
        - computation
        - context_construction
        - master_apply
        - notification
      collector_name:
        description: The name of the garbage collector.
        type: string
        name_override: name
      direction:
        description: The direction of network data.
        type: string
        enum:
        - received
        - sent
      document_state:
        description: The state of the document.
        type: string
        name_override: state
        enum:
        - active
        - deleted
      get_result:
        description: Result of get operation
        type: string
        name_override: result
        enum:
        - hit
        - miss
      health_status:
        description: The health status of the cluster.
        type: string
        name_override: status
        enum:
        - green
        - red
        - yellow
      index_aggregation_type:
        description: Type of shard aggregation for index statistics
        type: string
        name_override: aggregation
        enum:
        - primary_shards
        - total
      indexing_pressure_stage:
        description: Stage of the indexing pressure
        type: string
        name_override: stage
        enum:
        - coordinating
        - primary
        - replica
      ingest_pipeline_name:
        description: Name of the ingest pipeline.
        type: string
        name_override: name
      memory_pool_name:
        description: The name of the JVM memory pool.
        type: string
        name_override: name
      memory_state:
        description: State of the memory
        type: string
        name_override: state
        enum:
        - free
        - used
      operation:
        description: The type of operation.
        type: string
        name_override: operation
        enum:
        - delete
        - fetch
        - flush
        - get
        - index
        - merge
        - query
        - refresh
        - scroll
        - suggest
        - warmer
      query_cache_count_type:
        description: Type of query cache count
        type: string
        name_override: type
        enum:
        - hit
        - miss
      segments_memory_object_type:
        description: Type of object in segment
        type: string
        name_override: object
        enum:
        - doc_value
        - fixed_bit_set
        - index_writer
        - term
      shard_state:
        description: The state of the shard.
        type: string
        name_override: state
        enum:
        - active
        - active_primary
        - initializing
        - relocating
        - unassigned
        - unassigned_delayed
      task_state:
        description: The state of the task.
        type: string
        name_override: state
        enum:
        - completed
        - rejected
      thread_pool_name:
        description: The name of the thread pool.
        type: string
      thread_state:
        description: The state of the thread.
        type: string
        name_override: state
        enum:
        - active
        - idle
    metrics:
      elasticsearch.breaker.memory.estimated:
        description: Estimated memory used for the operation.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes:
        - circuit_breaker_name
        stability:
          level: development
      elasticsearch.breaker.memory.limit:
        description: Memory limit for the circuit breaker.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - circuit_breaker_name
        stability:
          level: development
      elasticsearch.breaker.tripped:
        description: Total number of times the circuit breaker has been triggered
          and prevented an out of memory error.
        unit: '1'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - circuit_breaker_name
        stability:
          level: development
      elasticsearch.cluster.data_nodes:
        description: The number of data nodes in the cluster.
        unit: '{nodes}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.cluster.health:
        description: The health status of the cluster.
        unit: '{status}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - health_status
        stability:
          level: development
      elasticsearch.cluster.in_flight_fetch:
        description: The number of unfinished fetches.
        unit: '{fetches}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.cluster.indices.cache.evictions:
        description: The number of evictions from the cache for indices in cluster.
        unit: '{evictions}'
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cache_name
        stability:
          level: development
      elasticsearch.cluster.nodes:
        description: The total number of nodes in the cluster.
        unit: '{nodes}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.cluster.pending_tasks:
        description: The number of cluster-level changes that have not yet been executed.
        unit: '{tasks}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.cluster.published_states.differences:
        description: Number of differences between published cluster states.
        unit: '1'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cluster_published_difference_state
        stability:
          level: development
      elasticsearch.cluster.published_states.full:
        description: Number of published cluster states.
        unit: '1'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.cluster.shards:
        description: The number of shards in the cluster.
        unit: '{shards}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - shard_state
        stability:
          level: development
      elasticsearch.cluster.state_queue:
        description: Number of cluster states in queue.
        unit: '1'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cluster_state_queue_state
        stability:
          level: development
      elasticsearch.cluster.state_update.count:
        description: The number of cluster state update attempts that changed the
          cluster state since the node started.
        unit: '1'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cluster_state_update_state
        stability:
          level: development
      elasticsearch.cluster.state_update.time:
        description: The cumulative amount of time updating the cluster state since
          the node started.
        unit: ms
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cluster_state_update_state
        - cluster_state_update_type
        stability:
          level: development
      elasticsearch.index.cache.evictions:
        description: The number of evictions from the cache for an index.
        unit: '{evictions}'
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cache_name
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.cache.memory.usage:
        description: The size in bytes of the cache for an index.
        unit: By
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cache_name
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.cache.size:
        description: The number of elements of the query cache for an index.
        unit: '1'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.documents:
        description: The number of documents for an index.
        unit: '{documents}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - document_state
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.operations.completed:
        description: The number of operations completed for an index.
        unit: '{operations}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        - operation
        stability:
          level: development
      elasticsearch.index.operations.merge.current:
        description: The number of currently active segment merges
        unit: '{merges}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.operations.merge.docs_count:
        description: The total number of documents in merge operations for an index.
        unit: '{documents}'
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.operations.merge.size:
        description: The total size of merged segments for an index.
        unit: By
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.operations.time:
        description: Time spent on operations for an index.
        unit: ms
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        - operation
        stability:
          level: development
      elasticsearch.index.segments.count:
        description: Number of segments of an index.
        unit: '{segments}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.segments.memory:
        description: Size of memory for segment object of an index.
        unit: By
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        - segments_memory_object_type
        stability:
          level: development
      elasticsearch.index.segments.size:
        description: Size of segments of an index.
        unit: By
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.shards.size:
        description: The size of the shards assigned to this index.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.translog.operations:
        description: Number of transaction log operations for an index.
        unit: '{operations}'
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.index.translog.size:
        description: Size of the transaction log for an index.
        unit: By
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - index_aggregation_type
        stability:
          level: development
      elasticsearch.indexing_pressure.memory.limit:
        description: Configured memory limit, in bytes, for the indexing requests.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.indexing_pressure.memory.total.primary_rejections:
        description: Cumulative number of indexing requests rejected in the primary
          stage.
        unit: '1'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.indexing_pressure.memory.total.replica_rejections:
        description: Number of indexing requests rejected in the replica stage.
        unit: '1'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.memory.indexing_pressure:
        description: Memory consumed, in bytes, by indexing requests in the specified
          stage.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - indexing_pressure_stage
        stability:
          level: development
      elasticsearch.node.cache.count:
        description: Total count of query cache misses across all shards assigned
          to selected nodes.
        unit: '{count}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - query_cache_count_type
        stability:
          level: development
      elasticsearch.node.cache.evictions:
        description: The number of evictions from the cache on a node.
        unit: '{evictions}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cache_name
        stability:
          level: development
      elasticsearch.node.cache.memory.usage:
        description: The size in bytes of the cache on a node.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - cache_name
        stability:
          level: development
      elasticsearch.node.cache.size:
        description: Total amount of memory used for the query cache across all shards
          assigned to the node.
        unit: By
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.cluster.connections:
        description: The number of open tcp connections for internal cluster communication.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.cluster.io:
        description: The number of bytes sent and received on the network for internal
          cluster communication.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      elasticsearch.node.disk.io.read:
        description: The total number of kilobytes read across all file stores for
          this node.
        unit: KiBy
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.disk.io.write:
        description: The total number of kilobytes written across all file stores
          for this node.
        unit: KiBy
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.documents:
        description: The number of documents on the node.
        unit: '{documents}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - document_state
        stability:
          level: development
      elasticsearch.node.fs.disk.available:
        description: The amount of disk space available to the JVM across all file
          stores for this node. Depending on OS or process level restrictions, this
          might appear less than free. This is the actual amount of free disk space
          the Elasticsearch node can utilise.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.fs.disk.free:
        description: The amount of unallocated disk space across all file stores for
          this node.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.fs.disk.total:
        description: The amount of disk space across all file stores for this node.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.http.connections:
        description: The number of HTTP connections to the node.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.ingest.documents:
        description: Total number of documents ingested during the lifetime of this
          node.
        unit: '{documents}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.ingest.documents.current:
        description: Total number of documents currently being ingested.
        unit: '{documents}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.ingest.operations.failed:
        description: Total number of failed ingest operations during the lifetime
          of this node.
        unit: '{operation}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.open_files:
        description: The number of open file descriptors held by the node.
        unit: '{files}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
      elasticsearch.node.operations.completed:
        description: The number of operations completed by a node.
        unit: '{operations}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - operation
        stability:
          level: development
      elasticsearch.node.operations.current:
        description: Number of query operations currently running.
        unit: '{operations}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - operation
        stability:
          level: development
      elasticsearch.node.operations.get.completed:
        description: The number of hits and misses resulting from GET operations.
        unit: '{operations}'
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - get_result
        stability:
          level: development
      elasticsearch.node.operations.get.time:
        description: The time spent on hits and misses resulting from GET operations.
        unit: ms
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - get_result
        stability:
          level: development
      elasticsearch.node.operations.time:
        description: Time spent on operations by a node.
        unit: ms
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - operation
        stability:
          level: development
      elasticsearch.node.pipeline.ingest.documents.current:
        description: Total number of documents currently being ingested by a pipeline.
        unit: '{documents}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - ingest_pipeline_name
        stability:
          level: development
      elasticsearch.node.pipeline.ingest.documents.preprocessed:
        description: Number of documents preprocessed by the ingest pipeline.
        unit: '{documents}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - ingest_pipeline_name
        stability:
          level: development
      elasticsearch.node.pipeline.ingest.operations.failed:
        description: Total number of failed operations for the ingest pipeline.
        unit: '{operation}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - ingest_pipeline_name
        stability:
          level: development
      elasticsearch.node.script.cache_evictions:
        description: Total number of times the script cache has evicted old data.
        unit: '1'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.script.compilation_limit_triggered:
        description: Total number of times the script compilation circuit breaker
          has limited inline script compilations.
        unit: '1'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.script.compilations:
        description: Total number of inline script compilations performed by the node.
        unit: '{compilations}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.segments.memory:
        description: Size of memory for segment object of a node.
        unit: By
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - segments_memory_object_type
        stability:
          level: development
      elasticsearch.node.shards.data_set.size:
        description: Total data set size of all shards assigned to the node. This
          includes the size of shards not stored fully on the node, such as the cache
          for partially mounted indices.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.shards.reserved.size:
        description: A prediction of how much larger the shard stores on this node
          will eventually grow due to ongoing peer recoveries, restoring snapshots,
          and similar activities. A value of -1 indicates that this is not available.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.shards.size:
        description: The size of the shards assigned to this node.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.thread_pool.tasks.finished:
        description: The number of tasks finished by the thread pool.
        unit: '{tasks}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - task_state
        - thread_pool_name
        stability:
          level: development
      elasticsearch.node.thread_pool.tasks.queued:
        description: The number of queued tasks in the thread pool.
        unit: '{tasks}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - thread_pool_name
        stability:
          level: development
      elasticsearch.node.thread_pool.threads:
        description: The number of threads in the thread pool.
        unit: '{threads}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - thread_pool_name
        - thread_state
        stability:
          level: development
      elasticsearch.node.translog.operations:
        description: Number of transaction log operations.
        unit: '{operations}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.translog.size:
        description: Size of the transaction log.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.node.translog.uncommitted.size:
        description: Size of uncommitted transaction log operations.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.os.cpu.load_avg.15m:
        description: Fifteen-minute load average on the system (field is not present
          if fifteen-minute load average is not available).
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      elasticsearch.os.cpu.load_avg.1m:
        description: One-minute load average on the system (field is not present if
          one-minute load average is not available).
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      elasticsearch.os.cpu.load_avg.5m:
        description: Five-minute load average on the system (field is not present
          if five-minute load average is not available).
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      elasticsearch.os.cpu.usage:
        description: Recent CPU usage for the whole system, or -1 if not supported.
        unit: '%'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.os.memory:
        description: Amount of physical memory.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes:
        - memory_state
        stability:
          level: development
      elasticsearch.process.cpu.time:
        description: CPU time used by the process on which the Java virtual machine
          is running.
        unit: ms
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      elasticsearch.process.cpu.usage:
        description: CPU usage in percent.
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      elasticsearch.process.memory.virtual:
        description: Size of virtual memory that is guaranteed to be available to
          the running process.
        unit: By
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes: []
        stability:
          level: development
      jvm.classes.loaded:
        description: The number of loaded classes
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      jvm.gc.collections.count:
        description: The total number of garbage collections that have occurred
        unit: '1'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - collector_name
        stability:
          level: development
      jvm.gc.collections.elapsed:
        description: The approximate accumulated collection elapsed time
        unit: ms
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - collector_name
        stability:
          level: development
      jvm.memory.heap.committed:
        description: The amount of memory that is guaranteed to be available for the
          heap
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      jvm.memory.heap.max:
        description: The maximum amount of memory can be used for the heap
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      jvm.memory.heap.used:
        description: The current heap memory usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      jvm.memory.heap.utilization:
        description: Fraction of heap memory usage
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      jvm.memory.nonheap.committed:
        description: The amount of memory that is guaranteed to be available for non-heap
          purposes
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      jvm.memory.nonheap.used:
        description: The current non-heap memory usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      jvm.memory.pool.max:
        description: The maximum amount of memory can be used for the memory pool
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes:
        - memory_pool_name
        stability:
          level: development
      jvm.memory.pool.used:
        description: The current memory pool memory usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes:
        - memory_pool_name
        stability:
          level: development
      jvm.threads.count:
        description: The current number of threads
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
    resource_attributes:
      elasticsearch.cluster.name:
        description: The name of the elasticsearch cluster.
        type: string
      elasticsearch.index.name:
        description: The name of the elasticsearch index.
        type: string
      elasticsearch.node.name:
        description: The name of the elasticsearch node.
        type: string
      elasticsearch.node.version:
        description: The version of the elasticsearch node.
        type: string
- name: envoyalsreceiver
  metadata:
    type: envoyals
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - evan-bradley
        - zirain
- name: expvarreceiver
  metadata:
    type: expvar
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - jamesmoessis
        - MovieStoreGuy
    metrics:
      process.runtime.memstats.buck_hash_sys:
        description: Bytes of memory in profiling bucket hash tables.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.frees:
        description: Cumulative count of heap objects freed.
        unit: '{objects}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.gc_cpu_fraction:
        description: The fraction of this program's available CPU time used by the
          GC since the program started.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      process.runtime.memstats.gc_sys:
        description: Bytes of memory in garbage collection metadata.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.heap_alloc:
        description: Bytes of allocated heap objects.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.heap_idle:
        description: Bytes in idle (unused) spans.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.heap_inuse:
        description: Bytes in in-use spans.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.heap_objects:
        description: Number of allocated heap objects.
        unit: '{objects}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.heap_released:
        description: Bytes of physical memory returned to the OS.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.heap_sys:
        description: Bytes of heap memory obtained by the OS.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.last_pause:
        description: The most recent stop-the-world pause time.
        unit: ns
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      process.runtime.memstats.lookups:
        description: Number of pointer lookups performed by the runtime.
        unit: '{lookups}'
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.mallocs:
        description: Cumulative count of heap objects allocated.
        unit: '{objects}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.mcache_inuse:
        description: Bytes of allocated mcache structures.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.mcache_sys:
        description: Bytes of memory obtained from the OS for mcache structures.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.mspan_inuse:
        description: Bytes of allocated mspan structures.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.mspan_sys:
        description: Bytes of memory obtained from the OS for mspan structures.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.next_gc:
        description: The target heap size of the next GC cycle.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.num_forced_gc:
        description: Number of GC cycles that were forced by the application calling
          the GC function.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.num_gc:
        description: Number of completed GC cycles.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.other_sys:
        description: Bytes of memory in miscellaneous off-heap runtime allocations.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.pause_total:
        description: The cumulative nanoseconds in GC stop-the-world pauses since
          the program started.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.stack_inuse:
        description: Bytes in stack spans.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.stack_sys:
        description: Bytes of stack memory obtained from the OS.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.sys:
        description: Total bytes of memory obtained from the OS.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      process.runtime.memstats.total_alloc:
        description: Cumulative bytes allocated for heap objects.
        unit: By
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
- name: faroreceiver
  metadata:
    type: faro
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - dehaansa
        - rlankfo
        - mar4uk
- name: filelogreceiver
  metadata:
    type: filelog
    status:
      class: receiver
      stability:
        beta:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - andrzej-stencel
        emeritus:
        - djaglowski
        seeking_new: true
- name: filestatsreceiver
  metadata:
    type: filestats
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        seeking_new: true
    attributes:
      file.permissions:
        description: the permissions associated with the file, using an octal format.
        type: string
    metrics:
      file.atime:
        description: Elapsed time since last access of the file or folder, in seconds
          since Epoch.
        unit: s
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        stability:
          level: development
      file.count:
        description: The number of files matched
        unit: '{file}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      file.ctime:
        description: Elapsed time since the last change of the file or folder, in
          seconds since Epoch. In addition to `file.mtime`, this metric tracks metadata
          changes such as permissions or renaming the file.
        unit: s
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - file.permissions
        stability:
          level: development
      file.mtime:
        description: Elapsed time since the last modification of the file or folder,
          in seconds since Epoch.
        unit: s
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        stability:
          level: development
      file.size:
        description: The size of the file or folder, in bytes.
        unit: b
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
    resource_attributes:
      file.name:
        description: The name of the file
        type: string
      file.path:
        description: The absolute path of the file
        type: string
- name: flinkmetricsreceiver
  metadata:
    type: flinkmetrics
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - JonathanWamsley
        seeking_new: true
    attributes:
      checkpoint:
        description: The number of checkpoints completed or that failed.
        type: string
        enum:
        - completed
        - failed
      garbage_collector_name:
        description: The names for the parallel scavenge and garbage first garbage
          collectors.
        type: string
        name_override: name
        enum:
        - G1_Old_Generation
        - G1_Young_Generation
        - PS_MarkSweep
        - PS_Scavenge
      operator_name:
        description: The operator name.
        type: string
        name_override: name
      record:
        description: The number of records received in, sent out or dropped due to
          arriving late.
        type: string
        enum:
        - dropped
        - in
        - out
    metrics:
      flink.job.checkpoint.count:
        description: The number of checkpoints completed or failed.
        unit: '{checkpoints}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - checkpoint
        stability:
          level: development
      flink.job.checkpoint.in_progress:
        description: The number of checkpoints in progress.
        unit: '{checkpoints}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.job.last_checkpoint.size:
        description: The total size of the last checkpoint.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.job.last_checkpoint.time:
        description: The end to end duration of the last checkpoint.
        unit: ms
        enabled: true
        gauge:
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.job.restart.count:
        description: The total number of restarts since this job was submitted, including
          full restarts and fine-grained restarts.
        unit: '{restarts}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.class_loader.classes_loaded:
        description: The total number of classes loaded since the start of the JVM.
        unit: '{classes}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.cpu.load:
        description: The CPU usage of the JVM for a jobmanager or taskmanager.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.cpu.time:
        description: The CPU time used by the JVM for a jobmanager or taskmanager.
        unit: ns
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.gc.collections.count:
        description: The total number of collections that have occurred.
        unit: '{collections}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - garbage_collector_name
        stability:
          level: development
      flink.jvm.gc.collections.time:
        description: The total time spent performing garbage collection.
        unit: ms
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - garbage_collector_name
        stability:
          level: development
      flink.jvm.memory.direct.total_capacity:
        description: The total capacity of all buffers in the direct buffer pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.direct.used:
        description: The amount of memory used by the JVM for the direct buffer pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.heap.committed:
        description: The amount of heap memory guaranteed to be available to the JVM.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.heap.max:
        description: The maximum amount of heap memory that can be used for memory
          management.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.heap.used:
        description: The amount of heap memory currently used.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.mapped.total_capacity:
        description: The number of buffers in the mapped buffer pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.mapped.used:
        description: The amount of memory used by the JVM for the mapped buffer pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.metaspace.committed:
        description: The amount of memory guaranteed to be available to the JVM in
          the Metaspace memory pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.metaspace.max:
        description: The maximum amount of memory that can be used in the Metaspace
          memory pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.metaspace.used:
        description: The amount of memory currently used in the Metaspace memory pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.nonheap.committed:
        description: The amount of non-heap memory guaranteed to be available to the
          JVM.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.nonheap.max:
        description: The maximum amount of non-heap memory that can be used for memory
          management.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.memory.nonheap.used:
        description: The amount of non-heap memory currently used.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.jvm.threads.count:
        description: The total number of live threads.
        unit: '{threads}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.memory.managed.total:
        description: The total amount of managed memory.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.memory.managed.used:
        description: The amount of managed memory currently used.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      flink.operator.record.count:
        description: The number of records an operator has.
        unit: '{records}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - operator_name
        - record
        stability:
          level: development
      flink.operator.watermark.output:
        description: The last watermark this operator has emitted.
        unit: ms
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - operator_name
        stability:
          level: development
      flink.task.record.count:
        description: The number of records a task has.
        unit: '{records}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - record
        stability:
          level: development
    resource_attributes:
      flink.job.name:
        description: The job name.
        type: string
      flink.resource.type:
        description: The flink scope type in which a metric belongs to.
        type: string
        enum:
        - jobmanager
        - taskmanager
      flink.subtask.index:
        description: The subtask index.
        type: string
      flink.task.name:
        description: The task name.
        type: string
      flink.taskmanager.id:
        description: The taskmanager ID.
        type: string
      host.name:
        description: The host name.
        type: string
- name: fluentforwardreceiver
  metadata:
    type: fluentforward
    status:
      class: receiver
      stability:
        beta:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
- name: githubreceiver
  metadata:
    type: github
    status:
      class: receiver
      stability:
        alpha:
        - metrics
        development:
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - adrielp
        - crobert-1
        - TylerHelmuth
    attributes:
      vcs.change.state:
        description: The state of a change (pull request)
        type: string
        enum:
        - merged
        - open
      vcs.line_change.type:
        description: The type of line change being measured on a ref (branch).
        type: string
        enum:
        - added
        - removed
      vcs.ref.base.name:
        description: The name of the VCS base reference (branch/tag) for comparison.
        type: string
      vcs.ref.base.type:
        description: The type of the base reference (branch, tag).
        type: string
        enum:
        - branch
        - tag
      vcs.ref.head.name:
        description: The name of the VCS head reference (branch).
        type: string
      vcs.ref.head.type:
        description: The type of the head reference (branch, tag).
        type: string
        enum:
        - branch
        - tag
      vcs.ref.type:
        description: The type of the reference in the repository.
        type: string
        enum:
        - branch
        - tag
      vcs.repository.name:
        description: The name of the VCS repository.
        type: string
      vcs.repository.url.full:
        description: The canonical URL of the repository providing the complete HTTPS
          address.
        type: string
      vcs.revision_delta.direction:
        description: The type of revision comparison.
        type: string
        enum:
        - ahead
        - behind
    metrics:
      vcs.change.count:
        description: The number of changes (pull requests) in a repository, categorized
          by their state (either open or merged).
        unit: '{change}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vcs.change.state
        - vcs.repository.name
        - vcs.repository.url.full
        stability:
          level: development
      vcs.change.duration:
        description: The time duration a change (pull request/merge request/changelist)
          has been in an open state.
        unit: s
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vcs.change.state
        - vcs.ref.head.name
        - vcs.repository.name
        - vcs.repository.url.full
        stability:
          level: development
      vcs.change.time_to_approval:
        description: The amount of time it took a change (pull request) to go from
          open to approved.
        unit: s
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vcs.ref.head.name
        - vcs.repository.name
        - vcs.repository.url.full
        stability:
          level: development
      vcs.change.time_to_merge:
        description: The amount of time it took a change (pull request) to go from
          open to merged.
        unit: s
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vcs.ref.head.name
        - vcs.repository.name
        - vcs.repository.url.full
        stability:
          level: development
      vcs.contributor.count:
        description: The number of unique contributors to a repository.
        unit: '{contributor}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - vcs.repository.name
        - vcs.repository.url.full
        stability:
          level: development
      vcs.ref.count:
        description: The number of refs of type branch in a repository.
        unit: '{ref}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vcs.ref.type
        - vcs.repository.name
        - vcs.repository.url.full
        stability:
          level: development
      vcs.ref.lines_delta:
        description: The number of lines added/removed in a ref (branch) relative
          to the default branch (trunk).
        unit: '{line}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vcs.line_change.type
        - vcs.ref.base.name
        - vcs.ref.base.type
        - vcs.ref.head.name
        - vcs.ref.head.type
        - vcs.repository.name
        - vcs.repository.url.full
        stability:
          level: development
      vcs.ref.revisions_delta:
        description: The number of revisions (commits) a ref (branch) is ahead/behind
          the branch from trunk (default).
        unit: '{revision}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vcs.ref.base.name
        - vcs.ref.base.type
        - vcs.ref.head.name
        - vcs.ref.head.type
        - vcs.repository.name
        - vcs.repository.url.full
        - vcs.revision_delta.direction
        stability:
          level: development
      vcs.ref.time:
        description: Time a ref (branch) created from the default branch (trunk) has
          existed. The `vcs.ref.type` attribute will always be `branch`.
        unit: s
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vcs.ref.head.name
        - vcs.ref.head.type
        - vcs.repository.name
        - vcs.repository.url.full
        stability:
          level: development
      vcs.repository.count:
        description: The number of repositories in an organization.
        unit: '{repository}'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
    resource_attributes:
      vcs.owner.name:
        description: The group owner within the version control system
        type: string
      vcs.provider.name:
        description: The name of the version control system provider
        type: string
- name: gitlabreceiver
  metadata:
    type: gitlab
    status:
      class: receiver
      stability:
        development:
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - adrielp
        - atoulme
- name: googlecloudmonitoringreceiver
  metadata:
    type: googlecloudmonitoring
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dashpole
        - TylerHelmuth
        emeritus:
        - abhishek-at-cloudwerx
- name: googlecloudpubsubreceiver
  metadata:
    type: googlecloudpubsub
    status:
      class: receiver
      stability:
        beta:
        - logs
        - metrics
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - alexvanboxel
- name: googlecloudspannerreceiver
  metadata:
    type: googlecloudspanner
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dashpole
        - KiranmayiB
        - nsj07
        emeritus:
        - architjugran
        - varunraiko
        - harishbohara11
        - dsimil
- name: haproxyreceiver
  metadata:
    type: haproxy
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - MovieStoreGuy
    attributes:
      status_code:
        description: Status code category, 1xx, 2xx, 3xx, 4xx, 5xx or other
        type: string
        enum:
        - 1xx
        - 2xx
        - 3xx
        - 4xx
        - 5xx
        - other
    metrics:
      haproxy.active:
        description: Number of active servers (backend) or server is active (server).
          Corresponds to HAProxy's `act` metric.
        unit: '{servers}'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.backup:
        description: Number of backup servers (backend) or server is backup (server).
          Corresponds to HAProxy's `bck` metric.
        unit: '{servers}'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.bytes.input:
        description: Bytes in. Corresponds to HAProxy's `bin` metric.
        unit: by
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.bytes.output:
        description: Bytes out. Corresponds to HAProxy's `bout` metric.
        unit: by
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.clients.canceled:
        description: Number of data transfers aborted by the client. Corresponds to
          HAProxy's `cli_abrt` metric
        unit: '{cancellations}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.compression.bypass:
        description: Number of bytes that bypassed the HTTP compressor (CPU/BW limit).
          Corresponds to HAProxy's `comp_byp` metric.
        unit: by
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.compression.count:
        description: Number of HTTP responses that were compressed. Corresponds to
          HAProxy's `comp_rsp` metric.
        unit: '{responses}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.compression.input:
        description: Number of HTTP response bytes fed to the compressor. Corresponds
          to HAProxy's `comp_in` metric.
        unit: by
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.compression.output:
        description: Number of HTTP response bytes emitted by the compressor. Corresponds
          to HAProxy's `comp_out` metric.
        unit: by
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.connections.average_time:
        description: Average connect time in ms over the 1024 last requests. Corresponds
          to HAProxy's `ctime` metric.
        unit: ms
        enabled: false
        gauge:
          value_type: double
          input_type: string
        stability:
          level: development
      haproxy.connections.errors:
        description: Number of requests that encountered an error trying to connect
          to a backend server. The backend stat is the sum of the stat. Corresponds
          to HAProxy's `econ` metric
        unit: '{errors}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.connections.rate:
        description: Number of connections over the last elapsed second (frontend).
          Corresponds to HAProxy's `conn_rate` metric.
        unit: '{connections}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.connections.retries:
        description: Number of times a connection to a server was retried. Corresponds
          to HAProxy's `wretr` metric.
        unit: '{retries}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.connections.total:
        description: Cumulative number of connections (frontend). Corresponds to HAProxy's
          `conn_tot` metric.
        unit: '{connections}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.downtime:
        description: Total downtime (in seconds). The value for the backend is the
          downtime for the whole backend, not the sum of the server downtime. Corresponds
          to HAProxy's `downtime` metric
        unit: s
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.failed_checks:
        description: Number of failed checks. (Only counts checks failed when the
          server is up). Corresponds to HAProxy's `chkfail` metric.
        unit: '{checks}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.requests.average_time:
        description: Average queue time in ms over the 1024 last requests. Corresponds
          to HAProxy's `qtime` metric.
        unit: ms
        enabled: false
        gauge:
          value_type: double
          input_type: string
        stability:
          level: development
      haproxy.requests.denied:
        description: Requests denied because of security concerns. Corresponds to
          HAProxy's `dreq` metric
        unit: '{requests}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.requests.errors:
        description: Cumulative number of request errors. Corresponds to HAProxy's
          `ereq` metric.
        unit: '{errors}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.requests.queued:
        description: Current queued requests. For the backend this reports the number
          queued without a server assigned. Corresponds to HAProxy's `qcur` metric.
        unit: '{requests}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.requests.rate:
        description: HTTP requests per second over last elapsed second. Corresponds
          to HAProxy's `req_rate` metric.
        unit: '{requests}'
        enabled: true
        gauge:
          value_type: double
          input_type: string
        stability:
          level: development
      haproxy.requests.redispatched:
        description: Number of times a request was redispatched to another server.
          Corresponds to HAProxy's `wredis` metric.
        unit: '{requests}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.requests.total:
        description: Total number of HTTP requests received. Corresponds to HAProxy's
          `req_tot`, `hrsp_1xx`, `hrsp_2xx`, `hrsp_3xx`, `hrsp_4xx`, `hrsp_5xx` and
          `hrsp_other` metrics.
        unit: '{requests}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        attributes:
        - status_code
        stability:
          level: development
      haproxy.responses.average_time:
        description: Average response time in ms over the 1024 last requests. Corresponds
          to HAProxy's `rtime` metric.
        unit: ms
        enabled: false
        gauge:
          value_type: double
          input_type: string
        stability:
          level: development
      haproxy.responses.denied:
        description: Responses denied because of security concerns. Corresponds to
          HAProxy's `dresp` metric
        unit: '{responses}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.responses.errors:
        description: Cumulative number of response errors. Corresponds to HAProxy's
          `eresp` metric, `srv_abrt` will be counted here also.
        unit: '{errors}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        stability:
          level: development
      haproxy.server_selected.total:
        description: Number of times a server was selected, either for new sessions
          or when re-dispatching. Corresponds to HAProxy's `lbtot` metric.
        unit: '{selections}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.sessions.average:
        description: Average total session time in ms over the last 1024 requests.
          Corresponds to HAProxy's `ttime` metric.
        unit: ms
        enabled: true
        gauge:
          value_type: double
          input_type: string
        stability:
          level: development
      haproxy.sessions.count:
        description: Current sessions. Corresponds to HAProxy's `scur` metric.
        unit: '{sessions}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.sessions.limit:
        description: Configured session limit. Corresponds to HAProxy's `slim` metric.
        unit: '{sessions}'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.sessions.rate:
        description: Number of sessions per second over last elapsed second. Corresponds
          to HAProxy's `rate` metric.
        unit: '{sessions}'
        enabled: true
        gauge:
          value_type: double
          input_type: string
        stability:
          level: development
      haproxy.sessions.total:
        description: Cumulative number of sessions. Corresponds to HAProxy's `stot`
          metric.
        unit: '{sessions}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      haproxy.weight:
        description: Total effective weight (backend) or effective weight (server).
          Corresponds to HAProxy's `weight` metric.
        unit: '1'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
    resource_attributes:
      haproxy.addr:
        description: address:port or "unix". IPv6 has brackets around the address.
        type: string
      haproxy.proxy_name:
        description: Proxy name
        type: string
      haproxy.service_name:
        description: Service name (FRONTEND for frontend, BACKEND for backend, any
          name for server/listener)
        type: string
- name: hostmetricsreceiver
  metadata:
    type: hostmetrics
    status:
      class: receiver
      stability:
        beta:
        - metrics
        development:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - braydonk
- name: httpcheckreceiver
  metadata:
    type: httpcheck
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - codeboten
        - VenuEmmadi
    attributes:
      error.message:
        description: Error message recorded during check
        type: string
      http.method:
        description: HTTP request method
        type: string
      http.status_class:
        description: HTTP response status class
        type: string
      http.status_code:
        description: HTTP response status code
        type: int
      http.tls.cn:
        description: The commonName in the subject of the certificate.
        type: string
      http.tls.issuer:
        description: The entity that issued the certificate.
        type: string
      http.tls.san:
        description: The Subject Alternative Name of the certificate.
        type: slice
      http.url:
        description: Full HTTP request URL.
        type: string
      network.transport:
        description: OSI transport layer or inter-process communication method.
        type: string
      validation.type:
        description: Type of validation performed (contains, json_path, size, regex)
        type: string
    metrics:
      httpcheck.client.connection.duration:
        description: Time spent establishing TCP connection to the endpoint.
        unit: ms
        enabled: false
        gauge:
          value_type: int
        attributes:
        - http.url
        - network.transport
        stability:
          level: development
      httpcheck.client.request.duration:
        description: Time spent sending the HTTP request to the endpoint.
        unit: ms
        enabled: false
        gauge:
          value_type: int
        attributes:
        - http.url
        stability:
          level: development
      httpcheck.dns.lookup.duration:
        description: Time spent performing DNS lookup for the endpoint.
        unit: ms
        enabled: false
        gauge:
          value_type: int
        attributes:
        - http.url
        stability:
          level: development
      httpcheck.duration:
        description: Measures the duration of the HTTP check.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        attributes:
        - http.url
        stability:
          level: development
      httpcheck.error:
        description: Records errors occurring during HTTP check.
        unit: '{error}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - error.message
        - http.url
        stability:
          level: development
      httpcheck.response.duration:
        description: Time spent receiving the HTTP response from the endpoint.
        unit: ms
        enabled: false
        gauge:
          value_type: int
        attributes:
        - http.url
        stability:
          level: development
      httpcheck.response.size:
        description: Size of response body in bytes.
        unit: By
        enabled: false
        gauge:
          value_type: int
        attributes:
        - http.url
        stability:
          level: development
      httpcheck.status:
        description: 1 if the check resulted in status_code matching the status_class,
          otherwise 0.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - http.method
        - http.status_class
        - http.status_code
        - http.url
        stability:
          level: development
      httpcheck.tls.cert_remaining:
        description: Time in seconds until certificate expiry, as specified by `NotAfter`
          field in the x.509 certificate. Negative values represent time in seconds
          since expiration.
        unit: s
        enabled: false
        gauge:
          value_type: int
        attributes:
        - http.tls.cn
        - http.tls.issuer
        - http.tls.san
        - http.url
        stability:
          level: development
      httpcheck.tls.handshake.duration:
        description: Time spent performing TLS handshake with the endpoint.
        unit: ms
        enabled: false
        gauge:
          value_type: int
        attributes:
        - http.url
        stability:
          level: development
      httpcheck.validation.failed:
        description: Number of response validations that failed.
        unit: '{validation}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - http.url
        - validation.type
        stability:
          level: development
      httpcheck.validation.passed:
        description: Number of response validations that passed.
        unit: '{validation}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - http.url
        - validation.type
        stability:
          level: development
    resource_attributes: {}
- name: huaweicloudcesreceiver
  metadata:
    type: huaweicloudcesreceiver
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - heitorganzeli
        - narcis96
        - mwear
- name: icmpcheckreceiver
  metadata:
    type: icmpcheckreceiver
    status:
      class: receiver
      stability:
        development:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - jkoronaAtCisco
- name: iisreceiver
  metadata:
    type: iis
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - ishleenk17
        - Mrod1598
        - pjanotti
        seeking_new: true
      unsupported_platforms:
      - (windows && arm64)
      - darwin
      - linux
    attributes:
      direction:
        description: The direction data is moving.
        type: string
        enum:
        - received
        - sent
      request:
        description: The type of request sent by a client.
        type: string
        enum:
        - delete
        - get
        - head
        - options
        - post
        - put
        - trace
    metrics:
      iis.application_pool.state:
        description: The current status of the application pool (1 - Uninitialized,
          2 - Initialized, 3 - Running, 4 - Disabling, 5 - Disabled, 6 - Shutdown
          Pending, 7 - Delete Pending).
        unit: '{state}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      iis.application_pool.uptime:
        description: The application pools uptime period since the last restart.
        unit: '{ms}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      iis.connection.active:
        description: Number of active connections.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      iis.connection.anonymous:
        description: Number of connections established anonymously.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      iis.connection.attempt.count:
        description: Total number of attempts to connect to the server.
        unit: '{attempts}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      iis.network.blocked:
        description: Number of bytes blocked due to bandwidth throttling.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      iis.network.file.count:
        description: Number of transmitted files.
        unit: '{files}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      iis.network.io:
        description: Total amount of bytes sent and received.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      iis.request.count:
        description: Total number of requests of a given type.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - request
        stability:
          level: development
      iis.request.queue.age.max:
        description: Age of oldest request in the queue.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      iis.request.queue.count:
        description: Current number of requests in the queue.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      iis.request.rejected:
        description: Total number of requests rejected.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      iis.thread.active:
        description: Current number of active threads.
        unit: '{threads}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      iis.uptime:
        description: The amount of time the server has been up.
        unit: s
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
    resource_attributes:
      iis.application_pool:
        description: The application pool, which is associated with worker processes
          of one or more applications.
        type: string
      iis.site:
        description: The site of the web server.
        type: string
- name: influxdbreceiver
  metadata:
    type: influxdb
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - jacobmarble
- name: jaegerreceiver
  metadata:
    type: jaeger
    status:
      class: receiver
      stability:
        beta:
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - yurishkuro
- name: jmxreceiver
  metadata:
    type: jmx
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - rogercoll
        emeritus:
        - rmfitzpatrick
- name: journaldreceiver
  metadata:
    type: journald
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - belimawr
        emeritus:
        - djaglowski
        - sumo-drosiek
      unsupported_platforms:
      - darwin
      - windows
- name: k8sclusterreceiver
  metadata:
    type: k8s_cluster
    status:
      class: receiver
      stability:
        beta:
        - metrics
        development:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - TylerHelmuth
        - povilasv
        - ChrsMark
    attributes:
      condition:
        description: 'the name of Kubernetes Node condition. Example: Ready, Memory,
          PID, DiskPressure'
        type: string
      k8s.container.status.reason:
        description: The reason of the current container status.
        type: string
        enum:
        - Completed
        - ContainerCannotRun
        - ContainerCreating
        - CrashLoopBackOff
        - CreateContainerConfigError
        - ErrImagePull
        - Error
        - ImagePullBackOff
        - OOMKilled
      k8s.container.status.state:
        description: The state of the container (terminated, running, waiting). See
          https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#containerstate-v1-core
          for details.
        type: string
        enum:
        - running
        - terminated
        - waiting
      k8s.namespace.name:
        description: The k8s namespace name.
        type: string
      resource:
        description: the name of the resource on which the quota is applied
        type: string
    metrics:
      k8s.container.cpu_limit:
        description: Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core
          for details
        unit: '{cpu}'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      k8s.container.cpu_request:
        description: Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core
          for details
        unit: '{cpu}'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      k8s.container.ephemeralstorage_limit:
        description: Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core
          for details
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.container.ephemeralstorage_request:
        description: Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core
          for details
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.container.memory_limit:
        description: Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core
          for details
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.container.memory_request:
        description: Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core
          for details
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.container.ready:
        description: Whether a container has passed its readiness probe (0 for no,
          1 for yes)
        unit: ''
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.container.restarts:
        description: How many times the container has restarted in the recent past.
          This value is pulled directly from the K8s API and the value can go indefinitely
          high and be reset to 0 at any time depending on how your kubelet is configured
          to prune dead containers. It is best to not depend too much on the exact
          value but rather look at it as either == 0, in which case you can conclude
          there were no restarts in the recent past, or > 0, in which case you can
          conclude there were restarts in the recent past, and not try and analyze
          the value beyond that.
        unit: '{restart}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.container.status.reason:
        description: Experimental metric, may experience breaking changes. Describes
          the number of K8s containers that are currently in a state for a given reason.
          All possible container state reasons will be reported at each time interval
          to avoid missing metrics. Only the value corresponding to the current state
          reason will be non-zero.
        unit: '{container}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - k8s.container.status.reason
        stability:
          level: development
      k8s.container.status.state:
        description: Experimental metric, may experience breaking changes. Describes
          the number of K8s containers that are currently in a given state. All possible
          container states will be reported at each time interval to avoid missing
          metrics. Only the value corresponding to the current state will be non-zero.
        unit: '{container}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - k8s.container.status.state
        stability:
          level: development
      k8s.container.storage_limit:
        description: Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core
          for details
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.container.storage_request:
        description: Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core
          for details
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.cronjob.active_jobs:
        description: The number of actively running jobs for a cronjob
        unit: '{job}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.daemonset.current_scheduled_nodes:
        description: Number of nodes that are running at least 1 daemon pod and are
          supposed to run the daemon pod
        unit: '{node}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.daemonset.desired_scheduled_nodes:
        description: Number of nodes that should be running the daemon pod (including
          nodes currently running the daemon pod)
        unit: '{node}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.daemonset.misscheduled_nodes:
        description: Number of nodes that are running the daemon pod, but are not
          supposed to run the daemon pod
        unit: '{node}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.daemonset.ready_nodes:
        description: Number of nodes that should be running the daemon pod and have
          one or more of the daemon pod running and ready
        unit: '{node}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.deployment.available:
        description: Total number of available pods (ready for at least minReadySeconds)
          targeted by this deployment
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.deployment.desired:
        description: Number of desired pods in this deployment
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.hpa.current_replicas:
        description: Current number of pod replicas managed by this autoscaler.
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.hpa.desired_replicas:
        description: Desired number of pod replicas managed by this autoscaler.
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.hpa.max_replicas:
        description: Maximum number of replicas to which the autoscaler can scale
          up.
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.hpa.min_replicas:
        description: Minimum number of replicas to which the autoscaler can scale
          up.
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.job.active_pods:
        description: The number of actively running pods for a job
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.job.desired_successful_pods:
        description: The desired number of successfully finished pods the job should
          be run with
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.job.failed_pods:
        description: The number of pods which reached phase Failed for a job
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.job.max_parallel_pods:
        description: The max desired number of pods the job should run at any given
          time
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.job.successful_pods:
        description: The number of pods which reached phase Succeeded for a job
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.namespace.phase:
        description: The current phase of namespaces (1 for active and 0 for terminating)
        unit: ''
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.node.condition:
        description: The condition of a particular Node.
        unit: '{condition}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - condition
        stability:
          level: development
      k8s.pod.phase:
        description: Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded,
          4 - Failed, 5 - Unknown)
        unit: ''
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.pod.status_reason:
        description: Current status reason of the pod (1 - Evicted, 2 - NodeAffinity,
          3 - NodeLost, 4 - Shutdown, 5 - UnexpectedAdmissionError, 6 - Unknown)
        unit: ''
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      k8s.replicaset.available:
        description: Total number of available pods (ready for at least minReadySeconds)
          targeted by this replicaset
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.replicaset.desired:
        description: Number of desired pods in this replicaset
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.replication_controller.available:
        description: Total number of available pods (ready for at least minReadySeconds)
          targeted by this replication_controller
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.replication_controller.desired:
        description: Number of desired pods in this replication_controller
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.resource_quota.hard_limit:
        description: The upper limit for a particular resource in a specific namespace.
          Will only be sent if a quota is specified. CPU requests/limits will be sent
          as millicores
        unit: '{resource}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - resource
        stability:
          level: development
      k8s.resource_quota.used:
        description: The usage for a particular resource in a specific namespace.
          Will only be sent if a quota is specified. CPU requests/limits will be sent
          as millicores
        unit: '{resource}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - resource
        stability:
          level: development
      k8s.statefulset.current_pods:
        description: The number of pods created by the StatefulSet controller from
          the StatefulSet version
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.statefulset.desired_pods:
        description: Number of desired pods in the stateful set (the `spec.replicas`
          field)
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.statefulset.ready_pods:
        description: Number of pods created by the stateful set that have the `Ready`
          condition
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      k8s.statefulset.updated_pods:
        description: Number of pods created by the StatefulSet controller from the
          StatefulSet version
        unit: '{pod}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      openshift.appliedclusterquota.limit:
        description: The upper limit for a particular resource in a specific namespace.
        unit: '{resource}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - k8s.namespace.name
        - resource
        stability:
          level: development
      openshift.appliedclusterquota.used:
        description: The usage for a particular resource in a specific namespace.
        unit: '{resource}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - k8s.namespace.name
        - resource
        stability:
          level: development
      openshift.clusterquota.limit:
        description: The configured upper limit for a particular resource.
        unit: '{resource}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - resource
        stability:
          level: development
      openshift.clusterquota.used:
        description: The usage for a particular resource with a configured limit.
        unit: '{resource}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - resource
        stability:
          level: development
    resource_attributes:
      container.id:
        description: The container id.
        type: string
      container.image.name:
        description: The container image name
        type: string
      container.image.tag:
        description: The container image tag
        type: string
      container.runtime:
        description: The container runtime used by Kubernetes Node.
        type: string
      container.runtime.version:
        description: The version of container runtime used by Kubernetes Node.
        type: string
      k8s.container.name:
        description: The k8s container name
        type: string
      k8s.container.status.last_terminated_reason:
        description: Last terminated reason of a container.
        type: string
      k8s.cronjob.name:
        description: The k8s CronJob name
        type: string
      k8s.cronjob.uid:
        description: The k8s CronJob uid.
        type: string
      k8s.daemonset.name:
        description: The k8s daemonset name.
        type: string
      k8s.daemonset.uid:
        description: The k8s daemonset uid.
        type: string
      k8s.deployment.name:
        description: The name of the Deployment.
        type: string
      k8s.deployment.uid:
        description: The UID of the Deployment.
        type: string
      k8s.hpa.name:
        description: The k8s hpa name.
        type: string
      k8s.hpa.scaletargetref.apiversion:
        description: The API version of the target resource to scale for the HorizontalPodAutoscaler.
        type: string
      k8s.hpa.scaletargetref.kind:
        description: The kind of the target resource to scale for the HorizontalPodAutoscaler.
        type: string
      k8s.hpa.scaletargetref.name:
        description: The name of the target resource to scale for the HorizontalPodAutoscaler.
        type: string
      k8s.hpa.uid:
        description: The k8s hpa uid.
        type: string
      k8s.job.name:
        description: The k8s pod name.
        type: string
      k8s.job.uid:
        description: The k8s job uid.
        type: string
      k8s.kubelet.version:
        description: The version of Kubelet running on the node.
        type: string
      k8s.namespace.name:
        description: The k8s namespace name.
        type: string
      k8s.namespace.uid:
        description: The k8s namespace uid.
        type: string
      k8s.node.name:
        description: The k8s node name.
        type: string
      k8s.node.uid:
        description: The k8s node uid.
        type: string
      k8s.pod.name:
        description: The k8s pod name.
        type: string
      k8s.pod.qos_class:
        description: The k8s pod qos class name. One of Guaranteed, Burstable, BestEffort.
        type: string
      k8s.pod.uid:
        description: The k8s pod uid.
        type: string
      k8s.replicaset.name:
        description: The k8s replicaset name
        type: string
      k8s.replicaset.uid:
        description: The k8s replicaset uid
        type: string
      k8s.replicationcontroller.name:
        description: The k8s replicationcontroller name.
        type: string
      k8s.replicationcontroller.uid:
        description: The k8s replicationcontroller uid.
        type: string
      k8s.resourcequota.name:
        description: The k8s resourcequota name.
        type: string
      k8s.resourcequota.uid:
        description: The k8s resourcequota uid.
        type: string
      k8s.statefulset.name:
        description: The k8s statefulset name.
        type: string
      k8s.statefulset.uid:
        description: The k8s statefulset uid.
        type: string
      openshift.clusterquota.name:
        description: The k8s ClusterResourceQuota name.
        type: string
      openshift.clusterquota.uid:
        description: The k8s ClusterResourceQuota uid.
        type: string
      os.description:
        description: The os description used by Kubernetes Node.
        type: string
      os.type:
        description: The os type used by Kubernetes Node.
        type: string
- name: k8seventsreceiver
  metadata:
    type: k8s_events
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - TylerHelmuth
        - ChrsMark
- name: k8slogreceiver
  metadata:
    type: k8slog
    status:
      class: receiver
      stability:
        development:
        - logs
      codeowners:
        active:
        - h0cheung
        - TylerHelmuth
      distributions:
      - contrib
- name: k8sobjectsreceiver
  metadata:
    type: k8sobjects
    status:
      class: receiver
      stability:
        beta:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - hvaghani221
        - TylerHelmuth
        - ChrsMark
        - krisztianfekete
- name: kafkametricsreceiver
  metadata:
    type: kafkametrics
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
    attributes:
      broker:
        description: The ID of the kafka broker
        type: string
      group:
        description: The ID (string) of a consumer group
        type: string
      partition:
        description: The number (integer) of the partition
        type: int
      topic:
        description: The ID (integer) of a topic
        type: string
    metrics:
      kafka.broker.log_retention_period:
        description: log retention time (s) of a broker.
        unit: s
        enabled: false
        gauge:
          value_type: int
        attributes:
        - broker
        stability:
          level: development
      kafka.brokers:
        description: Number of brokers in the cluster.
        unit: '{brokers}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        stability:
          level: development
      kafka.consumer_group.lag:
        description: Current approximate lag of consumer group at partition of topic
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - group
        - partition
        - topic
        stability:
          level: development
      kafka.consumer_group.lag_sum:
        description: Current approximate sum of consumer group lag across all partitions
          of topic
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - group
        - topic
        stability:
          level: development
      kafka.consumer_group.members:
        description: Count of members in the consumer group
        unit: '{members}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - group
        stability:
          level: development
      kafka.consumer_group.offset:
        description: Current offset of the consumer group at partition of topic
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - group
        - partition
        - topic
        stability:
          level: development
      kafka.consumer_group.offset_sum:
        description: Sum of consumer group offset across partitions of topic
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - group
        - topic
        stability:
          level: development
      kafka.partition.current_offset:
        description: Current offset of partition of topic.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - partition
        - topic
        stability:
          level: development
      kafka.partition.oldest_offset:
        description: Oldest offset of partition of topic
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - partition
        - topic
        stability:
          level: development
      kafka.partition.replicas:
        description: Number of replicas for partition of topic
        unit: '{replicas}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - partition
        - topic
        stability:
          level: development
      kafka.partition.replicas_in_sync:
        description: Number of synchronized replicas of partition
        unit: '{replicas}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - partition
        - topic
        stability:
          level: development
      kafka.topic.log_retention_period:
        description: log retention period of a topic (s).
        unit: s
        enabled: false
        gauge:
          value_type: int
        attributes:
        - topic
        stability:
          level: development
      kafka.topic.log_retention_size:
        description: log retention size of a topic in Bytes, The value (-1) indicates
          infinite size.
        unit: By
        enabled: false
        gauge:
          value_type: int
        attributes:
        - topic
        stability:
          level: development
      kafka.topic.min_insync_replicas:
        description: minimum in-sync replicas of a topic.
        unit: '{replicas}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - topic
        stability:
          level: development
      kafka.topic.partitions:
        description: Number of partitions in topic.
        unit: '{partitions}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - topic
        stability:
          level: development
      kafka.topic.replication_factor:
        description: replication factor of a topic.
        unit: '1'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - topic
        stability:
          level: development
    resource_attributes:
      kafka.cluster.alias:
        description: The alias name (string) of the cluster
        type: string
- name: kafkareceiver
  metadata:
    type: kafka
    status:
      class: receiver
      stability:
        beta:
        - logs
        - metrics
        - traces
        development:
        - profiles
      distributions:
      - contrib
      codeowners:
        active:
        - pavolloffay
        - MovieStoreGuy
        - axw
        - paulojmdias
    attributes:
      node_id:
        description: The Kafka node ID.
        type: int
      outcome:
        description: The operation outcome.
        type: string
        enum:
        - failure
        - success
      partition:
        description: The Kafka topic partition.
        type: int
      topic:
        description: The Kafka topic.
        type: string
- name: kubeletstatsreceiver
  metadata:
    type: kubeletstats
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - TylerHelmuth
        - ChrsMark
    attributes:
      direction:
        description: Direction of flow of bytes/operations (receive or transmit).
        type: string
        enum:
        - receive
        - transmit
      interface:
        description: Name of the network interface.
        type: string
    metrics:
      container.cpu.time:
        description: Total cumulative CPU time (sum of all cores) spent by the container/pod/node
          since its creation
        unit: s
        enabled: true
        sum:
          value_type: double
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      container.cpu.usage:
        description: Total CPU usage (sum of all cores per second) averaged over the
          sample window
        unit: '{cpu}'
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      container.filesystem.available:
        description: Container filesystem available
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.filesystem.capacity:
        description: Container filesystem capacity
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.filesystem.usage:
        description: Container filesystem usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.memory.available:
        description: Container memory available
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.memory.major_page_faults:
        description: Container memory major_page_faults
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.memory.page_faults:
        description: Container memory page_faults
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.memory.rss:
        description: Container memory rss
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.memory.usage:
        description: Container memory usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.memory.working_set:
        description: Container memory working_set
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      container.uptime:
        description: The time since the container started
        unit: s
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      k8s.container.cpu.node.utilization:
        description: Container cpu utilization as a ratio of the node's capacity
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.container.cpu_limit_utilization:
        description: Container cpu utilization as a ratio of the container's limits
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.container.cpu_request_utilization:
        description: Container cpu utilization as a ratio of the container's requests
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.container.memory.node.utilization:
        description: Container memory utilization as a ratio of the node's capacity
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.container.memory_limit_utilization:
        description: Container memory utilization as a ratio of the container's limits
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.container.memory_request_utilization:
        description: Container memory utilization as a ratio of the container's requests
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.node.cpu.time:
        description: Total cumulative CPU time (sum of all cores) spent by the container/pod/node
          since its creation
        unit: s
        enabled: true
        sum:
          value_type: double
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      k8s.node.cpu.usage:
        description: Total CPU usage (sum of all cores per second) averaged over the
          sample window
        unit: '{cpu}'
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.node.filesystem.available:
        description: Node filesystem available
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.filesystem.capacity:
        description: Node filesystem capacity
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.filesystem.usage:
        description: Node filesystem usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.memory.available:
        description: Node memory available
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.memory.major_page_faults:
        description: Node memory major_page_faults
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.memory.page_faults:
        description: Node memory page_faults
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.memory.rss:
        description: Node memory rss
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.memory.usage:
        description: Node memory usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.memory.working_set:
        description: Node memory working_set
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.node.network.errors:
        description: Node network errors
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - direction
        - interface
        stability:
          level: development
      k8s.node.network.io:
        description: Node network IO
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - direction
        - interface
        stability:
          level: development
      k8s.node.uptime:
        description: The time since the node started
        unit: s
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      k8s.pod.cpu.node.utilization:
        description: Pod cpu utilization as a ratio of the node's capacity
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.pod.cpu.time:
        description: Total cumulative CPU time (sum of all cores) spent by the container/pod/node
          since its creation
        unit: s
        enabled: true
        sum:
          value_type: double
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      k8s.pod.cpu.usage:
        description: Total CPU usage (sum of all cores per second) averaged over the
          sample window
        unit: '{cpu}'
        enabled: true
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.pod.cpu_limit_utilization:
        description: Pod cpu utilization as a ratio of the pod's total container limits.
          If any container is missing a limit the metric is not emitted.
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.pod.cpu_request_utilization:
        description: Pod cpu utilization as a ratio of the pod's total container requests.
          If any container is missing a request the metric is not emitted.
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.pod.filesystem.available:
        description: Pod filesystem available
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.filesystem.capacity:
        description: Pod filesystem capacity
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.filesystem.usage:
        description: Pod filesystem usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.memory.available:
        description: Pod memory available
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.memory.major_page_faults:
        description: Pod memory major_page_faults
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.memory.node.utilization:
        description: Pod memory utilization as a ratio of the node's capacity
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.pod.memory.page_faults:
        description: Pod memory page_faults
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.memory.rss:
        description: Pod memory rss
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.memory.usage:
        description: Pod memory usage
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.memory.working_set:
        description: Pod memory working_set
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.pod.memory_limit_utilization:
        description: Pod memory utilization as a ratio of the pod's total container
          limits. If any container is missing a limit the metric is not emitted.
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.pod.memory_request_utilization:
        description: Pod memory utilization as a ratio of the pod's total container
          requests. If any container is missing a request the metric is not emitted.
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      k8s.pod.network.errors:
        description: Pod network errors
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - direction
        - interface
        stability:
          level: development
      k8s.pod.network.io:
        description: Pod network IO
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - direction
        - interface
        stability:
          level: development
      k8s.pod.uptime:
        description: The time since the pod started
        unit: s
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      k8s.pod.volume.usage:
        description: The number of used bytes in the pod volume.
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      k8s.volume.available:
        description: The number of available bytes in the volume.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.volume.capacity:
        description: The total capacity in bytes of the volume.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.volume.inodes:
        description: The total inodes in the filesystem.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.volume.inodes.free:
        description: The free inodes in the filesystem.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      k8s.volume.inodes.used:
        description: The inodes used by the filesystem. This may not equal inodes
          - free because filesystem may share inodes with other filesystems.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
    resource_attributes:
      aws.volume.id:
        description: The id of the AWS Volume
        type: string
      container.id:
        description: Container id used to identify container
        type: string
      fs.type:
        description: The filesystem type of the Volume
        type: string
      gce.pd.name:
        description: The name of the persistent disk in GCE
        type: string
      glusterfs.endpoints.name:
        description: The endpoint name that details Glusterfs topology
        type: string
      glusterfs.path:
        description: Glusterfs volume path
        type: string
      k8s.container.name:
        description: Container name used by container runtime
        type: string
      k8s.namespace.name:
        description: The name of the namespace that the pod is running in
        type: string
      k8s.node.name:
        description: The name of the Node
        type: string
      k8s.persistentvolumeclaim.name:
        description: The name of the Persistent Volume Claim
        type: string
      k8s.pod.name:
        description: The name of the Pod
        type: string
      k8s.pod.uid:
        description: The UID of the Pod
        type: string
      k8s.volume.name:
        description: The name of the Volume
        type: string
      k8s.volume.type:
        description: The type of the Volume
        type: string
      partition:
        description: The partition in the Volume
        type: string
- name: libhoneyreceiver
  metadata:
    type: libhoney
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - TylerHelmuth
        - mterhar
- name: lokireceiver
  metadata:
    type: loki
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - mar4uk
- name: memcachedreceiver
  metadata:
    type: memcached
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - jsirianni
        emeritus:
        - djaglowski
        seeking_new: true
    attributes:
      command:
        description: The type of command.
        type: string
        enum:
        - flush
        - get
        - set
        - touch
      direction:
        description: Direction of data flow.
        type: string
        enum:
        - received
        - sent
      operation:
        description: The type of operation.
        type: string
        enum:
        - decrement
        - get
        - increment
      state:
        description: The type of CPU usage.
        type: string
        enum:
        - system
        - user
      type:
        description: Result of cache request.
        type: string
        enum:
        - hit
        - miss
    metrics:
      memcached.bytes:
        description: Current number of bytes used by this server to store items.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      memcached.commands:
        description: Commands executed.
        unit: '{commands}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - command
        stability:
          level: development
      memcached.connections.current:
        description: The current number of open connections.
        unit: '{connections}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      memcached.connections.total:
        description: Total number of connections opened since the server started running.
        unit: '{connections}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      memcached.cpu.usage:
        description: Accumulated user and system time.
        unit: s
        enabled: true
        sum:
          value_type: double
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - state
        stability:
          level: development
      memcached.current_items:
        description: Number of items currently stored in the cache.
        unit: '{items}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      memcached.evictions:
        description: Cache item evictions.
        unit: '{evictions}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      memcached.network:
        description: Bytes transferred over the network.
        unit: by
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - direction
        stability:
          level: development
      memcached.operation_hit_ratio:
        description: Hit ratio for operations, expressed as a percentage value between
          0.0 and 100.0.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - operation
        stability:
          level: development
      memcached.operations:
        description: Operation counts.
        unit: '{operations}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - operation
        - type
        stability:
          level: development
      memcached.threads:
        description: Number of threads used by the memcached instance.
        unit: '{threads}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
- name: mongodbatlasreceiver
  metadata:
    type: mongodbatlas
    status:
      class: receiver
      stability:
        beta:
        - logs
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - justinianvoss22
        seeking_new: true
    attributes:
      assert_type:
        description: MongoDB assertion type
        type: string
        enum:
        - msg
        - regular
        - user
        - warning
      btree_counter_type:
        description: Database index effectiveness
        type: string
        enum:
        - accesses
        - hits
        - misses
      cache_direction:
        description: Whether read into or written from
        type: string
        enum:
        - read_into
        - written_from
      cache_ratio_type:
        description: Cache ratio type
        type: string
        enum:
        - cache_fill
        - dirty_fill
      cache_status:
        description: Cache status
        type: string
        enum:
        - dirty
        - used
      cluster_role:
        description: Whether process is acting as replica or primary
        type: string
        enum:
        - primary
        - replica
      cpu_state:
        description: CPU state
        type: string
        enum:
        - guest
        - iowait
        - irq
        - kernel
        - nice
        - softirq
        - steal
        - user
      cursor_state:
        description: Whether cursor is open or timed out
        type: string
        enum:
        - open
        - timed_out
      direction:
        description: Network traffic direction
        type: string
        enum:
        - receive
        - transmit
      disk_direction:
        description: Measurement type for disk operation
        type: string
        enum:
        - read
        - total
        - write
      disk_status:
        description: Disk measurement type
        type: string
        enum:
        - free
        - used
      document_status:
        description: Status of documents in the database
        type: string
        enum:
        - deleted
        - inserted
        - returned
        - updated
      execution_type:
        description: Type of command
        type: string
        enum:
        - commands
        - reads
        - writes
      global_lock_state:
        description: Which queue is locked
        type: string
        enum:
        - current_queue_readers
        - current_queue_total
        - current_queue_writers
      memory_issue_type:
        description: Type of memory issue encountered
        type: string
        enum:
        - exceptions_thrown
        - extra_info
        - global_accesses_not_in_memory
      memory_state:
        description: Memory usage type
        type: string
        enum:
        - computed
        - free
        - mapped
        - resident
        - shared
        - used
        - virtual
      memory_status:
        description: Memory measurement type
        type: string
        enum:
        - available
        - buffers
        - cached
        - free
        - shared
        - used
      object_type:
        description: MongoDB object type
        type: string
        enum:
        - collection
        - data
        - extent
        - index
        - object
        - storage
        - view
      operation:
        description: Type of database operation
        type: string
        enum:
        - cmd
        - delete
        - getmore
        - insert
        - query
        - scan_and_order
        - ttl_deleted
        - update
      oplog_type:
        description: Oplog type
        type: string
        enum:
        - master_lag_time_diff
        - master_time
        - slave_lag_master_time
      scanned_type:
        description: Objects or indexes scanned during query
        type: string
        enum:
        - index_items
        - objects
      storage_status:
        description: Views on database size
        type: string
        enum:
        - data_size
        - data_size_wo_system
        - index_size
        - total
      ticket_type:
        description: Type of ticket available
        type: string
        enum:
        - available_reads
        - available_writes
    metrics:
      mongodbatlas.db.counts:
        description: Database feature size
        unit: '{objects}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - object_type
        stability:
          level: development
      mongodbatlas.db.size:
        description: Database feature size
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - object_type
        stability:
          level: development
      mongodbatlas.disk.partition.iops.average:
        description: Disk partition iops
        unit: '{ops}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - disk_direction
        stability:
          level: development
      mongodbatlas.disk.partition.iops.max:
        description: Disk partition iops
        unit: '{ops}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - disk_direction
        stability:
          level: development
      mongodbatlas.disk.partition.latency.average:
        description: Disk partition latency
        unit: ms
        enabled: true
        gauge:
          value_type: double
        attributes:
        - disk_direction
        stability:
          level: development
      mongodbatlas.disk.partition.latency.max:
        description: Disk partition latency
        unit: ms
        enabled: true
        gauge:
          value_type: double
        attributes:
        - disk_direction
        stability:
          level: development
      mongodbatlas.disk.partition.queue.depth:
        description: Disk queue depth
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      mongodbatlas.disk.partition.space.average:
        description: Disk partition space
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - disk_status
        stability:
          level: development
      mongodbatlas.disk.partition.space.max:
        description: Disk partition space
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - disk_status
        stability:
          level: development
      mongodbatlas.disk.partition.throughput:
        description: Disk throughput
        unit: By/s
        enabled: false
        gauge:
          value_type: double
        attributes:
        - disk_direction
        stability:
          level: development
      mongodbatlas.disk.partition.usage.average:
        description: Disk partition usage (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - disk_status
        stability:
          level: development
      mongodbatlas.disk.partition.usage.max:
        description: Disk partition usage (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - disk_status
        stability:
          level: development
      mongodbatlas.disk.partition.utilization.average:
        description: The percentage of time during which requests are being issued
          to and serviced by the partition.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.disk.partition.utilization.max:
        description: The maximum percentage of time during which requests are being
          issued to and serviced by the partition.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.process.asserts:
        description: Number of assertions per second
        unit: '{assertions}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - assert_type
        stability:
          level: development
      mongodbatlas.process.background_flush:
        description: Amount of data flushed in the background
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.process.cache.io:
        description: Cache throughput (per second)
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cache_direction
        stability:
          level: development
      mongodbatlas.process.cache.ratio:
        description: Cache ratios represented as (%)
        unit: '%'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - cache_ratio_type
        stability:
          level: development
      mongodbatlas.process.cache.size:
        description: Cache sizes
        unit: By
        enabled: true
        sum:
          value_type: double
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - cache_status
        stability:
          level: development
      mongodbatlas.process.connections:
        description: Number of current connections
        unit: '{connections}'
        enabled: true
        sum:
          value_type: double
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      mongodbatlas.process.cpu.children.normalized.usage.average:
        description: CPU Usage for child processes, normalized to pct
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.process.cpu.children.normalized.usage.max:
        description: CPU Usage for child processes, normalized to pct
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.process.cpu.children.usage.average:
        description: CPU Usage for child processes (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.process.cpu.children.usage.max:
        description: CPU Usage for child processes (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.process.cpu.normalized.usage.average:
        description: CPU Usage, normalized to pct
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.process.cpu.normalized.usage.max:
        description: CPU Usage, normalized to pct
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.process.cpu.usage.average:
        description: CPU Usage (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.process.cpu.usage.max:
        description: CPU Usage (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.process.cursors:
        description: Number of cursors
        unit: '{cursors}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cursor_state
        stability:
          level: development
      mongodbatlas.process.db.document.rate:
        description: Document access rates
        unit: '{documents}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - document_status
        stability:
          level: development
      mongodbatlas.process.db.operations.rate:
        description: DB Operation Rates
        unit: '{operations}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cluster_role
        - operation
        stability:
          level: development
      mongodbatlas.process.db.operations.time:
        description: DB Operation Times
        unit: ms
        enabled: true
        sum:
          value_type: double
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - execution_type
        stability:
          level: development
      mongodbatlas.process.db.query_executor.scanned:
        description: Scanned objects
        unit: '{objects}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - scanned_type
        stability:
          level: development
      mongodbatlas.process.db.query_targeting.scanned_per_returned:
        description: Scanned objects per returned
        unit: '{scanned}/{returned}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - scanned_type
        stability:
          level: development
      mongodbatlas.process.db.storage:
        description: Storage used by the database
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - storage_status
        stability:
          level: development
      mongodbatlas.process.global_lock:
        description: Number and status of locks
        unit: '{locks}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - global_lock_state
        stability:
          level: development
      mongodbatlas.process.index.btree_miss_ratio:
        description: Index miss ratio (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.process.index.counters:
        description: Indexes
        unit: '{indexes}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - btree_counter_type
        stability:
          level: development
      mongodbatlas.process.journaling.commits:
        description: Journaling commits
        unit: '{commits}'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.process.journaling.data_files:
        description: Data file sizes
        unit: MiBy
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.process.journaling.written:
        description: Journals written
        unit: MiBy
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.process.memory.usage:
        description: Memory Usage
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - memory_state
        stability:
          level: development
      mongodbatlas.process.network.io:
        description: Network IO
        unit: By/s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - direction
        stability:
          level: development
      mongodbatlas.process.network.requests:
        description: Network requests
        unit: '{requests}'
        enabled: true
        sum:
          value_type: double
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      mongodbatlas.process.oplog.rate:
        description: Execution rate by operation
        unit: GiBy/h
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.process.oplog.time:
        description: Execution time by operation
        unit: s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - oplog_type
        stability:
          level: development
      mongodbatlas.process.page_faults:
        description: Page faults
        unit: '{faults}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - memory_issue_type
        stability:
          level: development
      mongodbatlas.process.restarts:
        description: Restarts in last hour
        unit: '{restarts}/h'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.process.tickets:
        description: Tickets
        unit: '{tickets}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - ticket_type
        stability:
          level: development
      mongodbatlas.system.cpu.normalized.usage.average:
        description: System CPU Normalized to pct
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.system.cpu.normalized.usage.max:
        description: System CPU Normalized to pct
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.system.cpu.usage.average:
        description: System CPU Usage (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.system.cpu.usage.max:
        description: System CPU Usage (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.system.fts.cpu.normalized.usage:
        description: Full text search disk usage (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.system.fts.cpu.usage:
        description: Full-text search (%)
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - cpu_state
        stability:
          level: development
      mongodbatlas.system.fts.disk.used:
        description: Full text search disk usage
        unit: By
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      mongodbatlas.system.fts.memory.usage:
        description: Full-text search
        unit: MiBy
        enabled: true
        sum:
          value_type: double
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - memory_state
        stability:
          level: development
      mongodbatlas.system.memory.usage.average:
        description: System Memory Usage
        unit: KiBy
        enabled: true
        gauge:
          value_type: double
        attributes:
        - memory_status
        stability:
          level: development
      mongodbatlas.system.memory.usage.max:
        description: System Memory Usage
        unit: KiBy
        enabled: true
        gauge:
          value_type: double
        attributes:
        - memory_status
        stability:
          level: development
      mongodbatlas.system.network.io.average:
        description: System Network IO
        unit: By/s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - direction
        stability:
          level: development
      mongodbatlas.system.network.io.max:
        description: System Network IO
        unit: By/s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - direction
        stability:
          level: development
      mongodbatlas.system.paging.io.average:
        description: Swap IO
        unit: '{pages}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - direction
        stability:
          level: development
      mongodbatlas.system.paging.io.max:
        description: Swap IO
        unit: '{pages}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - direction
        stability:
          level: development
      mongodbatlas.system.paging.usage.average:
        description: Swap usage
        unit: KiBy
        enabled: true
        gauge:
          value_type: double
        attributes:
        - memory_state
        stability:
          level: development
      mongodbatlas.system.paging.usage.max:
        description: Swap usage
        unit: KiBy
        enabled: true
        gauge:
          value_type: double
        attributes:
        - memory_state
        stability:
          level: development
    resource_attributes:
      mongodb_atlas.cluster.name:
        description: Cluster Name
        type: string
      mongodb_atlas.db.name:
        description: Name of the Database
        type: string
      mongodb_atlas.disk.partition:
        description: Name of a disk partition
        type: string
      mongodb_atlas.host.name:
        description: Hostname of the process
        type: string
      mongodb_atlas.org_name:
        description: Organization Name
        type: string
      mongodb_atlas.process.id:
        description: ID of the process
        type: string
      mongodb_atlas.process.port:
        description: Port process is bound to
        type: string
      mongodb_atlas.process.type_name:
        description: Process type
        type: string
      mongodb_atlas.project.id:
        description: Project ID
        type: string
      mongodb_atlas.project.name:
        description: Project Name
        type: string
      mongodb_atlas.provider.name:
        description: Provider Name
        type: string
      mongodb_atlas.region.name:
        description: Region Name
        type: string
      mongodb_atlas.user.alias:
        description: User-friendly hostname of the cluster node
        type: string
- name: mongodbreceiver
  metadata:
    type: mongodb
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - justinianvoss22
        seeking_new: true
    attributes:
      collection:
        description: The name of a collection.
        type: string
      connection_type:
        description: The status of the connection.
        type: string
        name_override: type
        enum:
        - active
        - available
        - current
      lock_mode:
        description: The mode of Lock which denotes the degree of access
        type: string
        enum:
        - exclusive
        - intent_exclusive
        - intent_shared
        - shared
      lock_type:
        description: The Resource over which the Lock controls access
        type: string
        enum:
        - collection
        - database
        - global
        - metadata
        - mutex
        - oplog
        - parallel_batch_write_mode
        - replication_state_transition
      memory_type:
        description: The type of memory used.
        type: string
        name_override: type
        enum:
        - resident
        - virtual
      operation:
        description: The MongoDB operation being counted.
        type: string
        enum:
        - command
        - delete
        - getmore
        - insert
        - query
        - update
      operation_latency:
        description: The MongoDB operation with regards to latency
        type: string
        name_override: operation
        enum:
        - command
        - read
        - write
      type:
        description: The result of a cache request.
        type: string
        enum:
        - hit
        - miss
    metrics:
      mongodb.active.reads:
        description: The number of read operations currently being processed.
        unit: '{reads}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.active.writes:
        description: The number of write operations currently being processed.
        unit: '{writes}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.cache.operations:
        description: The number of cache operations of the instance.
        unit: '{operations}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: true
        attributes:
        - type
        stability:
          level: development
      mongodb.collection.count:
        description: The number of collections.
        unit: '{collections}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.commands.rate:
        description: The number of commands executed per second.
        unit: '{command}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.connection.count:
        description: The number of connections.
        unit: '{connections}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - connection_type
        stability:
          level: development
      mongodb.cursor.count:
        description: The number of open cursors maintained for clients.
        unit: '{cursors}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.cursor.timeout.count:
        description: The number of cursors that have timed out.
        unit: '{cursors}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.data.size:
        description: The size of the collection. Data compression does not affect
          this value.
        unit: By
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.database.count:
        description: The number of existing databases.
        unit: '{databases}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.deletes.rate:
        description: The number of deletes executed per second.
        unit: '{delete}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.document.operation.count:
        description: The number of document operations executed.
        unit: '{documents}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - operation
        stability:
          level: development
      mongodb.extent.count:
        description: The number of extents.
        unit: '{extents}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.flushes.rate:
        description: The number of flushes executed per second.
        unit: '{flush}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.getmores.rate:
        description: The number of getmores executed per second.
        unit: '{getmore}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.global_lock.time:
        description: The time the global lock has been held.
        unit: ms
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: true
        attributes: []
        stability:
          level: development
      mongodb.health:
        description: The health status of the server.
        unit: '1'
        enabled: false
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      mongodb.index.access.count:
        description: The number of times an index has been accessed.
        unit: '{accesses}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - collection
        stability:
          level: development
      mongodb.index.count:
        description: The number of indexes.
        unit: '{indexes}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.index.size:
        description: Sum of the space allocated to all indexes in the database, including
          free index space.
        unit: By
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.inserts.rate:
        description: The number of insertions executed per second.
        unit: '{insert}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.lock.acquire.count:
        description: Number of times the lock was acquired in the specified mode.
        unit: '{count}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        attributes:
        - lock_mode
        - lock_type
        stability:
          level: development
      mongodb.lock.acquire.time:
        description: Cumulative wait time for the lock acquisitions.
        unit: microseconds
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        attributes:
        - lock_mode
        - lock_type
        stability:
          level: development
      mongodb.lock.acquire.wait_count:
        description: Number of times the lock acquisitions encountered waits because
          the locks were held in a conflicting mode.
        unit: '{count}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        attributes:
        - lock_mode
        - lock_type
        stability:
          level: development
      mongodb.lock.deadlock.count:
        description: Number of times the lock acquisitions encountered deadlocks.
        unit: '{count}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        attributes:
        - lock_mode
        - lock_type
        stability:
          level: development
      mongodb.memory.usage:
        description: The amount of memory used.
        unit: By
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: false
        attributes:
        - memory_type
        stability:
          level: development
      mongodb.network.io.receive:
        description: The number of bytes received.
        unit: By
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.network.io.transmit:
        description: The number of by transmitted.
        unit: By
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.network.request.count:
        description: The number of requests received by the server.
        unit: '{requests}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.object.count:
        description: The number of objects.
        unit: '{objects}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.operation.count:
        description: The number of operations executed.
        unit: '{operations}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: true
        attributes:
        - operation
        stability:
          level: development
      mongodb.operation.latency.time:
        description: The latency of operations.
        unit: us
        enabled: false
        gauge:
          value_type: int
        attributes:
        - operation_latency
        stability:
          level: development
      mongodb.operation.repl.count:
        description: The number of replicated operations executed.
        unit: '{operations}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: true
        attributes:
        - operation
        stability:
          level: development
      mongodb.operation.time:
        description: The total time spent performing operations.
        unit: ms
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        attributes:
        - operation
        stability:
          level: development
      mongodb.page_faults:
        description: The number of page faults.
        unit: '{faults}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        attributes: []
        stability:
          level: development
      mongodb.queries.rate:
        description: The number of queries executed per second.
        unit: '{query}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.repl_commands_per_sec:
        description: The number of replicated commands executed per second.
        unit: '{command}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.repl_deletes_per_sec:
        description: The number of replicated deletes executed per second.
        unit: '{delete}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.repl_getmores_per_sec:
        description: The number of replicated getmores executed per second.
        unit: '{getmore}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.repl_inserts_per_sec:
        description: The number of replicated insertions executed per second.
        unit: '{insert}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.repl_queries_per_sec:
        description: The number of replicated queries executed per second.
        unit: '{query}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.repl_updates_per_sec:
        description: The number of replicated updates executed per second.
        unit: '{update}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.session.count:
        description: The total number of active sessions.
        unit: '{sessions}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes: []
        stability:
          level: development
      mongodb.storage.size:
        description: The total amount of storage allocated to this collection.
        unit: By
        enabled: true
        sum:
          aggregation_temporality: cumulative
          value_type: int
          monotonic: true
        attributes: []
        stability:
          level: development
      mongodb.updates.rate:
        description: The number of updates executed per second.
        unit: '{update}/s'
        enabled: false
        gauge:
          value_type: double
          aggregation_temporality: delta
          monotonic: false
        stability:
          level: development
      mongodb.uptime:
        description: The amount of time that the server has been running.
        unit: ms
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      mongodb.wtcache.bytes.read:
        description: The number of bytes read into the WiredTiger cache.
        unit: By
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        attributes: []
        stability:
          level: development
    resource_attributes:
      database:
        description: The name of a database.
        type: string
      server.address:
        description: The address of the MongoDB host.
        type: string
      server.port:
        description: The port of the MongoDB host.
        type: int
- name: mysqlreceiver
  metadata:
    type: mysql
    status:
      class: receiver
      stability:
        beta:
        - metrics
        development:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - antonblock
        - ishleenk17
        seeking_new: true
        emeritus:
        - djaglowski
    attributes:
      buffer_pool_data:
        description: The status of buffer pool data.
        type: string
        name_override: status
        enum:
        - clean
        - dirty
      buffer_pool_operations:
        description: The buffer pool operations types.
        type: string
        name_override: operation
        enum:
        - read_ahead
        - read_ahead_evicted
        - read_ahead_rnd
        - read_requests
        - reads
        - wait_free
        - write_requests
      buffer_pool_pages:
        description: The buffer pool pages types.
        type: string
        name_override: kind
        enum:
        - data
        - free
        - misc
        - total
      cache_status:
        description: The status of cache access.
        type: string
        name_override: status
        enum:
        - hit
        - miss
        - overflow
      client.address:
        description: Hostname or address of the client.
        type: string
      client.port:
        description: TCP port used by the client.
        type: int
      command:
        description: The command types.
        type: string
        enum:
        - delete
        - delete_multi
        - insert
        - select
        - update
        - update_multi
      connection_error:
        description: The connection error type.
        type: string
        name_override: error
        enum:
        - aborted
        - aborted_clients
        - accept
        - internal
        - locked
        - max_connections
        - peer_address
        - select
        - tcpwrap
      connection_status:
        description: The connection status.
        type: string
        name_override: status
        enum:
        - accepted
        - closed
        - rejected
      db.namespace:
        description: The default database for the thread, or empty if none has been
          selected (originally processlist_db).
        type: string
      db.query.text:
        description: The SQL statement text for the event.
        type: string
      db.system.name:
        description: The name of the database system.
        type: string
        enum:
        - mysql
      digest:
        description: Digest.
        type: string
      digest_text:
        description: Text before digestion.
        type: string
      direction:
        description: The name of the transmission direction.
        type: string
        name_override: kind
        enum:
        - received
        - sent
      double_writes:
        description: The doublewrite types.
        type: string
        name_override: kind
        enum:
        - pages_written
        - writes
      event_state:
        description: Possible event states.
        type: string
        name_override: kind
        enum:
        - created_tmp_disk_tables
        - created_tmp_tables
        - errors
        - no_index_used
        - rows_affected
        - rows_examined
        - rows_sent
        - sort_merge_passes
        - sort_rows
        - warnings
      handler:
        description: The handler types.
        type: string
        name_override: kind
        enum:
        - commit
        - delete
        - discover
        - external_lock
        - mrr_init
        - prepare
        - read_first
        - read_key
        - read_last
        - read_next
        - read_prev
        - read_rnd
        - read_rnd_next
        - rollback
        - savepoint
        - savepoint_rollback
        - update
        - write
      index_name:
        description: The name of the index.
        type: string
        name_override: index
      io_waits_operations:
        description: The io_waits operation type.
        type: string
        name_override: operation
        enum:
        - delete
        - fetch
        - insert
        - update
      join_kind:
        description: The kind of join.
        type: string
        name_override: kind
        enum:
        - full
        - full_range
        - range
        - range_check
        - scan
      locks:
        description: The table locks type.
        type: string
        name_override: kind
        enum:
        - immediate
        - waited
      log_operations:
        description: The log operation types. 'fsyncs' aren't available in MariaDB
          10.8 or later.
        type: string
        name_override: operation
        enum:
        - fsyncs
        - waits
        - write_requests
        - writes
      mysql.event_id:
        description: The thread associated with the event and the thread current event
          number when the event starts.
        type: int
      mysql.events_statements_current.digest:
        description: The statement digest SHA-256 value as a string of 64 hexadecimal
          characters, or empty if the statements_digest consumer is no.
        type: string
      mysql.events_statements_summary_by_digest.count_star:
        description: The number of times the statement was executed, report in delta
          value.
        type: int
      mysql.events_statements_summary_by_digest.digest:
        description: The statement digest SHA-256 value as a string of 64 hexadecimal
          characters, or empty if the statements_digest consumer is no.
        type: string
      mysql.events_statements_summary_by_digest.sum_timer_wait:
        description: The total time spent executing the statement, report in delta
          seconds.
        type: double
      mysql.events_waits_current.timer_wait:
        description: Timing information for the event, indicating elapsed time the
          event waited in seconds.
        type: double
      mysql.query_plan:
        description: The query plan for the statement, if available.
        type: string
      mysql.threads.processlist_command:
        description: The type of command the thread is executing on behalf of the
          client for foreground threads, or `Sleep` if the session is idle.
        type: string
      mysql.threads.processlist_state:
        description: An action, event, or state that indicates what the thread is
          doing.
        type: string
      mysql.threads.thread_id:
        description: The unique identifier for the thread executing the statement.
        type: int
      mysql.wait_type:
        description: The name of the instrument that produced the event.
        type: string
      mysqlx_threads:
        description: The worker thread count kind.
        type: string
        name_override: kind
        enum:
        - active
        - available
      network.peer.address:
        description: IP address of the peer client.
        type: string
      network.peer.port:
        description: TCP port used by the peer client.
        type: int
      opened_resources:
        description: The kind of the resource.
        type: string
        name_override: kind
        enum:
        - file
        - table
        - table_definition
      operations:
        description: The operation types.
        type: string
        name_override: operation
        enum:
        - fsyncs
        - reads
        - writes
      page_operations:
        description: The page operation types.
        type: string
        name_override: operation
        enum:
        - created
        - read
        - written
      prepared_statements_command:
        description: The prepare statement command types.
        type: string
        name_override: command
        enum:
        - close
        - execute
        - fetch
        - prepare
        - reset
        - send_long_data
      read_lock_type:
        description: Read operation types.
        type: string
        name_override: kind
        enum:
        - external
        - high_priority
        - no_insert
        - normal
        - with_shared_locks
      row_locks:
        description: The row lock type.
        type: string
        name_override: kind
        enum:
        - time
        - waits
      row_operations:
        description: The row operation type.
        type: string
        name_override: operation
        enum:
        - deleted
        - inserted
        - read
        - updated
      schema:
        description: The schema of the object.
        type: string
      sorts:
        description: The sort count type.
        type: string
        name_override: kind
        enum:
        - merge_passes
        - range
        - rows
        - scan
      table_name:
        description: Table name for event or process.
        type: string
        name_override: table
      table_size_type:
        description: The table size types.
        type: string
        name_override: kind
        enum:
        - data
        - index
      threads:
        description: The thread count type.
        type: string
        name_override: kind
        enum:
        - cached
        - connected
        - created
        - running
      tmp_resource:
        description: The kind of temporary resources.
        type: string
        name_override: resource
        enum:
        - disk_tables
        - files
        - tables
      user.name:
        description: The user associated with a foreground thread, empty for a background
          thread (originally processlist_user).
        type: string
      write_lock_type:
        description: Write operation types.
        type: string
        name_override: kind
        enum:
        - allow_write
        - concurrent_insert
        - external
        - low_priority
        - normal
    metrics:
      mysql.buffer_pool.data_pages:
        description: The number of data pages in the InnoDB buffer pool.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - buffer_pool_data
        stability:
          level: development
      mysql.buffer_pool.limit:
        description: The configured size of the InnoDB buffer pool.
        unit: By
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      mysql.buffer_pool.operations:
        description: The number of operations on the InnoDB buffer pool.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - buffer_pool_operations
        stability:
          level: development
      mysql.buffer_pool.page_flushes:
        description: The number of requests to flush pages from the InnoDB buffer
          pool.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      mysql.buffer_pool.pages:
        description: The number of pages in the InnoDB buffer pool.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - buffer_pool_pages
        stability:
          level: development
      mysql.buffer_pool.usage:
        description: The number of bytes in the InnoDB buffer pool.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - buffer_pool_data
        stability:
          level: development
      mysql.client.network.io:
        description: The number of transmitted bytes between server and clients.
        unit: By
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - direction
        stability:
          level: development
      mysql.commands:
        description: The number of times each type of command has been executed.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - command
        stability:
          level: development
      mysql.connection.count:
        description: The number of connection attempts (successful or not) to the
          MySQL server.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      mysql.connection.errors:
        description: Errors that occur during the client connection process.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - connection_error
        stability:
          level: development
      mysql.double_writes:
        description: The number of writes to the InnoDB doublewrite buffer.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - double_writes
        stability:
          level: development
      mysql.handlers:
        description: The number of requests to various MySQL handlers.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - handler
        stability:
          level: development
      mysql.index.io.wait.count:
        description: The total count of I/O wait events for an index.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - index_name
        - io_waits_operations
        - schema
        - table_name
        stability:
          level: development
      mysql.index.io.wait.time:
        description: The total time of I/O wait events for an index.
        unit: ns
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - index_name
        - io_waits_operations
        - schema
        - table_name
        stability:
          level: development
      mysql.joins:
        description: The number of joins that perform table scans.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - join_kind
        stability:
          level: development
      mysql.locks:
        description: The number of MySQL locks.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - locks
        stability:
          level: development
      mysql.log_operations:
        description: The number of InnoDB log operations.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - log_operations
        stability:
          level: development
      mysql.max_used_connections:
        description: Maximum number of connections used simultaneously since the server
          started.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      mysql.mysqlx_connections:
        description: The number of mysqlx connections.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - connection_status
        stability:
          level: development
      mysql.mysqlx_worker_threads:
        description: The number of worker threads available.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - mysqlx_threads
        stability:
          level: development
      mysql.opened_resources:
        description: The number of opened resources.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - opened_resources
        stability:
          level: development
      mysql.operations:
        description: The number of InnoDB operations.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - operations
        stability:
          level: development
      mysql.page_operations:
        description: The number of InnoDB page operations.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - page_operations
        stability:
          level: development
      mysql.page_size:
        description: InnoDB page size.
        unit: By
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      mysql.prepared_statements:
        description: The number of times each type of prepared statement command has
          been issued.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - prepared_statements_command
        stability:
          level: development
      mysql.query.client.count:
        description: The number of statements executed by the server. This includes
          only statements sent to the server by clients.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      mysql.query.count:
        description: The number of statements executed by the server.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      mysql.query.slow.count:
        description: The number of slow queries.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      mysql.replica.sql_delay:
        description: The number of seconds that the replica must lag the source.
        unit: s
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      mysql.replica.time_behind_source:
        description: This field is an indication of how “late” the replica is.
        unit: s
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      mysql.row_locks:
        description: The number of InnoDB row locks.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - row_locks
        stability:
          level: development
      mysql.row_operations:
        description: The number of InnoDB row operations.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - row_operations
        stability:
          level: development
      mysql.sorts:
        description: The number of MySQL sorts.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - sorts
        stability:
          level: development
      mysql.statement_event.count:
        description: Summary of current and recent statement events.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - digest
        - digest_text
        - event_state
        - schema
        stability:
          level: development
      mysql.statement_event.wait.time:
        description: The total wait time of the summarized timed events.
        unit: ns
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - digest
        - digest_text
        - schema
        stability:
          level: development
      mysql.table.average_row_length:
        description: The average row length in bytes for a given table.
        unit: By
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - schema
        - table_name
        stability:
          level: development
      mysql.table.io.wait.count:
        description: The total count of I/O wait events for a table.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - io_waits_operations
        - schema
        - table_name
        stability:
          level: development
      mysql.table.io.wait.time:
        description: The total time of I/O wait events for a table.
        unit: ns
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - io_waits_operations
        - schema
        - table_name
        stability:
          level: development
      mysql.table.lock_wait.read.count:
        description: The total table lock wait read events.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - read_lock_type
        - schema
        - table_name
        stability:
          level: development
      mysql.table.lock_wait.read.time:
        description: The total table lock wait read events times.
        unit: ns
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - read_lock_type
        - schema
        - table_name
        stability:
          level: development
      mysql.table.lock_wait.write.count:
        description: The total table lock wait write events.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - schema
        - table_name
        - write_lock_type
        stability:
          level: development
      mysql.table.lock_wait.write.time:
        description: The total table lock wait write events times.
        unit: ns
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - schema
        - table_name
        - write_lock_type
        stability:
          level: development
      mysql.table.rows:
        description: The number of rows for a given table.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - schema
        - table_name
        stability:
          level: development
      mysql.table.size:
        description: The table size in bytes for a given table.
        unit: By
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - schema
        - table_name
        - table_size_type
        stability:
          level: development
      mysql.table_open_cache:
        description: The number of hits, misses or overflows for open tables cache
          lookups.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - cache_status
        stability:
          level: development
      mysql.threads:
        description: The state of MySQL threads.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - threads
        stability:
          level: development
      mysql.tmp_resources:
        description: The number of created temporary resources.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - tmp_resource
        stability:
          level: development
      mysql.uptime:
        description: The number of seconds that the server has been up.
        unit: s
        enabled: true
        sum:
          value_type: int
          input_type: string
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
    resource_attributes:
      mysql.instance.endpoint:
        description: Endpoint of the MySQL instance.
        type: string
- name: namedpipereceiver
  metadata:
    type: namedpipe
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - sinkingpoint
        emeritus:
        - djaglowski
      unsupported_platforms:
      - darwin
      - windows
- name: netflowreceiver
  metadata:
    type: netflow
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - evan-bradley
        - dlopes7
- name: nginxreceiver
  metadata:
    type: nginx
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - colelaven
        - ishleenk17
        emeritus:
        - djaglowski
    attributes:
      state:
        description: The state of a connection
        type: string
        enum:
        - active
        - reading
        - waiting
        - writing
    metrics:
      nginx.connections_accepted:
        description: The total number of accepted client connections
        unit: connections
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      nginx.connections_current:
        description: The current number of nginx connections by state
        unit: connections
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - state
        stability:
          level: development
      nginx.connections_handled:
        description: The total number of handled connections. Generally, the parameter
          value is the same as nginx.connections_accepted unless some resource limits
          have been reached (for example, the worker_connections limit).
        unit: connections
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
      nginx.requests:
        description: Total number of requests made to the server since it started
        unit: requests
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes: []
        stability:
          level: development
- name: nopreceiver
  metadata:
    type: nop
    status:
      class: receiver
      stability:
        beta:
        - logs
        - metrics
        - traces
      distributions:
      - core
      codeowners:
        active:
        - evan-bradley
- name: nsxtreceiver
  metadata:
    type: nsxt
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dashpole
        - schmikei
    attributes:
      class:
        description: The CPU usage of the architecture allocated for either DPDK (datapath)
          or non-DPDK (services) processes.
        type: string
        enum:
        - datapath
        - services
      direction:
        description: The direction of network flow.
        type: string
        enum:
        - received
        - transmitted
      disk_state:
        description: The state of storage space.
        type: string
        name_override: state
        enum:
        - available
        - used
      packet.type:
        description: The type of packet counter.
        type: string
        name_override: type
        enum:
        - dropped
        - errored
        - success
    metrics:
      nsxt.node.cpu.utilization:
        description: The average amount of CPU being used by the node.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - class
        stability:
          level: development
      nsxt.node.filesystem.usage:
        description: The amount of storage space used by the node.
        unit: By
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - disk_state
        stability:
          level: development
      nsxt.node.filesystem.utilization:
        description: The percentage of storage space utilized.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      nsxt.node.memory.cache.usage:
        description: The size of the node's memory cache.
        unit: KBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        stability:
          level: development
      nsxt.node.memory.usage:
        description: The memory usage of the node.
        unit: KBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        stability:
          level: development
      nsxt.node.network.io:
        description: The number of bytes which have flowed through the network interface.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        stability:
          level: development
      nsxt.node.network.packet.count:
        description: The number of packets which have flowed through the network interface
          on the node.
        unit: '{packets}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - direction
        - packet.type
        stability:
          level: development
    resource_attributes:
      device.id:
        description: The name of the network interface.
        type: string
      nsxt.node.id:
        description: The ID of the NSX Node.
        type: string
      nsxt.node.name:
        description: The name of the NSX Node.
        type: string
      nsxt.node.type:
        description: The type of NSX Node.
        type: string
- name: ntpreceiver
  metadata:
    type: ntp
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - paulojmdias
        seeking_new: true
    metrics:
      ntp.offset:
        description: Time difference between local and NTP server clocks
        unit: ns
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
    resource_attributes:
      ntp.host:
        description: NTP server used. Corresponds to configured `host`.
        type: string
- name: oracledbreceiver
  metadata:
    type: oracledb
    status:
      class: receiver
      stability:
        alpha:
        - metrics
        development:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - crobert-1
        - atoulme
    attributes:
      client.address:
        description: Hostname or address of the client.
        type: string
      client.port:
        description: TCP port used by the client.
        type: int
      db.namespace:
        description: The database name.
        type: string
      db.query.text:
        description: The text of the database query being executed.
        type: string
      db.server.name:
        description: The name of the server hosting the database.
        type: string
      db.system.name:
        description: The database management system (DBMS) product as identified by
          the client instrumentation.
        type: string
      network.peer.address:
        description: IP address of the peer client.
        type: string
      network.peer.port:
        description: TCP port used by the peer client.
        type: int
      oracledb.application_wait_time:
        description: The total time (in seconds) a query spent waiting on the application
          before it could proceed with execution (reporting delta).
        type: double
      oracledb.buffer_gets:
        description: Number of logical reads (i.e., buffer cache accesses) performed
          by a query (reporting delta).
        type: int
      oracledb.child_address:
        description: Address of the child cursor.
        type: string
      oracledb.child_number:
        description: The child number of the query.
        type: string
      oracledb.cluster_wait_time:
        description: Total time (in seconds) that a query waited due to Oracle Real
          Application Clusters (RAC) coordination (reporting delta).
        type: double
      oracledb.concurrency_wait_time:
        description: Total time (in seconds) a query spent waiting on concurrency-related
          events (reporting delta).
        type: double
      oracledb.cpu_time:
        description: Total time (in seconds) that the CPU spent actively processing
          a query, excluding time spent waiting (reporting delta).
        type: double
      oracledb.direct_reads:
        description: The number of direct path reads performed by a query — i.e.,
          data blocks read directly from disk into the session’s memory (reporting
          delta).
        type: int
      oracledb.direct_writes:
        description: The number of direct path write operations, where data is written
          directly to disk from user memory (reporting delta).
        type: int
      oracledb.disk_reads:
        description: The number of physical reads a query performs — that is, the
          number of data blocks read from disk (reporting delta).
        type: int
      oracledb.duration_sec:
        description: Total time taken by a database query to execute.
        type: double
      oracledb.elapsed_time:
        description: The total time (in seconds) taken by a query from start to finish,
          including CPU time and all types of waits (reporting delta).
        type: double
      oracledb.event:
        description: The specific wait event that a query or session is currently
          experiencing.
        type: string
      oracledb.executions:
        description: The number of times a specific SQL query has been executed (reporting
          delta).
        type: int
      oracledb.module:
        description: Logical module name of the client application that initiated
          a query or session.
        type: string
      oracledb.object_name:
        description: Name of the database object that a query is accessing.
        type: string
      oracledb.object_type:
        description: Type of the database object that a query is accessing.
        type: string
      oracledb.osuser:
        description: Name of the operating system user that initiated or is running
          the Oracle database session.
        type: string
      oracledb.physical_read_bytes:
        description: The total number of bytes read from disk by a query (reporting
          delta).
        type: int
      oracledb.physical_read_requests:
        description: The number of physical I/O read operations performed by a query
          (reporting delta).
        type: int
      oracledb.physical_write_bytes:
        description: The total number of bytes written to disk by a query (reporting
          delta).
        type: int
      oracledb.physical_write_requests:
        description: The number of times a query requested to write data to disk (reporting
          delta).
        type: int
      oracledb.plan_hash_value:
        description: Binary hash value calculated on the query execution plan and
          used to identify similar query execution plans, reported in the HEX format.
        type: string
      oracledb.process:
        description: The operating system process ID (PID) associated with a session.
        type: string
      oracledb.program:
        description: Name of the client program or tool that initiated the Oracle
          database session.
        type: string
      oracledb.query_plan:
        description: The query execution plan used by the SQL Server.
        type: string
      oracledb.rows_processed:
        description: The total number of rows that a query has read, returned, or
          affected during its execution (reporting delta).
        type: int
      oracledb.schemaname:
        description: Oracle schema under which SQL statements are being executed
        type: string
      oracledb.serial:
        description: Serial number associated with a session.
        type: string
      oracledb.sid:
        description: ID of the Oracle Server session.
        type: string
      oracledb.sql_id:
        description: The SQL ID of the query.
        type: string
      oracledb.state:
        description: Current state of the query or the session executing it.
        type: string
      oracledb.status:
        description: Execution state or result of a database query or session.
        type: string
      oracledb.user_io_wait_time:
        description: The total time (in seconds) a query spent waiting for user I/O
          operations—such as reading or writing data to disk or network file systems
          (reporting delta).
        type: double
      oracledb.wait_class:
        description: The category of wait events a query or session is currently experiencing
          in Oracle Database.
        type: string
      session_status:
        description: Session status
        type: string
      session_type:
        description: Session type
        type: string
      tablespace_name:
        description: Tablespace name
        type: string
      user.name:
        description: Database user name under which a session is connected to
        type: string
    metrics:
      oracledb.consistent_gets:
        description: Number of times a consistent read was requested for a block from
          the buffer cache.
        unit: '{gets}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.cpu_time:
        description: Cumulative CPU time, in seconds
        unit: s
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: double
        stability:
          level: development
      oracledb.db_block_gets:
        description: Number of times a current block was requested from the buffer
          cache.
        unit: '{gets}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.ddl_statements_parallelized:
        description: Number of DDL statements that were executed in parallel
        unit: '{statements}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.dml_locks.limit:
        description: Maximum limit of active DML (Data Manipulation Language) locks,
          -1 if unlimited.
        unit: '{locks}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.dml_locks.usage:
        description: Current count of active DML (Data Manipulation Language) locks.
        unit: '{locks}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.dml_statements_parallelized:
        description: Number of DML statements that were executed in parallel
        unit: '{statements}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.enqueue_deadlocks:
        description: Total number of deadlocks between table or row locks in different
          sessions.
        unit: '{deadlocks}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.enqueue_locks.limit:
        description: Maximum limit of active enqueue locks, -1 if unlimited.
        unit: '{locks}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.enqueue_locks.usage:
        description: Current count of active enqueue locks.
        unit: '{locks}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.enqueue_resources.limit:
        description: Maximum limit of active enqueue resources, -1 if unlimited.
        unit: '{resources}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.enqueue_resources.usage:
        description: Current count of active enqueue resources.
        unit: '{resources}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.exchange_deadlocks:
        description: Number of times that a process detected a potential deadlock
          when exchanging two buffers and raised an internal, restartable error. Index
          scans are the only operations that perform exchanges.
        unit: '{deadlocks}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.executions:
        description: Total number of calls (user and recursive) that executed SQL
          statements
        unit: '{executions}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.hard_parses:
        description: Number of hard parses
        unit: '{parses}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.logical_reads:
        description: Number of logical reads
        unit: '{reads}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.logons:
        description: Number of logon operations
        unit: '{operation}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.parallel_operations_downgraded_1_to_25_pct:
        description: Number of times parallel execution was requested and the degree
          of parallelism was reduced down to 1-25% because of insufficient parallel
          execution servers
        unit: '{executions}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.parallel_operations_downgraded_25_to_50_pct:
        description: Number of times parallel execution was requested and the degree
          of parallelism was reduced down to 25-50% because of insufficient parallel
          execution servers
        unit: '{executions}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.parallel_operations_downgraded_50_to_75_pct:
        description: Number of times parallel execution was requested and the degree
          of parallelism was reduced down to 50-75% because of insufficient parallel
          execution servers
        unit: '{executions}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.parallel_operations_downgraded_75_to_99_pct:
        description: Number of times parallel execution was requested and the degree
          of parallelism was reduced down to 75-99% because of insufficient parallel
          execution servers
        unit: '{executions}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.parallel_operations_downgraded_to_serial:
        description: Number of times parallel execution was requested but execution
          was serial because of insufficient parallel execution servers
        unit: '{executions}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.parallel_operations_not_downgraded:
        description: Number of times parallel execution was executed at the requested
          degree of parallelism
        unit: '{executions}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.parse_calls:
        description: Total number of parse calls.
        unit: '{parses}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.pga_memory:
        description: Session PGA (Program Global Area) memory
        unit: By
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.physical_read_io_requests:
        description: Number of read requests for application activity
        unit: '{requests}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.physical_reads:
        description: Number of physical reads
        unit: '{reads}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.physical_reads_direct:
        description: Number of reads directly from disk, bypassing the buffer cache
        unit: '{reads}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.physical_write_io_requests:
        description: Number of write requests for application activity
        unit: '{requests}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.physical_writes:
        description: Number of physical writes
        unit: '{writes}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.physical_writes_direct:
        description: Number of writes directly to disk, bypassing the buffer cache
        unit: '{writes}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.processes.limit:
        description: Maximum limit of active processes, -1 if unlimited.
        unit: '{processes}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.processes.usage:
        description: Current count of active processes.
        unit: '{processes}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.queries_parallelized:
        description: Number of SELECT statements executed in parallel
        unit: '{queries}'
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.sessions.limit:
        description: Maximum limit of active sessions, -1 if unlimited.
        unit: '{sessions}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.sessions.usage:
        description: Count of active sessions.
        unit: '{sessions}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        attributes:
        - session_status
        - session_type
        stability:
          level: development
      oracledb.tablespace_size.limit:
        description: Maximum size of tablespace in bytes, -1 if unlimited.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes:
        - tablespace_name
        stability:
          level: development
      oracledb.tablespace_size.usage:
        description: Used tablespace in bytes.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes:
        - tablespace_name
        stability:
          level: development
      oracledb.transactions.limit:
        description: Maximum limit of active transactions, -1 if unlimited.
        unit: '{transactions}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.transactions.usage:
        description: Current count of active transactions.
        unit: '{transactions}'
        enabled: true
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.user_commits:
        description: Number of user commits. When a user commits a transaction, the
          redo generated that reflects the changes made to database blocks must be
          written to disk. Commits often represent the closest thing to a user transaction
          rate.
        unit: '{commits}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
      oracledb.user_rollbacks:
        description: Number of times users manually issue the ROLLBACK statement or
          an error occurs during a user's transactions
        unit: '1'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
          input_type: string
        stability:
          level: development
    resource_attributes:
      host.name:
        description: The host name of Oracle Server
        type: string
      oracledb.instance.name:
        description: The name of the instance that data is coming from.
        type: string
      service.instance.id:
        description: A unique identifier of the Oracle DB instance in the format host:port/serviceName.
          (defaults to 'unknown:1521', in case of error in generating this value)
        type: string
- name: osqueryreceiver
  metadata:
    type: osquery
    status:
      class: receiver
      stability:
        development:
        - logs
      codeowners:
        active:
        - nslaughter
        - smithclay
      distributions:
      - contrib
- name: otelarrowreceiver
  metadata:
    type: otelarrow
    status:
      class: receiver
      stability:
        beta:
        - logs
        - metrics
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - jmacd
        - moh-osman3
- name: otlpjsonfilereceiver
  metadata:
    type: otlpjsonfile
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - metrics
        - traces
        development:
        - profiles
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        seeking_new: true
- name: otlpreceiver
  metadata:
    type: otlp
    status:
      class: receiver
      stability:
        development:
        - profiles
        stable:
        - logs
        - metrics
        - traces
      distributions:
      - core
- name: podmanreceiver
  metadata:
    type: podman_stats
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - rogercoll
      unsupported_platforms:
      - windows
    attributes:
      core:
        description: The CPU core number when utilising per-CPU metrics.
        type: string
    metrics:
      container.blockio.io_service_bytes_recursive.read:
        description: Number of bytes transferred from the disk by the container
        unit: '{operations}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.blockio.io_service_bytes_recursive.write:
        description: Number of bytes transferred to the disk by the container
        unit: '{operations}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.percent:
        description: Percent of CPU used by the container.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      container.cpu.usage.percpu:
        description: Total CPU time consumed per CPU-core.
        unit: s
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - core
        stability:
          level: development
      container.cpu.usage.system:
        description: System CPU usage.
        unit: s
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.cpu.usage.total:
        description: Total CPU time consumed.
        unit: s
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.memory.percent:
        description: Percentage of memory used.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      container.memory.usage.limit:
        description: Memory limit of the container.
        unit: By
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.memory.usage.total:
        description: Memory usage of the container.
        unit: By
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      container.network.io.usage.rx_bytes:
        description: Bytes received by the container.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      container.network.io.usage.tx_bytes:
        description: Bytes sent by the container.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
    resource_attributes:
      container.id:
        description: The ID of the container.
        type: string
      container.image.name:
        description: The name of the image in use by the container.
        type: string
      container.name:
        description: The name of the container.
        type: string
      container.runtime:
        description: The runtime of the container. For this receiver, it will always
          be 'podman'.
        type: string
- name: postgresqlreceiver
  metadata:
    type: postgresql
    status:
      class: receiver
      stability:
        beta:
        - metrics
        development:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - antonblock
        - ishleenk17
        seeking_new: true
        emeritus:
        - djaglowski
    attributes:
      bg_buffer_source:
        description: The source of a buffer write.
        type: string
        name_override: source
        enum:
        - backend
        - backend_fsync
        - bgwriter
        - checkpoints
      bg_checkpoint_type:
        description: The type of checkpoint state.
        type: string
        name_override: type
        enum:
        - requested
        - scheduled
      bg_duration_type:
        description: The type of time spent during the checkpoint.
        type: string
        name_override: type
        enum:
        - sync
        - write
      db.namespace:
        description: The namespace or schema of the database where the query is executed.
        type: string
      db.query.text:
        description: The text of the database query being executed.
        type: string
      db.system.name:
        description: The database management system (DBMS) product as identified by
          the client instrumentation.
        type: string
        enum:
        - postgresql
      function:
        description: The name of the function.
        type: string
      lock_type:
        description: Type of the lockable object.
        type: string
      mode:
        description: Name of the lock mode held or desired by the process.
        type: string
      network.peer.address:
        description: IP address of the client connected to this backend.
        type: string
      network.peer.port:
        description: TCP port number that the client is using for communication with
          this backend.
        type: int
      operation:
        description: The database operation.
        type: string
        enum:
        - del
        - hot_upd
        - ins
        - upd
      postgresql.application_name:
        description: Name of the application that is connected to this backend.
        type: string
      postgresql.calls:
        description: Number of times the statement was executed, reported in delta
          value.
        type: int
      postgresql.client_hostname:
        description: Host name of the connected client, as reported by a reverse DNS
          lookup of client_addr.
        type: string
      postgresql.pid:
        description: Process ID of this backend.
        type: int
      postgresql.query_id:
        description: Identifier of this backend's most recent query. If state is active
          this field shows the identifier of the currently executing query. In all
          other states, it shows the identifier of last query that was executed.
        type: string
      postgresql.query_plan:
        description: The execution plan used by PostgreSQL for the query.
        type: string
      postgresql.query_start:
        description: Time when the currently active query was started, or if state
          is not active, when the last query was started.
        type: string
      postgresql.queryid:
        description: Hash code to identify identical normalized queries.
        type: string
      postgresql.rolname:
        description: The name of the PostgreSQL role that executed the query.
        type: string
      postgresql.rows:
        description: Total number of rows retrieved or affected by the statement,
          reported in delta value.
        type: int
      postgresql.shared_blks_dirtied:
        description: Total number of shared blocks dirtied by the statement, reported
          in delta value.
        type: int
      postgresql.shared_blks_hit:
        description: Total number of shared block cache hits by the statement, reported
          in delta value.
        type: int
      postgresql.shared_blks_read:
        description: Total number of shared blocks read by the statement, reported
          in delta value.
        type: int
      postgresql.shared_blks_written:
        description: Total number of shared blocks written by the statement, reported
          in delta value.
        type: int
      postgresql.state:
        description: Current overall state of this backend
        type: string
      postgresql.temp_blks_read:
        description: Total number of temp blocks read by the statement, reported in
          delta value.
        type: int
      postgresql.temp_blks_written:
        description: Total number of temp blocks written by the statement, reported
          in delta value.
        type: int
      postgresql.total_exec_time:
        description: Total time spent executing the statement, in delta milliseconds.
        type: double
      postgresql.total_plan_time:
        description: Total time spent planning the statement, in delta milliseconds.
        type: double
      postgresql.wait_event:
        description: Wait event name if backend is currently waiting, otherwise NULL.
        type: string
      postgresql.wait_event_type:
        description: The type of event for which the backend is waiting, if any; otherwise
          NULL.
        type: string
      relation:
        description: OID of the relation targeted by the lock, or null if the target
          is not a relation or part of a relation.
        type: string
      replication_client:
        description: The IP address of the client connected to this backend. If this
          field is "unix", it indicates either that the client is connected via a
          Unix socket.
        type: string
      source:
        description: The block read source type.
        type: string
        enum:
        - heap_hit
        - heap_read
        - idx_hit
        - idx_read
        - tidx_hit
        - tidx_read
        - toast_hit
        - toast_read
      state:
        description: The tuple (row) state.
        type: string
        enum:
        - dead
        - live
      user.name:
        description: Name of the user logged into this backend.
        type: string
      wal_operation_lag:
        description: The operation which is responsible for the lag.
        type: string
        name_override: operation
        enum:
        - flush
        - replay
        - write
    metrics:
      postgresql.backends:
        description: The number of backends.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.bgwriter.buffers.allocated:
        description: Number of buffers allocated.
        unit: '{buffers}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        stability:
          level: development
      postgresql.bgwriter.buffers.writes:
        description: Number of buffers written.
        unit: '{buffers}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - bg_buffer_source
        stability:
          level: development
      postgresql.bgwriter.checkpoint.count:
        description: The number of checkpoints performed.
        unit: '{checkpoints}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        attributes:
        - bg_checkpoint_type
        stability:
          level: development
      postgresql.bgwriter.duration:
        description: Total time spent writing and syncing files to disk by checkpoints.
        unit: ms
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: double
        attributes:
        - bg_duration_type
        stability:
          level: development
      postgresql.bgwriter.maxwritten:
        description: Number of times the background writer stopped a cleaning scan
          because it had written too many buffers.
        unit: '1'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        stability:
          level: development
      postgresql.blks_hit:
        description: Number of times disk blocks were found already in the buffer
          cache.
        unit: '{blks_hit}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.blks_read:
        description: Number of disk blocks read in this database.
        unit: '{blks_read}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.blocks_read:
        description: The number of blocks read.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - source
        stability:
          level: development
      postgresql.commits:
        description: The number of commits.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.connection.max:
        description: Configured maximum number of client connections allowed
        unit: '{connections}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      postgresql.database.count:
        description: Number of user databases.
        unit: '{databases}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        stability:
          level: development
      postgresql.database.locks:
        description: The number of database locks.
        unit: '{lock}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - lock_type
        - mode
        - relation
        stability:
          level: development
      postgresql.db_size:
        description: The database disk usage.
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.deadlocks:
        description: The number of deadlocks.
        unit: '{deadlock}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.function.calls:
        description: The number of calls made to a function. Requires `track_functions=pl|all`
          in Postgres config.
        unit: '{call}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - function
        stability:
          level: development
      postgresql.index.scans:
        description: The number of index scans on a table.
        unit: '{scans}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        stability:
          level: development
      postgresql.index.size:
        description: The size of the index on disk.
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      postgresql.operations:
        description: The number of db row operations.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - operation
        stability:
          level: development
      postgresql.replication.data_delay:
        description: The amount of data delayed in replication.
        unit: By
        enabled: true
        gauge:
          value_type: int
        attributes:
        - replication_client
        stability:
          level: development
      postgresql.rollbacks:
        description: The number of rollbacks.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.rows:
        description: The number of rows in the database.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - state
        stability:
          level: development
      postgresql.sequential_scans:
        description: The number of sequential scans.
        unit: '{sequential_scan}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.table.count:
        description: Number of user tables in a database.
        unit: '{table}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        stability:
          level: development
      postgresql.table.size:
        description: Disk space used by a table.
        unit: By
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        stability:
          level: development
      postgresql.table.vacuum.count:
        description: Number of times a table has manually been vacuumed.
        unit: '{vacuums}'
        enabled: true
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: int
        stability:
          level: development
      postgresql.temp.io:
        description: Total amount of data written to temporary files by queries.
        unit: By
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.temp_files:
        description: The number of temp files.
        unit: '{temp_file}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.tup_deleted:
        description: Number of rows deleted by queries in the database.
        unit: '{tup_deleted}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.tup_fetched:
        description: Number of rows fetched by queries in the database.
        unit: '{tup_fetched}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.tup_inserted:
        description: Number of rows inserted by queries in the database.
        unit: '{tup_inserted}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.tup_returned:
        description: Number of rows returned by queries in the database.
        unit: '{tup_returned}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.tup_updated:
        description: Number of rows updated by queries in the database.
        unit: '{tup_updated}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      postgresql.wal.age:
        description: Age of the oldest WAL file.
        unit: s
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      postgresql.wal.delay:
        description: Time between flushing recent WAL locally and receiving notification
          that the standby server has completed an operation with it.
        unit: s
        enabled: false
        gauge:
          value_type: double
        attributes:
        - replication_client
        - wal_operation_lag
        stability:
          level: development
      postgresql.wal.lag:
        description: Time between flushing recent WAL locally and receiving notification
          that the standby server has completed an operation with it.
        unit: s
        enabled: true
        gauge:
          value_type: int
        attributes:
        - replication_client
        - wal_operation_lag
        stability:
          level: development
    resource_attributes:
      postgresql.database.name:
        description: The name of the database.
        type: string
      postgresql.index.name:
        description: The name of the index on a table.
        type: string
      postgresql.schema.name:
        description: The schema name.
        type: string
      postgresql.table.name:
        description: The table name.
        type: string
- name: pprofreceiver
  metadata:
    type: pprof
    status:
      class: receiver
      stability:
        development:
        - profiles
      distributions:
      - contrib
      codeowners:
        active:
        - MovieStoreGuy
        - atoulme
- name: prometheusreceiver
  metadata:
    type: prometheus
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - Aneurysm9
        - dashpole
        - ArthurSens
        - krajorama
- name: prometheusremotewritereceiver
  metadata:
    type: prometheusremotewrite
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dashpole
        - ArthurSens
        - perebaj
- name: pulsarreceiver
  metadata:
    type: pulsar
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - metrics
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - dao-jun
- name: purefareceiver
  metadata:
    type: purefa
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dgoscn
        - chrroberts-pure
        emeritus:
        - jpkrohling
- name: purefbreceiver
  metadata:
    type: purefb
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dgoscn
        - chrroberts-pure
        emeritus:
        - jpkrohling
- name: rabbitmqreceiver
  metadata:
    type: rabbitmq
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - VenuEmmadi
        emeritus:
        - cpheps
    attributes:
      message.state:
        description: The state of messages in a queue.
        type: string
        name_override: state
        enum:
        - ready
        - unacknowledged
    metrics:
      rabbitmq.consumer.count:
        description: The number of consumers currently reading from the queue.
        unit: '{consumers}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.message.acknowledged:
        description: The number of messages acknowledged by consumers.
        unit: '{messages}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.message.current:
        description: The total number of messages currently in the queue.
        unit: '{messages}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - message.state
        stability:
          level: development
      rabbitmq.message.delivered:
        description: The number of messages delivered to consumers.
        unit: '{messages}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.message.dropped:
        description: The number of messages dropped as unroutable.
        unit: '{messages}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.message.published:
        description: The number of messages published to a queue.
        unit: '{messages}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.channel_closed:
        description: Number of channels closed.
        unit: '{channels}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.channel_closed_details.rate:
        description: Rate of channels closed.
        unit: '{channels}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.channel_created:
        description: Number of channels created.
        unit: '{channels}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.channel_created_details.rate:
        description: Rate of channels created.
        unit: '{channels}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.connection_closed:
        description: Number of connections closed.
        unit: '{connections}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.connection_closed_details.rate:
        description: Rate of connections closed.
        unit: '{connections}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.connection_created:
        description: Number of connections created.
        unit: '{connections}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.connection_created_details.rate:
        description: Rate of connections created.
        unit: '{connections}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.context_switches:
        description: Total number of context switches.
        unit: '{switches}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.context_switches_details.rate:
        description: Rate of context switches.
        unit: '{switches}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.disk_free:
        description: Free disk space on the node.
        unit: '{bytes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.disk_free_alarm:
        description: Whether disk usage has triggered an alarm.
        unit: '{status}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.disk_free_details.rate:
        description: Rate of disk usage change.
        unit: '{bytes}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.disk_free_limit:
        description: Minimum required free disk space before alarm.
        unit: '{bytes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.fd_total:
        description: Maximum number of file descriptors available.
        unit: '{fd}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.fd_used:
        description: Number of file descriptors used.
        unit: '{fd}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.fd_used_details.rate:
        description: Rate of file descriptor usage.
        unit: '{fd}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.gc_bytes_reclaimed:
        description: Bytes reclaimed by garbage collection.
        unit: '{bytes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.gc_bytes_reclaimed_details.rate:
        description: Rate of bytes reclaimed by GC.
        unit: '{bytes}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.gc_num:
        description: Number of garbage collections.
        unit: '{collections}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.gc_num_details.rate:
        description: Rate of garbage collections.
        unit: '{collections}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_read_avg_time:
        description: Average read time in microseconds.
        unit: '{microseconds}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_read_avg_time_details.rate:
        description: Rate of change of average read time.
        unit: '{microseconds}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_read_bytes:
        description: Total bytes read.
        unit: '{bytes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.io_read_bytes_details.rate:
        description: Rate of bytes read.
        unit: '{bytes}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_read_count:
        description: Number of read operations.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.io_read_count_details.rate:
        description: Rate of read operations.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_reopen_count:
        description: Number of file reopen operations.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.io_reopen_count_details.rate:
        description: Rate of file reopen operations.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_seek_avg_time:
        description: Average seek time in microseconds.
        unit: '{microseconds}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_seek_avg_time_details.rate:
        description: Rate of change of average seek time.
        unit: '{microseconds}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_seek_count:
        description: Number of seek operations.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.io_seek_count_details.rate:
        description: Rate of seek operations.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_sync_avg_time:
        description: Average sync time in microseconds.
        unit: '{microseconds}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_sync_avg_time_details.rate:
        description: Rate of change of average sync time.
        unit: '{microseconds}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_sync_count:
        description: Number of sync operations.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.io_sync_count_details.rate:
        description: Rate of sync operations.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_write_avg_time:
        description: Average write time in microseconds.
        unit: '{microseconds}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_write_avg_time_details.rate:
        description: Rate of change of average write time.
        unit: '{microseconds}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_write_bytes:
        description: Total bytes written.
        unit: '{bytes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.io_write_bytes_details.rate:
        description: Rate of bytes written.
        unit: '{bytes}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.io_write_count:
        description: Number of write operations.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.io_write_count_details.rate:
        description: Rate of write operations.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.mem_alarm:
        description: Whether memory alarm is triggered.
        unit: '{status}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.mem_limit:
        description: The memory limit on the node.
        unit: '{bytes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.mem_used:
        description: The memory used on the node.
        unit: '{bytes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.mem_used_details.rate:
        description: Rate of memory usage change.
        unit: '{bytes}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.mnesia_disk_tx_count:
        description: Number of disk transactions in Mnesia.
        unit: '{tx}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.mnesia_disk_tx_count_details.rate:
        description: Rate of disk transactions in Mnesia.
        unit: '{tx}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.mnesia_ram_tx_count:
        description: Number of RAM transactions in Mnesia.
        unit: '{tx}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.mnesia_ram_tx_count_details.rate:
        description: Rate of RAM transactions in Mnesia.
        unit: '{tx}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.msg_store_read_count:
        description: Number of message store reads.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.msg_store_read_count_details.rate:
        description: Rate of message store reads.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.msg_store_write_count:
        description: Number of message store writes.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.msg_store_write_count_details.rate:
        description: Rate of message store writes.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.proc_total:
        description: Maximum allowed Erlang processes.
        unit: '{processes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.proc_used:
        description: Number of Erlang processes in use.
        unit: '{processes}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.proc_used_details.rate:
        description: Rate of process usage.
        unit: '{processes}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.processors:
        description: Number of processors available to the node.
        unit: '{processors}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.queue_created:
        description: Number of queues created.
        unit: '{queues}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.queue_created_details.rate:
        description: Rate of queues created.
        unit: '{queues}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.queue_declared:
        description: Number of queues declared.
        unit: '{queues}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.queue_declared_details.rate:
        description: Rate of queues declared.
        unit: '{queues}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.queue_deleted:
        description: Number of queues deleted.
        unit: '{queues}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.queue_deleted_details.rate:
        description: Rate of queues deleted.
        unit: '{queues}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.queue_index_read_count:
        description: Number of queue index reads.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.queue_index_read_count_details.rate:
        description: Rate of queue index reads.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.queue_index_write_count:
        description: Number of queue index writes.
        unit: '{ops}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.queue_index_write_count_details.rate:
        description: Rate of queue index writes.
        unit: '{ops}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.run_queue:
        description: Run queue length of the Erlang scheduler.
        unit: '{threads}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.sockets_total:
        description: Maximum allowed sockets.
        unit: '{sockets}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.sockets_used:
        description: Number of sockets in use.
        unit: '{sockets}'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      rabbitmq.node.sockets_used_details.rate:
        description: Rate of socket usage.
        unit: '{sockets}/s'
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: double
        stability:
          level: development
      rabbitmq.node.uptime:
        description: Uptime of the node.
        unit: ms
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
    resource_attributes:
      rabbitmq.node.name:
        description: The name of the RabbitMQ node.
        type: string
      rabbitmq.queue.name:
        description: The name of the RabbitMQ queue.
        type: string
      rabbitmq.vhost.name:
        description: The name of the RabbitMQ vHost.
        type: string
- name: receivercreator
  metadata:
    type: receiver_creator
    status:
      class: receiver
      stability:
        alpha:
        - logs
        - traces
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - ChrsMark
        emeritus:
        - rmfitzpatrick
- name: redisreceiver
  metadata:
    type: redis
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - hughesjj
    attributes:
      cluster_state:
        description: State of the cluster
        type: string
        enum:
        - fail
        - ok
      cmd:
        description: Redis command name
        type: string
      db:
        description: Redis database identifier
        type: string
      percentile:
        description: Percentile
        type: string
        enum:
        - p50
        - p99
        - p99.9
      role:
        description: Redis node's role
        type: string
        enum:
        - primary
        - replica
      state:
        description: Redis CPU usage state
        type: string
        enum:
        - sys
        - sys_children
        - sys_main_thread
        - user
        - user_children
        - user_main_thread
    metrics:
      redis.clients.blocked:
        description: Number of clients pending on a blocking call
        unit: '{client}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.clients.connected:
        description: Number of client connections (excluding connections from replicas)
        unit: '{client}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.clients.max_input_buffer:
        description: Biggest input buffer among current client connections
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.clients.max_output_buffer:
        description: Longest output list among current client connections
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.cluster.known_nodes:
        description: Number of known nodes in the cluster
        unit: '{node}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.cluster.links_buffer_limit_exceeded.count:
        description: Total number of times the cluster links buffer limit was exceeded
        unit: '{count}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.cluster.node.count:
        description: Number of master nodes in the cluster
        unit: '{node}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.cluster.node.uptime:
        description: The node's current epoch
        unit: s
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.cluster.slots_assigned:
        description: Number of slots assigned in the cluster
        unit: '{slot}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.cluster.slots_fail:
        description: Number of slots in the cluster that are in a failing state
        unit: '{slot}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.cluster.slots_ok:
        description: Number of slots in the cluster that are ok
        unit: '{slot}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.cluster.slots_pfail:
        description: Number of slots in the cluster that are in a 'potentially failing'
          state
        unit: '{slot}'
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.cluster.state:
        description: State of the cluster
        unit: '{state}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - cluster_state
        stability:
          level: development
      redis.cluster.stats_messages_received:
        description: Total number of messages received by the cluster
        unit: '{message}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.cluster.stats_messages_sent:
        description: Total number of messages sent by the cluster
        unit: '{message}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.cluster.uptime:
        description: Current epoch of the cluster
        unit: s
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.cmd.calls:
        description: Total number of calls for a command
        unit: '{call}'
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - cmd
        stability:
          level: development
      redis.cmd.latency:
        description: Command execution latency
        unit: s
        enabled: false
        gauge:
          value_type: double
        attributes:
        - cmd
        - percentile
        stability:
          level: development
      redis.cmd.usec:
        description: Total time for all executions of this command
        unit: us
        enabled: false
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - cmd
        stability:
          level: development
      redis.commands:
        description: Number of commands processed per second
        unit: '{ops}/s'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.commands.processed:
        description: Total number of commands processed by the server
        unit: '{command}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.connections.received:
        description: Total number of connections accepted by the server
        unit: '{connection}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.connections.rejected:
        description: Number of connections rejected because of maxclients limit
        unit: '{connection}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.cpu.time:
        description: System CPU consumed by the Redis server in seconds since server
          start
        unit: s
        enabled: true
        sum:
          value_type: double
          monotonic: true
          aggregation_temporality: cumulative
        attributes:
        - state
        stability:
          level: development
      redis.db.avg_ttl:
        description: Average keyspace keys TTL
        unit: ms
        enabled: true
        gauge:
          value_type: int
        attributes:
        - db
        stability:
          level: development
      redis.db.expires:
        description: Number of keyspace keys with an expiration
        unit: '{key}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - db
        stability:
          level: development
      redis.db.keys:
        description: Number of keyspace keys
        unit: '{key}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - db
        stability:
          level: development
      redis.keys.evicted:
        description: Number of evicted keys due to maxmemory limit
        unit: '{key}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.keys.expired:
        description: Total number of key expiration events
        unit: '{event}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.keyspace.hits:
        description: Number of successful lookup of keys in the main dictionary
        unit: '{hit}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.keyspace.misses:
        description: Number of failed lookup of keys in the main dictionary
        unit: '{miss}'
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.latest_fork:
        description: Duration of the latest fork operation in microseconds
        unit: us
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.maxmemory:
        description: The value of the maxmemory configuration directive
        unit: By
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.memory.fragmentation_ratio:
        description: Ratio between used_memory_rss and used_memory
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      redis.memory.lua:
        description: Number of bytes used by the Lua engine
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.memory.peak:
        description: Peak memory consumed by Redis (in bytes)
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.memory.rss:
        description: Number of bytes that Redis allocated as seen by the operating
          system
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.memory.used:
        description: Total number of bytes allocated by Redis using its allocator
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.net.input:
        description: The total number of bytes read from the network
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.net.output:
        description: The total number of bytes written to the network
        unit: By
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.rdb.changes_since_last_save:
        description: Number of changes since the last dump
        unit: '{change}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.replication.backlog_first_byte_offset:
        description: The master offset of the replication backlog buffer
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.replication.offset:
        description: The server's current replication offset
        unit: By
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      redis.replication.replica_offset:
        description: Offset for redis replica
        unit: By
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      redis.role:
        description: Redis node's role
        unit: '{role}'
        enabled: false
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        attributes:
        - role
        stability:
          level: development
      redis.slaves.connected:
        description: Number of connected replicas
        unit: '{replica}'
        enabled: true
        sum:
          value_type: int
          monotonic: false
          aggregation_temporality: cumulative
        stability:
          level: development
      redis.uptime:
        description: Number of seconds since Redis server start
        unit: s
        enabled: true
        sum:
          value_type: int
          monotonic: true
          aggregation_temporality: cumulative
        stability:
          level: development
    resource_attributes:
      redis.version:
        description: Redis server's version.
        type: string
      server.address:
        description: Redis server's address
        type: string
      server.port:
        description: Redis server's port
        type: string
- name: riakreceiver
  metadata:
    type: riak
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - armstrmi
        seeking_new: true
    attributes:
      operation:
        description: The operation type for index operations.
        type: string
        enum:
        - delete
        - read
        - write
      request:
        description: The request operation type.
        type: string
        enum:
        - get
        - put
    metrics:
      riak.memory.limit:
        description: The amount of memory allocated to the node.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      riak.node.operation.count:
        description: The number of operations performed by the node.
        unit: '{operation}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - request
        stability:
          level: development
      riak.node.operation.time.mean:
        description: The mean time between request and response for operations performed
          by the node over the last minute.
        unit: us
        enabled: true
        gauge:
          value_type: int
        attributes:
        - request
        stability:
          level: development
      riak.node.read_repair.count:
        description: The number of read repairs performed by the node.
        unit: '{read_repair}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      riak.vnode.index.operation.count:
        description: The number of index operations performed by vnodes on the node.
        unit: '{operation}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - operation
        stability:
          level: development
      riak.vnode.operation.count:
        description: The number of operations performed by vnodes on the node.
        unit: '{operation}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - request
        stability:
          level: development
    resource_attributes:
      riak.node.name:
        description: The name this node uses to identify itself.
        type: string
- name: saphanareceiver
  metadata:
    type: saphana
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dehaansa
    attributes:
      active_pending_request_state:
        description: The state of network request.
        type: string
        name_override: state
        enum:
        - active
        - pending
      alert_rating:
        description: The alert rating.
        type: string
        name_override: rating
      column_memory_subtype:
        description: The subtype of column store memory.
        type: string
        name_override: subtype
        enum:
        - data
        - dict
        - index
        - misc
      column_memory_type:
        description: The type of column store memory.
        type: string
        name_override: type
        enum:
        - delta
        - main
      component:
        description: The SAP HANA component.
        type: string
      connection_status:
        description: The connection status.
        type: string
        name_override: status
        enum:
        - idle
        - queueing
        - running
      cpu_type:
        description: The type of cpu.
        type: string
        name_override: type
        enum:
        - idle
        - io_wait
        - system
        - user
      database:
        description: The SAP HANA database.
        type: string
      disk_state_used_free:
        description: The state of the disk storage.
        type: string
        name_override: state
        enum:
        - free
        - used
      disk_usage_type:
        description: The SAP HANA disk & volume usage type.
        type: string
        name_override: usage_type
      host_swap_state:
        description: The state of swap data.
        type: string
        name_override: state
        enum:
        - free
        - used
      internal_external_request_type:
        description: The type of network request.
        type: string
        name_override: type
        enum:
        - external
        - internal
      memory_state_used_free:
        description: The state of memory.
        type: string
        name_override: state
        enum:
        - free
        - used
      path:
        description: The SAP HANA disk path.
        type: string
      port:
        description: The SAP HANA port.
        type: string
      primary_host:
        description: The primary SAP HANA host in replication.
        type: string
        name_override: primary
      product:
        description: The SAP HANA product.
        type: string
      replication_mode:
        description: The replication mode.
        type: string
        name_override: mode
      row_memory_type:
        description: The type of row store memory.
        type: string
        name_override: type
        enum:
        - fixed
        - variable
      schema:
        description: The SAP HANA schema.
        type: string
      schema_memory_type:
        description: The type of schema memory.
        type: string
        name_override: type
        enum:
        - delta
        - history_delta
        - history_main
        - main
      schema_operation_type:
        description: The type of operation.
        type: string
        name_override: type
        enum:
        - merge
        - read
        - write
      schema_record_type:
        description: The type of schema record.
        type: string
        name_override: type
        enum:
        - delta
        - history_delta
        - history_main
        - main
      secondary_host:
        description: The secondary SAP HANA host in replication.
        type: string
        name_override: secondary
      service:
        description: The SAP HANA service.
        type: string
      service_memory_used_type:
        description: The type of service memory.
        type: string
        name_override: type
        enum:
        - logical
        - physical
      service_status:
        description: The status of services.
        type: string
        name_override: status
        enum:
        - active
        - inactive
      system:
        description: The SAP HANA system.
        type: string
      thread_status:
        description: The status of threads.
        type: string
        name_override: status
        enum:
        - active
        - inactive
      transaction_type:
        description: The transaction type.
        type: string
        name_override: type
        enum:
        - commit
        - rollback
        - update
      volume_operation_type:
        description: The type of operation.
        type: string
        name_override: type
        enum:
        - read
        - write
    metrics:
      saphana.alert.count:
        description: Number of current alerts.
        unit: '{alerts}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - alert_rating
        stability:
          level: development
      saphana.backup.latest:
        description: The age of the latest backup by start time.
        unit: s
        enabled: true
        gauge:
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      saphana.column.memory.used:
        description: The memory used in all columns.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - column_memory_subtype
        - column_memory_type
        stability:
          level: development
      saphana.component.memory.used:
        description: The memory used in components.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - component
        stability:
          level: development
      saphana.connection.count:
        description: The number of current connections.
        unit: '{connections}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - connection_status
        stability:
          level: development
      saphana.cpu.used:
        description: Total CPU time spent.
        unit: ms
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - cpu_type
        stability:
          level: development
      saphana.disk.size.current:
        description: The disk size.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - disk_state_used_free
        - disk_usage_type
        - path
        stability:
          level: development
      saphana.host.memory.current:
        description: The amount of physical memory on the host.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - memory_state_used_free
        stability:
          level: development
      saphana.host.swap.current:
        description: The amount of swap space on the host.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - host_swap_state
        stability:
          level: development
      saphana.instance.code_size:
        description: The instance code size, including shared libraries of SAP HANA
          processes.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      saphana.instance.memory.current:
        description: The size of the memory pool for all SAP HANA processes.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - memory_state_used_free
        stability:
          level: development
      saphana.instance.memory.shared.allocated:
        description: The shared memory size of SAP HANA processes.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      saphana.instance.memory.used.peak:
        description: The peak memory from the memory pool used by SAP HANA processes
          since the instance started (this is a sample-based value).
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      saphana.license.expiration.time:
        description: The amount of time remaining before license expiration.
        unit: s
        enabled: true
        gauge:
          value_type: int
          input_type: string
        attributes:
        - product
        - system
        stability:
          level: development
      saphana.license.limit:
        description: The allowed product usage as specified by the license (for example,
          main memory).
        unit: '{licenses}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - product
        - system
        stability:
          level: development
      saphana.license.peak:
        description: The peak product usage value during last 13 months, measured
          periodically.
        unit: '{licenses}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - product
        - system
        stability:
          level: development
      saphana.network.request.average_time:
        description: The average response time calculated over recent requests
        unit: ms
        enabled: true
        gauge:
          value_type: double
          input_type: string
        attributes: []
        stability:
          level: development
      saphana.network.request.count:
        description: The number of active and pending service requests.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - active_pending_request_state
        stability:
          level: development
      saphana.network.request.finished.count:
        description: The number of service requests that have completed.
        unit: '{requests}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - internal_external_request_type
        stability:
          level: development
      saphana.replication.average_time:
        description: The average amount of time consumed replicating a log.
        unit: us
        enabled: true
        gauge:
          value_type: double
          input_type: string
        attributes:
        - port
        - primary_host
        - replication_mode
        - secondary_host
        stability:
          level: development
      saphana.replication.backlog.size:
        description: The current replication backlog size.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - port
        - primary_host
        - replication_mode
        - secondary_host
        stability:
          level: development
      saphana.replication.backlog.time:
        description: The current replication backlog.
        unit: us
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - port
        - primary_host
        - replication_mode
        - secondary_host
        stability:
          level: development
      saphana.row_store.memory.used:
        description: The used memory for all row tables.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - row_memory_type
        stability:
          level: development
      saphana.schema.memory.used.current:
        description: The memory size for all tables in schema.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - schema
        - schema_memory_type
        stability:
          level: development
      saphana.schema.memory.used.max:
        description: The estimated maximum memory consumption for all fully loaded
          tables in schema (data for open transactions is not included).
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - schema
        stability:
          level: development
      saphana.schema.operation.count:
        description: The number of operations done on all tables in schema.
        unit: '{operations}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - schema
        - schema_operation_type
        stability:
          level: development
      saphana.schema.record.compressed.count:
        description: The number of entries in main during the last optimize compression
          run for all tables in schema.
        unit: '{records}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - schema
        stability:
          level: development
      saphana.schema.record.count:
        description: The number of records for all tables in schema.
        unit: '{records}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - schema
        - schema_record_type
        stability:
          level: development
      saphana.service.code_size:
        description: The service code size, including shared libraries.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - service
        stability:
          level: development
      saphana.service.count:
        description: The number of services in a given status.
        unit: '{services}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - service_status
        stability:
          level: development
      saphana.service.memory.compactors.allocated:
        description: The part of the memory pool that can potentially (if unpinned)
          be freed during a memory shortage.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - service
        stability:
          level: development
      saphana.service.memory.compactors.freeable:
        description: The memory that can be freed during a memory shortage.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - service
        stability:
          level: development
      saphana.service.memory.effective_limit:
        description: The effective maximum memory pool size, calculated considering
          the pool sizes of other processes.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - service
        stability:
          level: development
      saphana.service.memory.heap.current:
        description: The size of the heap portion of the memory pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - memory_state_used_free
        - service
        stability:
          level: development
      saphana.service.memory.limit:
        description: The configured maximum memory pool size.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - service
        stability:
          level: development
      saphana.service.memory.shared.current:
        description: The size of the shared portion of the memory pool.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - memory_state_used_free
        - service
        stability:
          level: development
      saphana.service.memory.used:
        description: The used memory from the operating system perspective.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - service
        - service_memory_used_type
        stability:
          level: development
      saphana.service.stack_size:
        description: The service stack size.
        unit: By
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - service
        stability:
          level: development
      saphana.service.thread.count:
        description: The number of service threads in a given status.
        unit: '{threads}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - thread_status
        stability:
          level: development
      saphana.transaction.blocked:
        description: The number of transactions waiting for a lock.
        unit: '{transactions}'
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      saphana.transaction.count:
        description: The number of transactions.
        unit: '{transactions}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - transaction_type
        stability:
          level: development
      saphana.uptime:
        description: The uptime of the database.
        unit: s
        enabled: true
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - database
        - system
        stability:
          level: development
      saphana.volume.operation.count:
        description: The number of operations executed.
        unit: '{operations}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - disk_usage_type
        - path
        - volume_operation_type
        stability:
          level: development
      saphana.volume.operation.size:
        description: The size of operations executed.
        unit: By
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - disk_usage_type
        - path
        - volume_operation_type
        stability:
          level: development
      saphana.volume.operation.time:
        description: The time spent executing operations.
        unit: ms
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - disk_usage_type
        - path
        - volume_operation_type
        stability:
          level: development
    resource_attributes:
      db.system:
        description: The type of database system.
        type: string
      saphana.host:
        description: The SAP HANA host.
        type: string
- name: signalfxreceiver
  metadata:
    type: signalfx
    status:
      class: receiver
      stability:
        beta:
        - logs
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        emeritus: null
- name: simpleprometheusreceiver
  metadata:
    type: prometheus_simple
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - fatsheep9146
- name: skywalkingreceiver
  metadata:
    type: skywalking
    status:
      class: receiver
      stability:
        beta:
        - traces
        development:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - JaredTan95
- name: snmpreceiver
  metadata:
    type: snmp
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - tamir-michaeli
        emeritus:
        - StefanKurek
- name: snowflakereceiver
  metadata:
    type: snowflake
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - shalper2
    attributes:
      database_name:
        description: Name of database being queried (default is snowflake).
        type: string
      error_message:
        description: Error message reported by query if present.
        type: string
      execution_status:
        description: Execution status of query being reported.
        type: string
      is_success:
        description: Login status (success or failure).
        type: string
      pipe_name:
        description: Name of snowpipe.
        type: string
      query_type:
        description: Type of query performed.
        type: string
      reported_client_type:
        description: Client type used for attempt.
        type: string
      schema_name:
        description: Name of schema associated with query result.
        type: string
      service_type:
        description: Service type associated with metric query.
        type: string
      user_name:
        description: Username in query being reported.
        type: string
      warehouse_name:
        description: Name of warehouse in query being reported on.
        type: string
      warehouse_size:
        description: Size of warehouse being reported on.
        type: string
    metrics:
      snowflake.billing.cloud_service.total:
        description: Reported total credits used in the cloud service over the last
          24 hour window.
        unit: '{credits}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - service_type
        stability:
          level: development
      snowflake.billing.total_credit.total:
        description: Reported total credits used across account over the last 24 hour
          window.
        unit: '{credits}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - service_type
        stability:
          level: development
      snowflake.billing.virtual_warehouse.total:
        description: Reported total credits used by virtual warehouse service over
          the last 24 hour window.
        unit: '{credits}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - service_type
        stability:
          level: development
      snowflake.billing.warehouse.cloud_service.total:
        description: Credits used across cloud service for given warehouse over the
          last 24 hour window.
        unit: '{credits}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - warehouse_name
        stability:
          level: development
      snowflake.billing.warehouse.total_credit.total:
        description: Total credits used associated with given warehouse over the last
          24 hour window.
        unit: '{credits}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - warehouse_name
        stability:
          level: development
      snowflake.billing.warehouse.virtual_warehouse.total:
        description: Total credits used by virtual warehouse service for given warehouse
          over the last 24 hour window.
        unit: '{credits}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - warehouse_name
        stability:
          level: development
      snowflake.database.bytes_scanned.avg:
        description: Average bytes scanned in a database over the last 24 hour window.
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.database.query.count:
        description: Total query count for database over the last 24 hour window.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.logins.total:
        description: Total login attempts for account over the last 24 hour window.
        unit: '1'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - error_message
        - is_success
        - reported_client_type
        stability:
          level: development
      snowflake.pipe.credits_used.total:
        description: Snow pipe credits contotaled over the last 24 hour window.
        unit: '{credits}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - pipe_name
        stability:
          level: development
      snowflake.query.blocked:
        description: Blocked query count for warehouse over the last 24 hour window.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - warehouse_name
        stability:
          level: development
      snowflake.query.bytes_deleted.avg:
        description: Average bytes deleted in database over the last 24 hour window.
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.query.bytes_spilled.local.avg:
        description: Average bytes spilled (intermediate results do not fit in memory)
          by local storage over the last 24 hour window.
        unit: By
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.query.bytes_spilled.remote.avg:
        description: Average bytes spilled (intermediate results do not fit in memory)
          by remote storage over the last 24 hour window.
        unit: By
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.query.bytes_written.avg:
        description: Average bytes written by database over the last 24 hour window.
        unit: By
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.query.compilation_time.avg:
        description: Average time taken to compile query over the last 24 hour window.
        unit: s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.query.data_scanned_cache.avg:
        description: Average percentage of data scanned from cache over the last 24
          hour window.
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.query.executed:
        description: Executed query count for warehouse over the last 24 hour window.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - warehouse_name
        stability:
          level: development
      snowflake.query.execution_time.avg:
        description: Average time spent executing queries in database over the last
          24 hour window.
        unit: s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.query.partitions_scanned.avg:
        description: Number of partitions scanned during query so far over the last
          24 hour window.
        unit: '1'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.query.queued_overload:
        description: Overloaded query count for warehouse over the last 24 hour window.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - warehouse_name
        stability:
          level: development
      snowflake.query.queued_provision:
        description: Number of compute resources queued for provisioning over the
          last 24 hour window.
        unit: '1'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - warehouse_name
        stability:
          level: development
      snowflake.queued_overload_time.avg:
        description: Average time spent in warehouse queue due to warehouse being
          overloaded over the last 24 hour window.
        unit: s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.queued_provisioning_time.avg:
        description: Average time spent in warehouse queue waiting for resources to
          provision over the last 24 hour window.
        unit: s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.queued_repair_time.avg:
        description: Average time spent in warehouse queue waiting for compute resources
          to be repaired over the last 24 hour window.
        unit: s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.rows_deleted.avg:
        description: Number of rows deleted from a table (or tables) over the last
          24 hour window.
        unit: '{rows}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.rows_inserted.avg:
        description: Number of rows inserted into a table (or tables) over the last
          24 hour window.
        unit: '{rows}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.rows_produced.avg:
        description: Average number of rows produced by statement over the last 24
          hour window.
        unit: '{rows}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.rows_unloaded.avg:
        description: Average number of rows unloaded during data export over the last
          24 hour window.
        unit: '{rows}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.rows_updated.avg:
        description: Average number of rows updated in a table over the last 24 hour
          window.
        unit: '{rows}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
      snowflake.session_id.count:
        description: Distinct session id's associated with snowflake username over
          the last 24 hour window.
        unit: '1'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - user_name
        stability:
          level: development
      snowflake.storage.failsafe_bytes.total:
        description: Number of bytes of data in Fail-safe.
        unit: By
        enabled: false
        gauge:
          value_type: double
        stability:
          level: development
      snowflake.storage.stage_bytes.total:
        description: Number of bytes of stage storage used by files in all internal
          stages (named, table, user).
        unit: By
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      snowflake.storage.storage_bytes.total:
        description: Number of bytes of table storage used, including bytes for data
          currently in Time Travel.
        unit: By
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      snowflake.total_elapsed_time.avg:
        description: Average elapsed time over the last 24 hour window.
        unit: s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - database_name
        - error_message
        - execution_status
        - query_type
        - schema_name
        - warehouse_name
        - warehouse_size
        stability:
          level: development
    resource_attributes:
      snowflake.account.name:
        description: Snowflake account being used by receiver.
        type: string
- name: solacereceiver
  metadata:
    type: solace
    status:
      class: receiver
      stability:
        beta:
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - mcardy
- name: splunkenterprisereceiver
  metadata:
    type: splunkenterprise
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - shalper2
        - MovieStoreGuy
        - greatestusername
    attributes:
      splunk.bucket.dir:
        description: The bucket super-directory (home, cold, thawed) for each index
        type: string
      splunk.feature:
        description: The Feature name from the Splunk Health Introspection Endpoint
        type: string
      splunk.feature.health:
        description: The Health (in color form) of a Splunk Feature from the Splunk
          Health Introspection Endpoint
        type: string
      splunk.host:
        description: The name of the splunk host
        type: string
      splunk.index.name:
        description: The name of the index reporting a specific KPI
        type: string
      splunk.indexer.searchable:
        description: The searchability status reported for a specific object
        type: string
      splunk.indexer.status:
        description: The status message reported for a specific object
        type: string
      splunk.kvstore.external:
        description: Value denoting if the KV store is using an external service
        type: string
      splunk.kvstore.status.value:
        description: The string value of the status returned when reporting on KV
          store using the introspection endpoint
        type: string
      splunk.kvstore.storage.engine:
        description: The backend storage used by the KV store
        type: string
      splunk.license.label:
        description: The label of the license.
        type: string
      splunk.license.status:
        description: The status of the license.
        type: string
      splunk.license.type:
        description: The type of license.
        type: string
      splunk.queue.name:
        description: The name of the queue reporting a specific KPI
        type: string
      splunk.rollingorrestart:
        description: Boolean that indicates if there is a rolling restart or rolling
          upgrade in progress.
        type: bool
      splunk.search.state:
        description: The dispatch state of the search
        type: string
      splunk.searchable.restart:
        description: Boolean that indicates if a searchable rolling restart/upgrade
          in progress.t
        type: bool
      splunk.searchartifacts.cache.type:
        description: The search artifacts cache type
        type: string
      splunk.splunkd.build:
        description: The build number for this Splunk instance version
        type: string
      splunk.splunkd.version:
        description: The splunkd version number
        type: string
    metrics:
      splunk.aggregation.queue.ratio:
        description: Gauge tracking the average indexer aggregation queue ration (%).
          *Note:** Search is best run against a Cluster Manager.
        unit: '{%}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.buckets.searchable.status:
        description: Gauge tracking the number of buckets and their searchable status.
          *Note:** Search is best run against a Cluster Manager.
        unit: '{count}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.host
        - splunk.indexer.searchable
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.data.indexes.extended.bucket.count:
        description: Count of buckets per index
        unit: '{buckets}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.data.indexes.extended.bucket.event.count:
        description: Count of events in this bucket super-directory. *Note:** Must
          be pointed at specific indexer `endpoint`.
        unit: '{events}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.bucket.dir
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.data.indexes.extended.bucket.hot.count:
        description: (If size > 0) Number of hot buckets. *Note:** Must be pointed
          at specific indexer `endpoint`.
        unit: '{buckets}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.bucket.dir
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.data.indexes.extended.bucket.warm.count:
        description: (If size > 0) Number of warm buckets. *Note:** Must be pointed
          at specific indexer `endpoint` and gathers metrics from only that indexer.
        unit: '{buckets}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.bucket.dir
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.data.indexes.extended.event.count:
        description: Count of events for index, excluding frozen events. Approximately
          equal to the event_count sum of all buckets. *Note:** Must be pointed at
          specific indexer `endpoint` and gathers metrics from only that indexer.
        unit: '{events}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.data.indexes.extended.raw.size:
        description: Size in bytes on disk of the <bucket>/rawdata/ directories of
          all buckets in this index, excluding frozen *Note:** Must be pointed at
          specific indexer `endpoint` and gathers metrics from only that indexer.
        unit: By
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.data.indexes.extended.total.size:
        description: Size in bytes on disk of this index *Note:** Must be pointed
          at specific indexer `endpoint` and gathers metrics from only that indexer.
        unit: By
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.health:
        description: The status ('red', 'yellow', or 'green') of the Splunk server.
          Health of 'red' produces a 0 while all other colors produce a 1.
        unit: '{status}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - splunk.feature
        - splunk.feature.health
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexer.avg.rate:
        description: Gauge tracking the average rate of indexed data. **Note:** Search
          is best run against a Cluster Manager.
        unit: KBy
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexer.cpu.time:
        description: Gauge tracking the number of indexing process cpu seconds per
          instance
        unit: '{s}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexer.queue.ratio:
        description: Gauge tracking the average indexer index queue ration (%). *Note:**
          Search is best run against a Cluster Manager.
        unit: '{%}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexer.raw.write.time:
        description: Gauge tracking the number of raw write seconds per instance
        unit: '{s}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexer.rollingrestart.status:
        description: The status of a rolling restart.
        unit: '{status}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.rollingorrestart
        - splunk.searchable.restart
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexer.throughput:
        description: Gauge tracking average bytes per second throughput of indexer.
          *Note:** Must be pointed at specific indexer `endpoint` and gathers metrics
          from only that indexer.
        unit: By/s
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.indexer.status
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexes.avg.size:
        description: Gauge tracking the indexes and their average size (gb). *Note:**
          Search is best run against a Cluster Manager.
        unit: Gb
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexes.avg.usage:
        description: Gauge tracking the indexes and their average usage (%). *Note:**
          Search is best run against a Cluster Manager.
        unit: '{%}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexes.bucket.count:
        description: Gauge tracking the indexes and their bucket counts. *Note:**
          Search is best run against a Cluster Manager.
        unit: '{count}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexes.median.data.age:
        description: Gauge tracking the indexes and their median data age (days).
          *Note:** Search is best run against a Cluster Manager.
        unit: '{days}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.indexes.size:
        description: Gauge tracking the indexes and their total size (gb). *Note:**
          Search is best run against a Cluster Manager.
        unit: Gb
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.io.avg.iops:
        description: Gauge tracking the average IOPs used per instance
        unit: '{iops}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.kvstore.backup.status:
        description: Backup and restore status of the KV store.
        unit: '{status}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.kvstore.status.value
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.kvstore.replication.status:
        description: Replication status of the KV store.
        unit: '{status}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.kvstore.status.value
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.kvstore.status:
        description: This is the overall status of the kvstore for the given deployment.
        unit: '{status}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.kvstore.external
        - splunk.kvstore.status.value
        - splunk.kvstore.storage.engine
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.license.expiration.seconds_remaining:
        description: Gauge tracking the seconds remaining on any given Splunk License
          found via Splunk API. **Note:** This will only work on a Cluster Manager.
        unit: '{seconds}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.license.label
        - splunk.license.status
        - splunk.license.type
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.license.index.usage:
        description: Gauge tracking the indexed license usage per index
        unit: By
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.index.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.parse.queue.ratio:
        description: Gauge tracking the average indexer parser queue ration (%). *Note:**
          Search is best run against a Cluster Manager.
        unit: '{%}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.pipeline.set.count:
        description: Gauge tracking the number of pipeline sets per indexer. **Note:**
          Search is best run against a Cluster Manager.
        unit: KBy
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.scheduler.avg.execution.latency:
        description: Gauge tracking the average execution latency of scheduled searches
        unit: '{ms}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.scheduler.avg.run.time:
        description: Gauge tracking the average runtime of scheduled searches
        unit: '{ms}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.scheduler.completion.ratio:
        description: Gauge tracking the ratio of completed to skipped scheduled searches
        unit: '{%}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.search.duration:
        description: Gauge tracking the duration in seconds of the last search probe
          call.
        unit: '{status}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.search.initiation:
        description: Gauge tracking whether the last search probe successfully initiated
          a search.
        unit: '{status}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.search.status:
        description: Gauge tracking the dispatch status of the last search probe.
        unit: '{status}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.search.state
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.search.success:
        description: Gauge tracking whether the last search probe call was successful
          with the dispatch state 'DONE'.
        unit: '{status}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.introspection.queues.current:
        description: Gauge tracking current length of queue. *Note:** Must be pointed
          at specific indexer `endpoint` and gathers metrics from only that indexer.
        unit: '{queues}'
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.queue.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.introspection.queues.current.bytes:
        description: Gauge tracking current bytes waiting in queue. *Note:** Must
          be pointed at specific indexer `endpoint` and gathers metrics from only
          that indexer.
        unit: By
        enabled: false
        gauge:
          value_type: int
        attributes:
        - splunk.queue.name
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.adhoc:
        description: Gauge tracking number of ad hoc search artifacts currently on
          disk. Note:* Must be pointed at specific Search Head endpoint and gathers
          metrics from only that Search Head. Available in builds 9.1.2312.207+ and
          9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.adhoc.size:
        description: Gauge total size (MB) of ad hoc search artifacts currently on
          disk. Note:* Must be pointed at specific Search Head endpoint and gathers
          metrics from only that Search Head. Available in builds 9.1.2312.207+ and
          9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.completed:
        description: Gauge tracking number of artifacts currently on disk that belong
          to finished searches. Note:* Must be pointed at specific Search Head endpoint
          and gathers metrics from only that Search Head. Available in builds 9.1.2312.207+
          and 9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.completed.size:
        description: Gauge total size (MB) of artifacts currently on disk that belong
          to finished searches. Note:* Must be pointed at specific Search Head endpoint
          and gathers metrics from only that Search Head. Available in builds 9.1.2312.207+
          and 9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.incomplete:
        description: Gauge tracking number of artifacts currently on disk that belong
          to unfinished/running searches. Note:* Must be pointed at specific Search
          Head endpoint and gathers metrics from only that Search Head. Available
          in builds 9.1.2312.207+ and 9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.incomplete.size:
        description: Gauge total size (MB) of artifacts currently on disk that belong
          to unfinished/running searches. Note:* Must be pointed at specific Search
          Head endpoint and gathers metrics from only that Search Head. Available
          in builds 9.1.2312.207+ and 9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.invalid:
        description: Gauge tracking number of artifacts currently on disk that are
          not in a valid state, such as missing info.csv file, etc. Note:* Must be
          pointed at specific Search Head endpoint and gathers metrics from only that
          Search Head. Available in builds 9.1.2312.207+ and 9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.job.cache.count:
        description: Gauge tracking number search artifacts metadata stored in memory,
          available in builds 9.1.2312.207+ and 9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.job.cache.size:
        description: Gauge tracking, in megabytes, memory used to cache job status
          and job info of all search artifacts, available in builds 9.1.2312.207+
          and 9.3.x+.
        unit: '{mb}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.searchartifacts.cache.type
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.savedsearches:
        description: Gauge tracking, for the `splunk.server.searchartifacts.scheduled`
          number of scheduled search artifacts, how many different saved-searches
          they belong to. Note:* Must be pointed at specific Search Head endpoint
          and gathers metrics from only that Search Head. Available in builds 9.1.2312.207+
          and 9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.scheduled:
        description: Gauge tracking number of scheduled search artifacts currently
          on disk. Note:* Must be pointed at specific Search Head endpoint and gathers
          metrics from only that Search Head. Available in builds 9.1.2312.207+ and
          9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.server.searchartifacts.scheduled.size:
        description: Gauge total size (MB) of scheduled search artifacts currently
          on disk. Note:* Must be pointed at specific Search Head endpoint and gathers
          metrics from only that Search Head. Available in builds 9.1.2312.207+ and
          9.3.x+.
        unit: '{search_artifacts}'
        enabled: false
        gauge:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
      splunk.typing.queue.ratio:
        description: Gauge tracking the average indexer typing queue ration (%). *Note:**
          Search is best run against a Cluster Manager.
        unit: '{%}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - splunk.host
        - splunk.splunkd.build
        - splunk.splunkd.version
- name: splunkhecreceiver
  metadata:
    type: splunk_hec
    status:
      class: receiver
      stability:
        beta:
        - logs
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        emeritus: null
- name: sqlqueryreceiver
  metadata:
    type: sqlquery
    status:
      class: receiver
      stability:
        alpha:
        - metrics
        development:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - dmitryax
        - crobert-1
        emeritus:
        - pmcollins
- name: sqlserverreceiver
  metadata:
    type: sqlserver
    status:
      class: receiver
      stability:
        beta:
        - metrics
        development:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - sincejune
        - crobert-1
        emeritus:
        - StefanKurek
        seeking_new: true
    attributes:
      client.address:
        description: Hostname or address of the client.
        type: string
      client.port:
        description: TCP port used by the client.
        type: int
      database.status:
        description: The current status of a database
        type: string
        enum:
        - offline
        - online
        - pending_recovery
        - recovering
        - restoring
        - suspect
      db.namespace:
        description: The database name.
        type: string
      db.query.text:
        description: The text of the database query being executed.
        type: string
      db.system.name:
        description: The database management system (DBMS) product as identified by
          the client instrumentation.
        type: string
      direction:
        description: The direction of flow of bytes or operations.
        type: string
        enum:
        - read
        - write
      file_type:
        description: The type of file being monitored.
        type: string
      logical_filename:
        description: The logical filename of the file being monitored.
        type: string
      network.peer.address:
        description: IP address of the peer client.
        type: string
      network.peer.port:
        description: TCP port used by the peer client.
        type: int
      page.operations:
        description: The page operation types.
        type: string
        name_override: type
        enum:
        - read
        - write
      performance_counter.object_name:
        description: Category to which this counter belongs
        type: string
      physical_filename:
        description: The physical filename of the file being monitored.
        type: string
      replica.direction:
        description: The direction of flow of bytes for replica.
        type: string
        enum:
        - receive
        - transmit
      server.address:
        description: The network address of the server hosting the database.
        type: string
      server.port:
        description: The port number on which the server is listening.
        type: int
      sqlserver.blocking_session_id:
        description: Session ID that is blocking the current session. 0 if none.
        type: int
      sqlserver.command:
        description: SQL command type being executed.
        type: string
      sqlserver.context_info:
        description: Context information for the session, represented as a hexadecimal
          string.
        type: string
      sqlserver.cpu_time:
        description: CPU time consumed by the query, in seconds.
        type: double
      sqlserver.deadlock_priority:
        description: Deadlock priority value for the session.
        type: int
      sqlserver.estimated_completion_time:
        description: Estimated time remaining for the request to complete, in seconds.
        type: double
      sqlserver.execution_count:
        description: Number of times that the plan has been executed since it was
          last compiled, reported in delta value.
        type: int
      sqlserver.lock_timeout:
        description: Lock timeout value in seconds.
        type: double
      sqlserver.logical_reads:
        description: Number of logical reads (data read from cache/memory).
        type: int
      sqlserver.open_transaction_count:
        description: Number of transactions currently open in the session.
        type: int
      sqlserver.percent_complete:
        description: Percentage of work completed.
        type: double
      sqlserver.query_hash:
        description: Binary hash value calculated on the query and used to identify
          queries with similar logic, reported in the HEX format.
        type: string
      sqlserver.query_plan:
        description: The query execution plan used by the SQL Server.
        type: string
      sqlserver.query_plan_hash:
        description: Binary hash value calculated on the query execution plan and
          used to identify similar query execution plans, reported in the HEX format.
        type: string
      sqlserver.query_start:
        description: Timestamp of when the SQL query started (ISO 8601 format).
        type: string
      sqlserver.reads:
        description: Number of physical reads performed by the query.
        type: int
      sqlserver.request_status:
        description: Status of the request (e.g., running, suspended).
        type: string
      sqlserver.row_count:
        description: Number of rows affected or returned by the query.
        type: int
      sqlserver.session_id:
        description: ID of the SQL Server session.
        type: int
      sqlserver.session_status:
        description: Status of the session (e.g., running, sleeping).
        type: string
      sqlserver.total_elapsed_time:
        description: Total elapsed time for completed executions of this plan, reported
          in delta seconds.
        type: double
      sqlserver.total_grant_kb:
        description: The total amount of reserved memory grant in KB this plan received
          since it was compiled, reported in delta value.
        type: int
      sqlserver.total_logical_reads:
        description: Total number of logical reads performed by executions of this
          plan since it was compiled, reported in delta value.
        type: int
      sqlserver.total_logical_writes:
        description: Total number of logical writes performed by executions of this
          plan since it was compiled, reported in delta value.
        type: int
      sqlserver.total_physical_reads:
        description: Total number of physical reads performed by executions of this
          plan since it was compiled, reported in delta value.
        type: int
      sqlserver.total_rows:
        description: Total number of rows returned by the query, reported in delta
          value.
        type: int
      sqlserver.total_worker_time:
        description: Total amount of CPU time that was consumed by executions of this
          plan since it was compiled, reported in delta seconds.
        type: double
      sqlserver.transaction_id:
        description: Unique ID of the active transaction.
        type: int
      sqlserver.transaction_isolation_level:
        description: Transaction isolation level used in the session. Represented
          as numeric constant.
        type: int
      sqlserver.wait_resource:
        description: The resource for which the session is waiting.
        type: string
      sqlserver.wait_time:
        description: Duration in seconds the request has been waiting.
        type: double
      sqlserver.wait_type:
        description: Type of wait encountered by the request. Empty if none.
        type: string
      sqlserver.writes:
        description: Number of writes performed by the query.
        type: int
      table.state:
        description: The state of the table.
        type: string
        enum:
        - active
        - inactive
      table.status:
        description: The status of the table.
        type: string
        enum:
        - permanent
        - temporary
      tempdb.state:
        description: The status of the tempdb space usage.
        type: string
        enum:
        - free
        - used
      user.name:
        description: Login name associated with the SQL Server session.
        type: string
      wait.category:
        description: Category of the reason for a wait.
        type: string
      wait.type:
        description: Type of the wait, view [WaitTypes documentation](https://learn.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-os-wait-stats-transact-sql?view=sql-server-ver16#WaitTypes)
          for more information.
        type: string
    metrics:
      sqlserver.batch.request.rate:
        description: Number of batch requests received by SQL Server.
        unit: '{requests}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.batch.sql_compilation.rate:
        description: Number of SQL compilations needed.
        unit: '{compilations}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.batch.sql_recompilation.rate:
        description: Number of SQL recompilations needed.
        unit: '{compilations}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.computer.uptime:
        description: Computer uptime.
        unit: '{seconds}'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      sqlserver.cpu.count:
        description: Number of CPUs.
        unit: '{CPUs}'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        stability:
          level: development
      sqlserver.database.backup_or_restore.rate:
        description: Total number of backups/restores.
        unit: “{backups_or_restores}/s”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.database.count:
        description: The number of databases
        unit: '{databases}'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        attributes:
        - database.status
        stability:
          level: development
      sqlserver.database.execution.errors:
        description: Number of execution errors.
        unit: “{errors}”
        enabled: false
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      sqlserver.database.full_scan.rate:
        description: The number of unrestricted full table or index scans.
        unit: '{scans}/s'
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.database.io:
        description: The number of bytes of I/O on this file.
        unit: By
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - direction
        - file_type
        - logical_filename
        - physical_filename
        stability:
          level: development
      sqlserver.database.latency:
        description: Total time that the users waited for I/O issued on this file.
        unit: s
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: double
        attributes:
        - direction
        - file_type
        - logical_filename
        - physical_filename
        stability:
          level: development
      sqlserver.database.operations:
        description: The number of operations issued on the file.
        unit: '{operations}'
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
          input_type: string
        attributes:
        - direction
        - file_type
        - logical_filename
        - physical_filename
        stability:
          level: development
      sqlserver.database.tempdb.space:
        description: Total free space in temporary DB.
        unit: “KB”
        enabled: false
        sum:
          monotonic: false
          aggregation_temporality: cumulative
          value_type: int
        attributes:
        - tempdb.state
        stability:
          level: development
      sqlserver.database.tempdb.version_store.size:
        description: TempDB version store size.
        unit: “KB”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.deadlock.rate:
        description: Total number of deadlocks.
        unit: “{deadlocks}/s”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.index.search.rate:
        description: Total number of index searches.
        unit: “{searches}/s”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.lock.timeout.rate:
        description: Total number of lock timeouts.
        unit: “{timeouts}/s”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.lock.wait.count:
        description: Cumulative count of lock waits that occurred.
        unit: '{wait}'
        enabled: false
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      sqlserver.lock.wait.rate:
        description: Number of lock requests resulting in a wait.
        unit: '{requests}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.lock.wait_time.avg:
        description: Average wait time for all lock requests that had to wait.
        unit: ms
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.login.rate:
        description: Total number of logins.
        unit: “{logins}/s”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.logout.rate:
        description: Total number of logouts.
        unit: “{logouts}/s”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.memory.grants.pending.count:
        description: Total number of memory grants pending.
        unit: “{grants}”
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes: []
        stability:
          level: development
      sqlserver.memory.usage:
        description: Total memory in use.
        unit: “KB”
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.os.wait.duration:
        description: Total wait time for this wait type
        unit: s
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: true
          value_type: double
        attributes:
        - wait.category
        - wait.type
        stability:
          level: development
      sqlserver.page.buffer_cache.free_list.stalls.rate:
        description: Number of free list stalls.
        unit: “{stalls}/s”
        enabled: false
        gauge:
          value_type: int
        attributes: []
        stability:
          level: development
      sqlserver.page.buffer_cache.hit_ratio:
        description: Pages found in the buffer pool without having to read from disk.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.page.checkpoint.flush.rate:
        description: Number of pages flushed by operations requiring dirty pages to
          be flushed.
        unit: '{pages}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.page.lazy_write.rate:
        description: Number of lazy writes moving dirty pages to disk.
        unit: '{writes}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.page.life_expectancy:
        description: Time a page will stay in the buffer pool.
        unit: s
        enabled: true
        gauge:
          value_type: int
        attributes:
        - performance_counter.object_name
        stability:
          level: development
      sqlserver.page.lookup.rate:
        description: Total number of page lookups.
        unit: “{lookups}/s”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.page.operation.rate:
        description: Number of physical database page operations issued.
        unit: '{operations}/s'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - page.operations
        stability:
          level: development
      sqlserver.page.split.rate:
        description: Number of pages split as a result of overflowing index pages.
        unit: '{pages}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.processes.blocked:
        description: The number of processes that are currently blocked
        unit: '{processes}'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      sqlserver.replica.data.rate:
        description: Throughput rate of replica data.
        unit: By/s
        enabled: false
        gauge:
          value_type: double
        attributes:
        - replica.direction
        stability:
          level: development
      sqlserver.resource_pool.disk.operations:
        description: The rate of operations issued.
        unit: '{operations}/s'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - direction
        stability:
          level: development
      sqlserver.resource_pool.disk.throttled.read.rate:
        description: The number of read operations that were throttled in the last
          second
        unit: '{reads}/s'
        enabled: false
        gauge:
          value_type: int
          input_type: string
        attributes: []
        stability:
          level: development
      sqlserver.resource_pool.disk.throttled.write.rate:
        description: The number of write operations that were throttled in the last
          second
        unit: '{writes}/s'
        enabled: false
        gauge:
          value_type: double
          input_type: string
        attributes: []
        stability:
          level: development
      sqlserver.table.count:
        description: The number of tables.
        unit: “{tables}”
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: int
        attributes:
        - table.state
        - table.status
        stability:
          level: development
      sqlserver.transaction.delay:
        description: Time consumed in transaction delays.
        unit: ms
        enabled: false
        sum:
          aggregation_temporality: cumulative
          monotonic: false
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.transaction.mirror_write.rate:
        description: Total number of mirror write transactions.
        unit: “{transactions}/s”
        enabled: false
        gauge:
          value_type: double
        attributes: []
        stability:
          level: development
      sqlserver.transaction.rate:
        description: Number of transactions started for the database (not including
          XTP-only transactions).
        unit: '{transactions}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.transaction.write.rate:
        description: Number of transactions that wrote to the database and committed.
        unit: '{transactions}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.transaction_log.flush.data.rate:
        description: Total number of log bytes flushed.
        unit: By/s
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.transaction_log.flush.rate:
        description: Number of log flushes.
        unit: '{flushes}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.transaction_log.flush.wait.rate:
        description: Number of commits waiting for a transaction log flush.
        unit: '{commits}/s'
        enabled: true
        gauge:
          value_type: double
        stability:
          level: development
      sqlserver.transaction_log.growth.count:
        description: Total number of transaction log expansions for a database.
        unit: '{growths}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      sqlserver.transaction_log.shrink.count:
        description: Total number of transaction log shrinks for a database.
        unit: '{shrinks}'
        enabled: true
        sum:
          monotonic: true
          aggregation_temporality: cumulative
          value_type: int
        stability:
          level: development
      sqlserver.transaction_log.usage:
        description: Percent of transaction log space used.
        unit: '%'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      sqlserver.user.connection.count:
        description: Number of users connected to the SQL Server.
        unit: '{connections}'
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
    resource_attributes:
      host.name:
        description: The host name of SQL Server
        type: string
      server.address:
        description: Name of the database host.
        type: string
      server.port:
        description: Server port number.
        type: int
      service.instance.id:
        description: A unique identifier of the SQL Server instance in the format
          host:port. This resource attribute is only available when the receiver is
          configured to directly connect to SQL Server.
        type: string
      sqlserver.computer.name:
        description: The name of the SQL Server instance being monitored.
        type: string
      sqlserver.database.name:
        description: The name of the SQL Server database.
        type: string
      sqlserver.instance.name:
        description: The name of the SQL Server instance being monitored.
        type: string
- name: sshcheckreceiver
  metadata:
    type: sshcheck
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - nslaughter
    attributes:
      error.message:
        description: Error message recorded during check
        type: string
    metrics:
      sshcheck.duration:
        description: Measures the duration of SSH connection.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        stability:
          level: development
      sshcheck.error:
        description: Records errors occurring during SSH check.
        unit: '{error}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - error.message
        stability:
          level: development
      sshcheck.sftp_duration:
        description: Measures SFTP request duration.
        unit: ms
        enabled: false
        gauge:
          value_type: int
        stability:
          level: development
      sshcheck.sftp_error:
        description: Records errors occurring during SFTP check.
        unit: '{error}'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        attributes:
        - error.message
        stability:
          level: development
      sshcheck.sftp_status:
        description: 1 if the SFTP server replied to request, otherwise 0.
        unit: '1'
        enabled: false
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
      sshcheck.status:
        description: 1 if the SSH client successfully connected, otherwise 0.
        unit: '1'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: false
        stability:
          level: development
    resource_attributes:
      ssh.endpoint:
        description: Full SSH endpoint
        type: string
- name: statsdreceiver
  metadata:
    type: statsd
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - jmacd
        - dmitryax
- name: stefreceiver
  metadata:
    type: stef
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - tigrannajaryan
        - MovieStoreGuy
        - dmitryax
        - atoulme
        - pjanotti
        - crobert-1
- name: syslogreceiver
  metadata:
    type: syslog
    status:
      class: receiver
      stability:
        beta:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - andrzej-stencel
        emeritus:
        - djaglowski
        seeking_new: true
- name: systemdreceiver
  metadata:
    type: systemd
    status:
      class: receiver
      stability:
        development:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        emeritus:
        - Hemansh31
- name: tcpcheckreceiver
  metadata:
    type: tcpcheck
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - michael-burt
        - chengchuanpeng
        - yanfeng1992
    attributes:
      error.code:
        description: Error code recorded during check
        type: string
        enum:
        - connection_refused
        - connection_timeout
        - invalid_endpoint
        - network_unreachable
        - unknown_error
      tcpcheck.endpoint:
        description: TCP endpoint
        type: string
    metrics:
      tcpcheck.duration:
        description: Measures the duration of TCP connection.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        attributes:
        - tcpcheck.endpoint
        stability:
          level: development
      tcpcheck.error:
        description: Records errors occurring during TCP check.
        unit: '{error}'
        enabled: true
        sum:
          value_type: int
          aggregation_temporality: cumulative
          monotonic: true
        attributes:
        - error.code
        - tcpcheck.endpoint
        stability:
          level: development
      tcpcheck.status:
        description: 1 if the TCP client successfully connected, otherwise 0.
        unit: '1'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - tcpcheck.endpoint
        stability:
          level: development
    resource_attributes: {}
- name: tcplogreceiver
  metadata:
    type: tcplog
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - VihasMakwana
        emeritus:
        - djaglowski
        seeking_new: true
- name: tlscheckreceiver
  metadata:
    type: tlscheck
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - michael-burt
    attributes:
      tlscheck.x509.cn:
        description: The commonName in the subject of the certificate.
        type: string
      tlscheck.x509.issuer:
        description: The entity that issued the certificate.
        type: string
      tlscheck.x509.san:
        description: The Subject Alternative Name of the certificate.
        type: slice
    metrics:
      tlscheck.time_left:
        description: Time in seconds until certificate expiry, as specified by `NotAfter`
          field in the x.509 certificate. Negative values represent time in seconds
          since expiration.
        unit: s
        enabled: true
        gauge:
          value_type: int
        attributes:
        - tlscheck.x509.cn
        - tlscheck.x509.issuer
        - tlscheck.x509.san
        stability:
          level: development
    resource_attributes:
      tlscheck.target:
        description: Endpoint or file path at which the certificate was accessed.
        type: string
- name: udplogreceiver
  metadata:
    type: udplog
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - VihasMakwana
        emeritus:
        - djaglowski
        seeking_new: true
- name: vcenterreceiver
  metadata:
    type: vcenter
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - schmikei
        - ishleenk17
        emeritus:
        - StefanKurek
        seeking_new: true
    attributes:
      cpu_reservation_type:
        description: The type of CPU reservation for the host.
        type: string
        enum:
        - total
        - used
      cpu_state:
        description: CPU time spent in idle, ready or idle state.
        type: string
        enum:
        - idle
        - ready
        - wait
      disk_direction:
        description: The direction of disk latency.
        type: string
        name_override: direction
        enum:
        - read
        - write
      disk_state:
        description: The state of storage and whether it is already allocated or free.
        type: string
        enum:
        - available
        - used
      disk_type:
        description: The type of storage device that is being recorded.
        type: string
        enum:
        - physical
        - virtual
      entity_status:
        description: The current status of the managed entity.
        type: string
        name_override: status
        enum:
        - gray
        - green
        - red
        - yellow
      host_effective:
        description: Whether the host is effective in the vCenter cluster.
        type: bool
        name_override: effective
      host_power_state:
        description: The current power state of the host.
        type: string
        name_override: power_state
        enum:
        - 'off'
        - 'on'
        - standby
        - unknown
      memory_granted_type:
        description: The type of memory granted.
        type: string
        name_override: type
        enum:
        - private
        - shared
      memory_usage_type:
        description: The type of memory usage.
        type: string
        name_override: type
        enum:
        - guest
        - host
        - overhead
      object_name:
        description: The object on the virtual machine or host that is being reported
          on.
        type: string
        name_override: object
      throughput_direction:
        description: The direction of network throughput.
        type: string
        name_override: direction
        enum:
        - received
        - transmitted
      vm_count_power_state:
        description: The current power state of the virtual machine.
        type: string
        name_override: power_state
        enum:
        - 'off'
        - 'on'
        - suspended
        - unknown
      vsan_latency_type:
        description: The type of vSAN latency.
        type: string
        name_override: type
        enum:
        - read
        - write
      vsan_operation_type:
        description: The type of vSAN operation.
        type: string
        name_override: type
        enum:
        - read
        - unmap
        - write
      vsan_throughput_direction:
        description: The type of vSAN throughput.
        type: string
        name_override: direction
        enum:
        - read
        - write
    metrics:
      vcenter.cluster.cpu.effective:
        description: The effective CPU available to the cluster. This value excludes
          CPU from hosts in maintenance mode or are unresponsive.
        unit: MHz
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.cluster.cpu.limit:
        description: The amount of CPU available to the cluster.
        unit: MHz
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.cluster.host.count:
        description: The number of hosts in the cluster.
        unit: '{hosts}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - host_effective
      vcenter.cluster.memory.effective:
        description: The effective available memory of the cluster.
        unit: By
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.cluster.memory.limit:
        description: The available memory of the cluster.
        unit: By
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.cluster.vm.count:
        description: The number of virtual machines in the cluster.
        unit: '{virtual_machines}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - vm_count_power_state
      vcenter.cluster.vm_template.count:
        description: The number of virtual machine templates in the cluster.
        unit: '{virtual_machine_templates}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.cluster.vsan.congestions:
        description: The congestions of IOs generated by all vSAN clients in the cluster.
        unit: '{congestions/s}'
        enabled: true
        gauge:
          value_type: double
        attributes: []
      vcenter.cluster.vsan.latency.avg:
        description: The overall cluster latency while accessing vSAN storage.
        unit: us
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vsan_latency_type
      vcenter.cluster.vsan.operations:
        description: The vSAN IOPs of a cluster.
        unit: '{operations/s}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vsan_operation_type
      vcenter.cluster.vsan.throughput:
        description: The vSAN throughput of a cluster.
        unit: By/s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - vsan_throughput_direction
      vcenter.datacenter.cluster.count:
        description: The number of clusters in the datacenter.
        unit: '{clusters}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - entity_status
      vcenter.datacenter.cpu.limit:
        description: The total amount of CPU available to the datacenter.
        unit: MHz
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.datacenter.datastore.count:
        description: The number of datastores in the datacenter.
        unit: '{datastores}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.datacenter.disk.space:
        description: The amount of available and used disk space in the datacenter.
        unit: By
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - disk_state
      vcenter.datacenter.host.count:
        description: The number of hosts in the datacenter.
        unit: '{hosts}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - entity_status
        - host_power_state
      vcenter.datacenter.memory.limit:
        description: The total amount of memory available to the datacenter.
        unit: By
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.datacenter.vm.count:
        description: The number of VM's in the datacenter.
        unit: '{virtual_machines}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - entity_status
        - vm_count_power_state
      vcenter.datastore.disk.usage:
        description: The amount of space in the datastore.
        unit: By
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - disk_state
      vcenter.datastore.disk.utilization:
        description: The utilization of the datastore.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        attributes: []
      vcenter.host.cpu.capacity:
        description: Total CPU capacity of the host system.
        unit: MHz
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.host.cpu.reserved:
        description: The CPU of the host reserved for use by virtual machines.
        unit: MHz
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - cpu_reservation_type
      vcenter.host.cpu.usage:
        description: The amount of CPU used by the host.
        unit: MHz
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.host.cpu.utilization:
        description: The CPU utilization of the host system.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        attributes: []
      vcenter.host.disk.latency.avg:
        description: The latency of operations to the host system's disk.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        attributes:
        - disk_direction
        - object_name
      vcenter.host.disk.latency.max:
        description: Highest latency value across all disks used by the host.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        attributes:
        - object_name
      vcenter.host.disk.throughput:
        description: Average number of kilobytes read from or written to the disk
          each second.
        unit: '{KiBy/s}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - disk_direction
        - object_name
      vcenter.host.memory.capacity:
        description: Total memory  capacity of the host system.
        unit: MiBy
        enabled: false
        sum:
          monotonic: false
          value_type: double
          aggregation_temporality: cumulative
        attributes: []
      vcenter.host.memory.usage:
        description: The amount of memory the host system is using.
        unit: MiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.host.memory.utilization:
        description: The percentage of the host system's memory capacity that is being
          utilized.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        attributes: []
      vcenter.host.network.packet.drop.rate:
        description: The rate of packets dropped across each physical NIC (network
          interface controller) instance on the host.
        unit: '{packets/s}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - object_name
        - throughput_direction
      vcenter.host.network.packet.error.rate:
        description: The rate of packet errors transmitted or received on the host
          network.
        unit: '{errors/s}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - object_name
        - throughput_direction
      vcenter.host.network.packet.rate:
        description: The rate of packets transmitted or received across each physical
          NIC (network interface controller) instance on the host.
        unit: '{packets/s}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - object_name
        - throughput_direction
      vcenter.host.network.throughput:
        description: The amount of data that was transmitted or received over the
          network by the host.
        unit: '{KiBy/s}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - object_name
        - throughput_direction
      vcenter.host.network.usage:
        description: The sum of the data transmitted and received for all the NIC
          instances of the host.
        unit: '{KiBy/s}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - object_name
      vcenter.host.vsan.cache.hit_rate:
        description: The host's read IOs which could be satisfied by the local client
          cache.
        unit: '%'
        enabled: true
        gauge:
          value_type: int
        attributes: []
      vcenter.host.vsan.congestions:
        description: The congestions of IOs generated by all vSAN clients in the host.
        unit: '{congestions/s}'
        enabled: true
        gauge:
          value_type: double
        attributes: []
      vcenter.host.vsan.latency.avg:
        description: The host latency while accessing vSAN storage.
        unit: us
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vsan_latency_type
      vcenter.host.vsan.operations:
        description: The vSAN IOPs of a host.
        unit: '{operations/s}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vsan_operation_type
      vcenter.host.vsan.throughput:
        description: The vSAN throughput of a host.
        unit: By/s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - vsan_throughput_direction
      vcenter.resource_pool.cpu.shares:
        description: The amount of shares of CPU in the resource pool.
        unit: '{shares}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.resource_pool.cpu.usage:
        description: The usage of the CPU used by the resource pool.
        unit: MHz
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.resource_pool.memory.ballooned:
        description: The amount of memory in a resource pool that is ballooned due
          to virtualization.
        unit: MiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.resource_pool.memory.granted:
        description: The amount of memory that is granted to VMs in the resource pool
          from shared and non-shared host memory.
        unit: MiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - memory_granted_type
      vcenter.resource_pool.memory.shares:
        description: The amount of shares of memory in the resource pool.
        unit: '{shares}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.resource_pool.memory.swapped:
        description: The amount of memory that is granted to VMs in the resource pool
          from the host's swap space.
        unit: MiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.resource_pool.memory.usage:
        description: The usage of the memory by the resource pool.
        unit: MiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - memory_usage_type
      vcenter.vm.cpu.readiness:
        description: Percentage of time that the virtual machine was ready, but could
          not get scheduled to run on the physical CPU.
        unit: '%'
        enabled: true
        gauge:
          value_type: int
        attributes: []
      vcenter.vm.cpu.time:
        description: CPU time spent in idle, ready or wait state.
        unit: '%'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - cpu_state
        - object_name
      vcenter.vm.cpu.usage:
        description: The amount of CPU used by the VM.
        unit: MHz
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.vm.cpu.utilization:
        description: The CPU utilization of the VM.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        attributes: []
      vcenter.vm.disk.latency.avg:
        description: The latency of operations to the virtual machine's disk.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        attributes:
        - disk_direction
        - disk_type
        - object_name
      vcenter.vm.disk.latency.max:
        description: The highest reported total latency (device and kernel times)
          over an interval of 20 seconds.
        unit: ms
        enabled: true
        gauge:
          value_type: int
        attributes:
        - object_name
      vcenter.vm.disk.throughput:
        description: Average number of kilobytes read from or written to the virtual
          disk each second.
        unit: '{KiBy/s}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - disk_direction
        - object_name
      vcenter.vm.disk.usage:
        description: The amount of storage space used by the virtual machine.
        unit: By
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - disk_state
      vcenter.vm.disk.utilization:
        description: The utilization of storage on the virtual machine.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        attributes: []
      vcenter.vm.memory.ballooned:
        description: The amount of memory that is ballooned due to virtualization.
        unit: MiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.vm.memory.granted:
        description: The amount of memory that is granted to a VM.
        unit: MiBy
        enabled: false
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.vm.memory.swapped:
        description: The portion of memory that is granted to this VM from the host's
          swap space.
        unit: MiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.vm.memory.swapped_ssd:
        description: The amount of memory swapped to fast disk device such as SSD.
        unit: KiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.vm.memory.usage:
        description: The amount of memory that is used by the virtual machine.
        unit: MiBy
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes: []
      vcenter.vm.memory.utilization:
        description: The memory utilization of the VM.
        unit: '%'
        enabled: true
        gauge:
          value_type: double
        attributes: []
      vcenter.vm.network.broadcast.packet.rate:
        description: The rate of broadcast packets transmitted or received by each
          vNIC (virtual network interface controller) on the virtual machine.
        unit: '{packets/s}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - object_name
        - throughput_direction
      vcenter.vm.network.multicast.packet.rate:
        description: The rate of multicast packets transmitted or received by each
          vNIC (virtual network interface controller) on the virtual machine.
        unit: '{packets/s}'
        enabled: false
        gauge:
          value_type: double
        attributes:
        - object_name
        - throughput_direction
      vcenter.vm.network.packet.drop.rate:
        description: The rate of transmitted or received packets dropped by each vNIC
          (virtual network interface controller) on the virtual machine.
        unit: '{packets/s}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - object_name
        - throughput_direction
      vcenter.vm.network.packet.rate:
        description: The rate of packets transmitted or received by each vNIC (virtual
          network interface controller) on the virtual machine.
        unit: '{packets/s}'
        enabled: true
        gauge:
          value_type: double
        attributes:
        - object_name
        - throughput_direction
      vcenter.vm.network.throughput:
        description: The amount of data that was transmitted or received over the
          network of the virtual machine.
        unit: By/s
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - object_name
        - throughput_direction
      vcenter.vm.network.usage:
        description: The network utilization combined transmit and receive rates during
          an interval.
        unit: '{KiBy/s}'
        enabled: true
        sum:
          monotonic: false
          value_type: int
          aggregation_temporality: cumulative
        attributes:
        - object_name
      vcenter.vm.vsan.latency.avg:
        description: The virtual machine latency while accessing vSAN storage.
        unit: us
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vsan_latency_type
      vcenter.vm.vsan.operations:
        description: The vSAN IOPs of a virtual machine.
        unit: '{operations/s}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - vsan_operation_type
      vcenter.vm.vsan.throughput:
        description: The vSAN throughput of a virtual machine.
        unit: By/s
        enabled: true
        gauge:
          value_type: double
        attributes:
        - vsan_throughput_direction
    resource_attributes:
      vcenter.cluster.name:
        description: The name of the vCenter cluster.
        type: string
      vcenter.datacenter.name:
        description: The name of the vCenter datacenter.
        type: string
      vcenter.datastore.name:
        description: The name of the vCenter datastore.
        type: string
      vcenter.host.name:
        description: The hostname of the vCenter ESXi host.
        type: string
      vcenter.resource_pool.inventory_path:
        description: The inventory path of the resource pool.
        type: string
      vcenter.resource_pool.name:
        description: The name of the resource pool.
        type: string
      vcenter.virtual_app.inventory_path:
        description: The inventory path of the vApp.
        type: string
      vcenter.virtual_app.name:
        description: The name of the vApp.
        type: string
      vcenter.vm.id:
        description: The instance UUID of the virtual machine.
        type: string
      vcenter.vm.name:
        description: The name of the virtual machine.
        type: string
      vcenter.vm_template.id:
        description: The instance UUID of the virtual machine template.
        type: string
      vcenter.vm_template.name:
        description: The name of the virtual machine template.
        type: string
- name: wavefrontreceiver
  metadata:
    type: wavefront
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - samiura
- name: webhookeventreceiver
  metadata:
    type: webhookevent
    status:
      class: receiver
      stability:
        beta:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - atoulme
        - shalper2
        emeritus: null
- name: windowseventlogreceiver
  metadata:
    type: windowseventlog
    status:
      class: receiver
      stability:
        alpha:
        - logs
      distributions:
      - contrib
      codeowners:
        active:
        - armstrmi
        - pjanotti
      unsupported_platforms:
      - darwin
      - linux
- name: windowsperfcountersreceiver
  metadata:
    type: windowsperfcounters
    status:
      class: receiver
      stability:
        beta:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - dashpole
        - alxbl
        - pjanotti
        seeking_new: true
      unsupported_platforms:
      - darwin
      - linux
- name: windowsservicereceiver
  metadata:
    type: windowsservice
    status:
      class: receiver
      stability:
        development:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - pjanotti
        - shalper2
      unsupported_platforms:
      - darwin
      - linux
    attributes:
      name:
        description: The name of the windows Service being reported.
        type: string
      startup_mode:
        description: Startup mode of Windows Service
        type: string
        enum:
        - auto_start
        - boot_start
        - demand_start
        - disabled
        - system_start
    metrics:
      windows.service.status:
        description: Gauge value containing service status as an integer value.
        unit: '{status}'
        enabled: true
        gauge:
          value_type: int
        attributes:
        - name
        - startup_mode
        stability:
          level: development
- name: xreceiver
  metadata:
    type: xreceiver
    status:
      class: pkg
      stability:
        development:
        - profiles
      codeowners:
        active:
        - mx-psi
        - dmathieu
      distributions:
      - core
- name: zipkinreceiver
  metadata:
    type: zipkin
    status:
      class: receiver
      stability:
        beta:
        - traces
      distributions:
      - contrib
      codeowners:
        active:
        - MovieStoreGuy
        - andrzej-stencel
        - crobert-1
- name: zookeeperreceiver
  metadata:
    type: zookeeper
    status:
      class: receiver
      stability:
        alpha:
        - metrics
      distributions:
      - contrib
      codeowners:
        active:
        - antonblock
        - akats7
        emeritus:
        - djaglowski
        seeking_new: true
